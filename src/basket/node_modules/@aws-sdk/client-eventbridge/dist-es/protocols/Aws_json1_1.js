import { __assign, __awaiter, __generator, __read } from "tslib";
import { HttpRequest as __HttpRequest } from "@aws-sdk/protocol-http";
import { decorateServiceException as __decorateServiceException, expectBoolean as __expectBoolean, expectInt32 as __expectInt32, expectLong as __expectLong, expectNonNull as __expectNonNull, expectNumber as __expectNumber, expectString as __expectString, parseEpochTimestamp as __parseEpochTimestamp, } from "@aws-sdk/smithy-client";
import { EventBridgeServiceException as __BaseException } from "../models/EventBridgeServiceException";
import { ConcurrentModificationException, IllegalStatusException, InternalException, InvalidEventPatternException, InvalidStateException, LimitExceededException, ManagedRuleException, OperationDisabledException, PolicyLengthExceededException, ResourceAlreadyExistsException, ResourceNotFoundException, } from "../models/models_0";
export var serializeAws_json1_1ActivateEventSourceCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {
    var headers, body;
    return __generator(this, function (_a) {
        headers = {
            "content-type": "application/x-amz-json-1.1",
            "x-amz-target": "AWSEvents.ActivateEventSource",
        };
        body = JSON.stringify(serializeAws_json1_1ActivateEventSourceRequest(input, context));
        return [2, buildHttpRpcRequest(context, headers, "/", undefined, body)];
    });
}); };
export var serializeAws_json1_1CancelReplayCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {
    var headers, body;
    return __generator(this, function (_a) {
        headers = {
            "content-type": "application/x-amz-json-1.1",
            "x-amz-target": "AWSEvents.CancelReplay",
        };
        body = JSON.stringify(serializeAws_json1_1CancelReplayRequest(input, context));
        return [2, buildHttpRpcRequest(context, headers, "/", undefined, body)];
    });
}); };
export var serializeAws_json1_1CreateApiDestinationCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {
    var headers, body;
    return __generator(this, function (_a) {
        headers = {
            "content-type": "application/x-amz-json-1.1",
            "x-amz-target": "AWSEvents.CreateApiDestination",
        };
        body = JSON.stringify(serializeAws_json1_1CreateApiDestinationRequest(input, context));
        return [2, buildHttpRpcRequest(context, headers, "/", undefined, body)];
    });
}); };
export var serializeAws_json1_1CreateArchiveCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {
    var headers, body;
    return __generator(this, function (_a) {
        headers = {
            "content-type": "application/x-amz-json-1.1",
            "x-amz-target": "AWSEvents.CreateArchive",
        };
        body = JSON.stringify(serializeAws_json1_1CreateArchiveRequest(input, context));
        return [2, buildHttpRpcRequest(context, headers, "/", undefined, body)];
    });
}); };
export var serializeAws_json1_1CreateConnectionCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {
    var headers, body;
    return __generator(this, function (_a) {
        headers = {
            "content-type": "application/x-amz-json-1.1",
            "x-amz-target": "AWSEvents.CreateConnection",
        };
        body = JSON.stringify(serializeAws_json1_1CreateConnectionRequest(input, context));
        return [2, buildHttpRpcRequest(context, headers, "/", undefined, body)];
    });
}); };
export var serializeAws_json1_1CreateEndpointCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {
    var headers, body;
    return __generator(this, function (_a) {
        headers = {
            "content-type": "application/x-amz-json-1.1",
            "x-amz-target": "AWSEvents.CreateEndpoint",
        };
        body = JSON.stringify(serializeAws_json1_1CreateEndpointRequest(input, context));
        return [2, buildHttpRpcRequest(context, headers, "/", undefined, body)];
    });
}); };
export var serializeAws_json1_1CreateEventBusCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {
    var headers, body;
    return __generator(this, function (_a) {
        headers = {
            "content-type": "application/x-amz-json-1.1",
            "x-amz-target": "AWSEvents.CreateEventBus",
        };
        body = JSON.stringify(serializeAws_json1_1CreateEventBusRequest(input, context));
        return [2, buildHttpRpcRequest(context, headers, "/", undefined, body)];
    });
}); };
export var serializeAws_json1_1CreatePartnerEventSourceCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {
    var headers, body;
    return __generator(this, function (_a) {
        headers = {
            "content-type": "application/x-amz-json-1.1",
            "x-amz-target": "AWSEvents.CreatePartnerEventSource",
        };
        body = JSON.stringify(serializeAws_json1_1CreatePartnerEventSourceRequest(input, context));
        return [2, buildHttpRpcRequest(context, headers, "/", undefined, body)];
    });
}); };
export var serializeAws_json1_1DeactivateEventSourceCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {
    var headers, body;
    return __generator(this, function (_a) {
        headers = {
            "content-type": "application/x-amz-json-1.1",
            "x-amz-target": "AWSEvents.DeactivateEventSource",
        };
        body = JSON.stringify(serializeAws_json1_1DeactivateEventSourceRequest(input, context));
        return [2, buildHttpRpcRequest(context, headers, "/", undefined, body)];
    });
}); };
export var serializeAws_json1_1DeauthorizeConnectionCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {
    var headers, body;
    return __generator(this, function (_a) {
        headers = {
            "content-type": "application/x-amz-json-1.1",
            "x-amz-target": "AWSEvents.DeauthorizeConnection",
        };
        body = JSON.stringify(serializeAws_json1_1DeauthorizeConnectionRequest(input, context));
        return [2, buildHttpRpcRequest(context, headers, "/", undefined, body)];
    });
}); };
export var serializeAws_json1_1DeleteApiDestinationCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {
    var headers, body;
    return __generator(this, function (_a) {
        headers = {
            "content-type": "application/x-amz-json-1.1",
            "x-amz-target": "AWSEvents.DeleteApiDestination",
        };
        body = JSON.stringify(serializeAws_json1_1DeleteApiDestinationRequest(input, context));
        return [2, buildHttpRpcRequest(context, headers, "/", undefined, body)];
    });
}); };
export var serializeAws_json1_1DeleteArchiveCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {
    var headers, body;
    return __generator(this, function (_a) {
        headers = {
            "content-type": "application/x-amz-json-1.1",
            "x-amz-target": "AWSEvents.DeleteArchive",
        };
        body = JSON.stringify(serializeAws_json1_1DeleteArchiveRequest(input, context));
        return [2, buildHttpRpcRequest(context, headers, "/", undefined, body)];
    });
}); };
export var serializeAws_json1_1DeleteConnectionCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {
    var headers, body;
    return __generator(this, function (_a) {
        headers = {
            "content-type": "application/x-amz-json-1.1",
            "x-amz-target": "AWSEvents.DeleteConnection",
        };
        body = JSON.stringify(serializeAws_json1_1DeleteConnectionRequest(input, context));
        return [2, buildHttpRpcRequest(context, headers, "/", undefined, body)];
    });
}); };
export var serializeAws_json1_1DeleteEndpointCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {
    var headers, body;
    return __generator(this, function (_a) {
        headers = {
            "content-type": "application/x-amz-json-1.1",
            "x-amz-target": "AWSEvents.DeleteEndpoint",
        };
        body = JSON.stringify(serializeAws_json1_1DeleteEndpointRequest(input, context));
        return [2, buildHttpRpcRequest(context, headers, "/", undefined, body)];
    });
}); };
export var serializeAws_json1_1DeleteEventBusCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {
    var headers, body;
    return __generator(this, function (_a) {
        headers = {
            "content-type": "application/x-amz-json-1.1",
            "x-amz-target": "AWSEvents.DeleteEventBus",
        };
        body = JSON.stringify(serializeAws_json1_1DeleteEventBusRequest(input, context));
        return [2, buildHttpRpcRequest(context, headers, "/", undefined, body)];
    });
}); };
export var serializeAws_json1_1DeletePartnerEventSourceCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {
    var headers, body;
    return __generator(this, function (_a) {
        headers = {
            "content-type": "application/x-amz-json-1.1",
            "x-amz-target": "AWSEvents.DeletePartnerEventSource",
        };
        body = JSON.stringify(serializeAws_json1_1DeletePartnerEventSourceRequest(input, context));
        return [2, buildHttpRpcRequest(context, headers, "/", undefined, body)];
    });
}); };
export var serializeAws_json1_1DeleteRuleCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {
    var headers, body;
    return __generator(this, function (_a) {
        headers = {
            "content-type": "application/x-amz-json-1.1",
            "x-amz-target": "AWSEvents.DeleteRule",
        };
        body = JSON.stringify(serializeAws_json1_1DeleteRuleRequest(input, context));
        return [2, buildHttpRpcRequest(context, headers, "/", undefined, body)];
    });
}); };
export var serializeAws_json1_1DescribeApiDestinationCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {
    var headers, body;
    return __generator(this, function (_a) {
        headers = {
            "content-type": "application/x-amz-json-1.1",
            "x-amz-target": "AWSEvents.DescribeApiDestination",
        };
        body = JSON.stringify(serializeAws_json1_1DescribeApiDestinationRequest(input, context));
        return [2, buildHttpRpcRequest(context, headers, "/", undefined, body)];
    });
}); };
export var serializeAws_json1_1DescribeArchiveCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {
    var headers, body;
    return __generator(this, function (_a) {
        headers = {
            "content-type": "application/x-amz-json-1.1",
            "x-amz-target": "AWSEvents.DescribeArchive",
        };
        body = JSON.stringify(serializeAws_json1_1DescribeArchiveRequest(input, context));
        return [2, buildHttpRpcRequest(context, headers, "/", undefined, body)];
    });
}); };
export var serializeAws_json1_1DescribeConnectionCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {
    var headers, body;
    return __generator(this, function (_a) {
        headers = {
            "content-type": "application/x-amz-json-1.1",
            "x-amz-target": "AWSEvents.DescribeConnection",
        };
        body = JSON.stringify(serializeAws_json1_1DescribeConnectionRequest(input, context));
        return [2, buildHttpRpcRequest(context, headers, "/", undefined, body)];
    });
}); };
export var serializeAws_json1_1DescribeEndpointCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {
    var headers, body;
    return __generator(this, function (_a) {
        headers = {
            "content-type": "application/x-amz-json-1.1",
            "x-amz-target": "AWSEvents.DescribeEndpoint",
        };
        body = JSON.stringify(serializeAws_json1_1DescribeEndpointRequest(input, context));
        return [2, buildHttpRpcRequest(context, headers, "/", undefined, body)];
    });
}); };
export var serializeAws_json1_1DescribeEventBusCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {
    var headers, body;
    return __generator(this, function (_a) {
        headers = {
            "content-type": "application/x-amz-json-1.1",
            "x-amz-target": "AWSEvents.DescribeEventBus",
        };
        body = JSON.stringify(serializeAws_json1_1DescribeEventBusRequest(input, context));
        return [2, buildHttpRpcRequest(context, headers, "/", undefined, body)];
    });
}); };
export var serializeAws_json1_1DescribeEventSourceCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {
    var headers, body;
    return __generator(this, function (_a) {
        headers = {
            "content-type": "application/x-amz-json-1.1",
            "x-amz-target": "AWSEvents.DescribeEventSource",
        };
        body = JSON.stringify(serializeAws_json1_1DescribeEventSourceRequest(input, context));
        return [2, buildHttpRpcRequest(context, headers, "/", undefined, body)];
    });
}); };
export var serializeAws_json1_1DescribePartnerEventSourceCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {
    var headers, body;
    return __generator(this, function (_a) {
        headers = {
            "content-type": "application/x-amz-json-1.1",
            "x-amz-target": "AWSEvents.DescribePartnerEventSource",
        };
        body = JSON.stringify(serializeAws_json1_1DescribePartnerEventSourceRequest(input, context));
        return [2, buildHttpRpcRequest(context, headers, "/", undefined, body)];
    });
}); };
export var serializeAws_json1_1DescribeReplayCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {
    var headers, body;
    return __generator(this, function (_a) {
        headers = {
            "content-type": "application/x-amz-json-1.1",
            "x-amz-target": "AWSEvents.DescribeReplay",
        };
        body = JSON.stringify(serializeAws_json1_1DescribeReplayRequest(input, context));
        return [2, buildHttpRpcRequest(context, headers, "/", undefined, body)];
    });
}); };
export var serializeAws_json1_1DescribeRuleCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {
    var headers, body;
    return __generator(this, function (_a) {
        headers = {
            "content-type": "application/x-amz-json-1.1",
            "x-amz-target": "AWSEvents.DescribeRule",
        };
        body = JSON.stringify(serializeAws_json1_1DescribeRuleRequest(input, context));
        return [2, buildHttpRpcRequest(context, headers, "/", undefined, body)];
    });
}); };
export var serializeAws_json1_1DisableRuleCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {
    var headers, body;
    return __generator(this, function (_a) {
        headers = {
            "content-type": "application/x-amz-json-1.1",
            "x-amz-target": "AWSEvents.DisableRule",
        };
        body = JSON.stringify(serializeAws_json1_1DisableRuleRequest(input, context));
        return [2, buildHttpRpcRequest(context, headers, "/", undefined, body)];
    });
}); };
export var serializeAws_json1_1EnableRuleCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {
    var headers, body;
    return __generator(this, function (_a) {
        headers = {
            "content-type": "application/x-amz-json-1.1",
            "x-amz-target": "AWSEvents.EnableRule",
        };
        body = JSON.stringify(serializeAws_json1_1EnableRuleRequest(input, context));
        return [2, buildHttpRpcRequest(context, headers, "/", undefined, body)];
    });
}); };
export var serializeAws_json1_1ListApiDestinationsCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {
    var headers, body;
    return __generator(this, function (_a) {
        headers = {
            "content-type": "application/x-amz-json-1.1",
            "x-amz-target": "AWSEvents.ListApiDestinations",
        };
        body = JSON.stringify(serializeAws_json1_1ListApiDestinationsRequest(input, context));
        return [2, buildHttpRpcRequest(context, headers, "/", undefined, body)];
    });
}); };
export var serializeAws_json1_1ListArchivesCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {
    var headers, body;
    return __generator(this, function (_a) {
        headers = {
            "content-type": "application/x-amz-json-1.1",
            "x-amz-target": "AWSEvents.ListArchives",
        };
        body = JSON.stringify(serializeAws_json1_1ListArchivesRequest(input, context));
        return [2, buildHttpRpcRequest(context, headers, "/", undefined, body)];
    });
}); };
export var serializeAws_json1_1ListConnectionsCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {
    var headers, body;
    return __generator(this, function (_a) {
        headers = {
            "content-type": "application/x-amz-json-1.1",
            "x-amz-target": "AWSEvents.ListConnections",
        };
        body = JSON.stringify(serializeAws_json1_1ListConnectionsRequest(input, context));
        return [2, buildHttpRpcRequest(context, headers, "/", undefined, body)];
    });
}); };
export var serializeAws_json1_1ListEndpointsCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {
    var headers, body;
    return __generator(this, function (_a) {
        headers = {
            "content-type": "application/x-amz-json-1.1",
            "x-amz-target": "AWSEvents.ListEndpoints",
        };
        body = JSON.stringify(serializeAws_json1_1ListEndpointsRequest(input, context));
        return [2, buildHttpRpcRequest(context, headers, "/", undefined, body)];
    });
}); };
export var serializeAws_json1_1ListEventBusesCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {
    var headers, body;
    return __generator(this, function (_a) {
        headers = {
            "content-type": "application/x-amz-json-1.1",
            "x-amz-target": "AWSEvents.ListEventBuses",
        };
        body = JSON.stringify(serializeAws_json1_1ListEventBusesRequest(input, context));
        return [2, buildHttpRpcRequest(context, headers, "/", undefined, body)];
    });
}); };
export var serializeAws_json1_1ListEventSourcesCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {
    var headers, body;
    return __generator(this, function (_a) {
        headers = {
            "content-type": "application/x-amz-json-1.1",
            "x-amz-target": "AWSEvents.ListEventSources",
        };
        body = JSON.stringify(serializeAws_json1_1ListEventSourcesRequest(input, context));
        return [2, buildHttpRpcRequest(context, headers, "/", undefined, body)];
    });
}); };
export var serializeAws_json1_1ListPartnerEventSourceAccountsCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {
    var headers, body;
    return __generator(this, function (_a) {
        headers = {
            "content-type": "application/x-amz-json-1.1",
            "x-amz-target": "AWSEvents.ListPartnerEventSourceAccounts",
        };
        body = JSON.stringify(serializeAws_json1_1ListPartnerEventSourceAccountsRequest(input, context));
        return [2, buildHttpRpcRequest(context, headers, "/", undefined, body)];
    });
}); };
export var serializeAws_json1_1ListPartnerEventSourcesCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {
    var headers, body;
    return __generator(this, function (_a) {
        headers = {
            "content-type": "application/x-amz-json-1.1",
            "x-amz-target": "AWSEvents.ListPartnerEventSources",
        };
        body = JSON.stringify(serializeAws_json1_1ListPartnerEventSourcesRequest(input, context));
        return [2, buildHttpRpcRequest(context, headers, "/", undefined, body)];
    });
}); };
export var serializeAws_json1_1ListReplaysCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {
    var headers, body;
    return __generator(this, function (_a) {
        headers = {
            "content-type": "application/x-amz-json-1.1",
            "x-amz-target": "AWSEvents.ListReplays",
        };
        body = JSON.stringify(serializeAws_json1_1ListReplaysRequest(input, context));
        return [2, buildHttpRpcRequest(context, headers, "/", undefined, body)];
    });
}); };
export var serializeAws_json1_1ListRuleNamesByTargetCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {
    var headers, body;
    return __generator(this, function (_a) {
        headers = {
            "content-type": "application/x-amz-json-1.1",
            "x-amz-target": "AWSEvents.ListRuleNamesByTarget",
        };
        body = JSON.stringify(serializeAws_json1_1ListRuleNamesByTargetRequest(input, context));
        return [2, buildHttpRpcRequest(context, headers, "/", undefined, body)];
    });
}); };
export var serializeAws_json1_1ListRulesCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {
    var headers, body;
    return __generator(this, function (_a) {
        headers = {
            "content-type": "application/x-amz-json-1.1",
            "x-amz-target": "AWSEvents.ListRules",
        };
        body = JSON.stringify(serializeAws_json1_1ListRulesRequest(input, context));
        return [2, buildHttpRpcRequest(context, headers, "/", undefined, body)];
    });
}); };
export var serializeAws_json1_1ListTagsForResourceCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {
    var headers, body;
    return __generator(this, function (_a) {
        headers = {
            "content-type": "application/x-amz-json-1.1",
            "x-amz-target": "AWSEvents.ListTagsForResource",
        };
        body = JSON.stringify(serializeAws_json1_1ListTagsForResourceRequest(input, context));
        return [2, buildHttpRpcRequest(context, headers, "/", undefined, body)];
    });
}); };
export var serializeAws_json1_1ListTargetsByRuleCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {
    var headers, body;
    return __generator(this, function (_a) {
        headers = {
            "content-type": "application/x-amz-json-1.1",
            "x-amz-target": "AWSEvents.ListTargetsByRule",
        };
        body = JSON.stringify(serializeAws_json1_1ListTargetsByRuleRequest(input, context));
        return [2, buildHttpRpcRequest(context, headers, "/", undefined, body)];
    });
}); };
export var serializeAws_json1_1PutEventsCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {
    var headers, body;
    return __generator(this, function (_a) {
        headers = {
            "content-type": "application/x-amz-json-1.1",
            "x-amz-target": "AWSEvents.PutEvents",
        };
        body = JSON.stringify(serializeAws_json1_1PutEventsRequest(input, context));
        return [2, buildHttpRpcRequest(context, headers, "/", undefined, body)];
    });
}); };
export var serializeAws_json1_1PutPartnerEventsCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {
    var headers, body;
    return __generator(this, function (_a) {
        headers = {
            "content-type": "application/x-amz-json-1.1",
            "x-amz-target": "AWSEvents.PutPartnerEvents",
        };
        body = JSON.stringify(serializeAws_json1_1PutPartnerEventsRequest(input, context));
        return [2, buildHttpRpcRequest(context, headers, "/", undefined, body)];
    });
}); };
export var serializeAws_json1_1PutPermissionCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {
    var headers, body;
    return __generator(this, function (_a) {
        headers = {
            "content-type": "application/x-amz-json-1.1",
            "x-amz-target": "AWSEvents.PutPermission",
        };
        body = JSON.stringify(serializeAws_json1_1PutPermissionRequest(input, context));
        return [2, buildHttpRpcRequest(context, headers, "/", undefined, body)];
    });
}); };
export var serializeAws_json1_1PutRuleCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {
    var headers, body;
    return __generator(this, function (_a) {
        headers = {
            "content-type": "application/x-amz-json-1.1",
            "x-amz-target": "AWSEvents.PutRule",
        };
        body = JSON.stringify(serializeAws_json1_1PutRuleRequest(input, context));
        return [2, buildHttpRpcRequest(context, headers, "/", undefined, body)];
    });
}); };
export var serializeAws_json1_1PutTargetsCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {
    var headers, body;
    return __generator(this, function (_a) {
        headers = {
            "content-type": "application/x-amz-json-1.1",
            "x-amz-target": "AWSEvents.PutTargets",
        };
        body = JSON.stringify(serializeAws_json1_1PutTargetsRequest(input, context));
        return [2, buildHttpRpcRequest(context, headers, "/", undefined, body)];
    });
}); };
export var serializeAws_json1_1RemovePermissionCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {
    var headers, body;
    return __generator(this, function (_a) {
        headers = {
            "content-type": "application/x-amz-json-1.1",
            "x-amz-target": "AWSEvents.RemovePermission",
        };
        body = JSON.stringify(serializeAws_json1_1RemovePermissionRequest(input, context));
        return [2, buildHttpRpcRequest(context, headers, "/", undefined, body)];
    });
}); };
export var serializeAws_json1_1RemoveTargetsCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {
    var headers, body;
    return __generator(this, function (_a) {
        headers = {
            "content-type": "application/x-amz-json-1.1",
            "x-amz-target": "AWSEvents.RemoveTargets",
        };
        body = JSON.stringify(serializeAws_json1_1RemoveTargetsRequest(input, context));
        return [2, buildHttpRpcRequest(context, headers, "/", undefined, body)];
    });
}); };
export var serializeAws_json1_1StartReplayCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {
    var headers, body;
    return __generator(this, function (_a) {
        headers = {
            "content-type": "application/x-amz-json-1.1",
            "x-amz-target": "AWSEvents.StartReplay",
        };
        body = JSON.stringify(serializeAws_json1_1StartReplayRequest(input, context));
        return [2, buildHttpRpcRequest(context, headers, "/", undefined, body)];
    });
}); };
export var serializeAws_json1_1TagResourceCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {
    var headers, body;
    return __generator(this, function (_a) {
        headers = {
            "content-type": "application/x-amz-json-1.1",
            "x-amz-target": "AWSEvents.TagResource",
        };
        body = JSON.stringify(serializeAws_json1_1TagResourceRequest(input, context));
        return [2, buildHttpRpcRequest(context, headers, "/", undefined, body)];
    });
}); };
export var serializeAws_json1_1TestEventPatternCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {
    var headers, body;
    return __generator(this, function (_a) {
        headers = {
            "content-type": "application/x-amz-json-1.1",
            "x-amz-target": "AWSEvents.TestEventPattern",
        };
        body = JSON.stringify(serializeAws_json1_1TestEventPatternRequest(input, context));
        return [2, buildHttpRpcRequest(context, headers, "/", undefined, body)];
    });
}); };
export var serializeAws_json1_1UntagResourceCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {
    var headers, body;
    return __generator(this, function (_a) {
        headers = {
            "content-type": "application/x-amz-json-1.1",
            "x-amz-target": "AWSEvents.UntagResource",
        };
        body = JSON.stringify(serializeAws_json1_1UntagResourceRequest(input, context));
        return [2, buildHttpRpcRequest(context, headers, "/", undefined, body)];
    });
}); };
export var serializeAws_json1_1UpdateApiDestinationCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {
    var headers, body;
    return __generator(this, function (_a) {
        headers = {
            "content-type": "application/x-amz-json-1.1",
            "x-amz-target": "AWSEvents.UpdateApiDestination",
        };
        body = JSON.stringify(serializeAws_json1_1UpdateApiDestinationRequest(input, context));
        return [2, buildHttpRpcRequest(context, headers, "/", undefined, body)];
    });
}); };
export var serializeAws_json1_1UpdateArchiveCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {
    var headers, body;
    return __generator(this, function (_a) {
        headers = {
            "content-type": "application/x-amz-json-1.1",
            "x-amz-target": "AWSEvents.UpdateArchive",
        };
        body = JSON.stringify(serializeAws_json1_1UpdateArchiveRequest(input, context));
        return [2, buildHttpRpcRequest(context, headers, "/", undefined, body)];
    });
}); };
export var serializeAws_json1_1UpdateConnectionCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {
    var headers, body;
    return __generator(this, function (_a) {
        headers = {
            "content-type": "application/x-amz-json-1.1",
            "x-amz-target": "AWSEvents.UpdateConnection",
        };
        body = JSON.stringify(serializeAws_json1_1UpdateConnectionRequest(input, context));
        return [2, buildHttpRpcRequest(context, headers, "/", undefined, body)];
    });
}); };
export var serializeAws_json1_1UpdateEndpointCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {
    var headers, body;
    return __generator(this, function (_a) {
        headers = {
            "content-type": "application/x-amz-json-1.1",
            "x-amz-target": "AWSEvents.UpdateEndpoint",
        };
        body = JSON.stringify(serializeAws_json1_1UpdateEndpointRequest(input, context));
        return [2, buildHttpRpcRequest(context, headers, "/", undefined, body)];
    });
}); };
export var deserializeAws_json1_1ActivateEventSourceCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var response;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode >= 300) {
                    return [2, deserializeAws_json1_1ActivateEventSourceCommandError(output, context)];
                }
                return [4, collectBody(output.body, context)];
            case 1:
                _a.sent();
                response = {
                    $metadata: deserializeMetadata(output),
                };
                return [2, Promise.resolve(response)];
        }
    });
}); };
var deserializeAws_json1_1ActivateEventSourceCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, _b, parsedBody, $metadata, statusCode;
    var _c;
    return __generator(this, function (_d) {
        switch (_d.label) {
            case 0:
                _a = [__assign({}, output)];
                _c = {};
                return [4, parseBody(output.body, context)];
            case 1:
                parsedOutput = __assign.apply(void 0, _a.concat([(_c.body = _d.sent(), _c)]));
                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
                _b = errorCode;
                switch (_b) {
                    case "ConcurrentModificationException": return [3, 2];
                    case "com.amazonaws.eventbridge#ConcurrentModificationException": return [3, 2];
                    case "InternalException": return [3, 4];
                    case "com.amazonaws.eventbridge#InternalException": return [3, 4];
                    case "InvalidStateException": return [3, 6];
                    case "com.amazonaws.eventbridge#InvalidStateException": return [3, 6];
                    case "OperationDisabledException": return [3, 8];
                    case "com.amazonaws.eventbridge#OperationDisabledException": return [3, 8];
                    case "ResourceNotFoundException": return [3, 10];
                    case "com.amazonaws.eventbridge#ResourceNotFoundException": return [3, 10];
                }
                return [3, 12];
            case 2: return [4, deserializeAws_json1_1ConcurrentModificationExceptionResponse(parsedOutput, context)];
            case 3: throw _d.sent();
            case 4: return [4, deserializeAws_json1_1InternalExceptionResponse(parsedOutput, context)];
            case 5: throw _d.sent();
            case 6: return [4, deserializeAws_json1_1InvalidStateExceptionResponse(parsedOutput, context)];
            case 7: throw _d.sent();
            case 8: return [4, deserializeAws_json1_1OperationDisabledExceptionResponse(parsedOutput, context)];
            case 9: throw _d.sent();
            case 10: return [4, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];
            case 11: throw _d.sent();
            case 12:
                parsedBody = parsedOutput.body;
                $metadata = deserializeMetadata(output);
                statusCode = $metadata.httpStatusCode ? $metadata.httpStatusCode + "" : undefined;
                response = new __BaseException({
                    name: parsedBody.code || parsedBody.Code || errorCode || statusCode || "UnknowError",
                    $fault: "client",
                    $metadata: $metadata,
                });
                throw __decorateServiceException(response, parsedBody);
        }
    });
}); };
export var deserializeAws_json1_1CancelReplayCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var data, contents, response;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode >= 300) {
                    return [2, deserializeAws_json1_1CancelReplayCommandError(output, context)];
                }
                return [4, parseBody(output.body, context)];
            case 1:
                data = _a.sent();
                contents = {};
                contents = deserializeAws_json1_1CancelReplayResponse(data, context);
                response = __assign({ $metadata: deserializeMetadata(output) }, contents);
                return [2, Promise.resolve(response)];
        }
    });
}); };
var deserializeAws_json1_1CancelReplayCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, _b, parsedBody, $metadata, statusCode;
    var _c;
    return __generator(this, function (_d) {
        switch (_d.label) {
            case 0:
                _a = [__assign({}, output)];
                _c = {};
                return [4, parseBody(output.body, context)];
            case 1:
                parsedOutput = __assign.apply(void 0, _a.concat([(_c.body = _d.sent(), _c)]));
                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
                _b = errorCode;
                switch (_b) {
                    case "ConcurrentModificationException": return [3, 2];
                    case "com.amazonaws.eventbridge#ConcurrentModificationException": return [3, 2];
                    case "IllegalStatusException": return [3, 4];
                    case "com.amazonaws.eventbridge#IllegalStatusException": return [3, 4];
                    case "InternalException": return [3, 6];
                    case "com.amazonaws.eventbridge#InternalException": return [3, 6];
                    case "ResourceNotFoundException": return [3, 8];
                    case "com.amazonaws.eventbridge#ResourceNotFoundException": return [3, 8];
                }
                return [3, 10];
            case 2: return [4, deserializeAws_json1_1ConcurrentModificationExceptionResponse(parsedOutput, context)];
            case 3: throw _d.sent();
            case 4: return [4, deserializeAws_json1_1IllegalStatusExceptionResponse(parsedOutput, context)];
            case 5: throw _d.sent();
            case 6: return [4, deserializeAws_json1_1InternalExceptionResponse(parsedOutput, context)];
            case 7: throw _d.sent();
            case 8: return [4, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];
            case 9: throw _d.sent();
            case 10:
                parsedBody = parsedOutput.body;
                $metadata = deserializeMetadata(output);
                statusCode = $metadata.httpStatusCode ? $metadata.httpStatusCode + "" : undefined;
                response = new __BaseException({
                    name: parsedBody.code || parsedBody.Code || errorCode || statusCode || "UnknowError",
                    $fault: "client",
                    $metadata: $metadata,
                });
                throw __decorateServiceException(response, parsedBody);
        }
    });
}); };
export var deserializeAws_json1_1CreateApiDestinationCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var data, contents, response;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode >= 300) {
                    return [2, deserializeAws_json1_1CreateApiDestinationCommandError(output, context)];
                }
                return [4, parseBody(output.body, context)];
            case 1:
                data = _a.sent();
                contents = {};
                contents = deserializeAws_json1_1CreateApiDestinationResponse(data, context);
                response = __assign({ $metadata: deserializeMetadata(output) }, contents);
                return [2, Promise.resolve(response)];
        }
    });
}); };
var deserializeAws_json1_1CreateApiDestinationCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, _b, parsedBody, $metadata, statusCode;
    var _c;
    return __generator(this, function (_d) {
        switch (_d.label) {
            case 0:
                _a = [__assign({}, output)];
                _c = {};
                return [4, parseBody(output.body, context)];
            case 1:
                parsedOutput = __assign.apply(void 0, _a.concat([(_c.body = _d.sent(), _c)]));
                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
                _b = errorCode;
                switch (_b) {
                    case "InternalException": return [3, 2];
                    case "com.amazonaws.eventbridge#InternalException": return [3, 2];
                    case "LimitExceededException": return [3, 4];
                    case "com.amazonaws.eventbridge#LimitExceededException": return [3, 4];
                    case "ResourceAlreadyExistsException": return [3, 6];
                    case "com.amazonaws.eventbridge#ResourceAlreadyExistsException": return [3, 6];
                    case "ResourceNotFoundException": return [3, 8];
                    case "com.amazonaws.eventbridge#ResourceNotFoundException": return [3, 8];
                }
                return [3, 10];
            case 2: return [4, deserializeAws_json1_1InternalExceptionResponse(parsedOutput, context)];
            case 3: throw _d.sent();
            case 4: return [4, deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];
            case 5: throw _d.sent();
            case 6: return [4, deserializeAws_json1_1ResourceAlreadyExistsExceptionResponse(parsedOutput, context)];
            case 7: throw _d.sent();
            case 8: return [4, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];
            case 9: throw _d.sent();
            case 10:
                parsedBody = parsedOutput.body;
                $metadata = deserializeMetadata(output);
                statusCode = $metadata.httpStatusCode ? $metadata.httpStatusCode + "" : undefined;
                response = new __BaseException({
                    name: parsedBody.code || parsedBody.Code || errorCode || statusCode || "UnknowError",
                    $fault: "client",
                    $metadata: $metadata,
                });
                throw __decorateServiceException(response, parsedBody);
        }
    });
}); };
export var deserializeAws_json1_1CreateArchiveCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var data, contents, response;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode >= 300) {
                    return [2, deserializeAws_json1_1CreateArchiveCommandError(output, context)];
                }
                return [4, parseBody(output.body, context)];
            case 1:
                data = _a.sent();
                contents = {};
                contents = deserializeAws_json1_1CreateArchiveResponse(data, context);
                response = __assign({ $metadata: deserializeMetadata(output) }, contents);
                return [2, Promise.resolve(response)];
        }
    });
}); };
var deserializeAws_json1_1CreateArchiveCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, _b, parsedBody, $metadata, statusCode;
    var _c;
    return __generator(this, function (_d) {
        switch (_d.label) {
            case 0:
                _a = [__assign({}, output)];
                _c = {};
                return [4, parseBody(output.body, context)];
            case 1:
                parsedOutput = __assign.apply(void 0, _a.concat([(_c.body = _d.sent(), _c)]));
                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
                _b = errorCode;
                switch (_b) {
                    case "ConcurrentModificationException": return [3, 2];
                    case "com.amazonaws.eventbridge#ConcurrentModificationException": return [3, 2];
                    case "InternalException": return [3, 4];
                    case "com.amazonaws.eventbridge#InternalException": return [3, 4];
                    case "InvalidEventPatternException": return [3, 6];
                    case "com.amazonaws.eventbridge#InvalidEventPatternException": return [3, 6];
                    case "LimitExceededException": return [3, 8];
                    case "com.amazonaws.eventbridge#LimitExceededException": return [3, 8];
                    case "ResourceAlreadyExistsException": return [3, 10];
                    case "com.amazonaws.eventbridge#ResourceAlreadyExistsException": return [3, 10];
                    case "ResourceNotFoundException": return [3, 12];
                    case "com.amazonaws.eventbridge#ResourceNotFoundException": return [3, 12];
                }
                return [3, 14];
            case 2: return [4, deserializeAws_json1_1ConcurrentModificationExceptionResponse(parsedOutput, context)];
            case 3: throw _d.sent();
            case 4: return [4, deserializeAws_json1_1InternalExceptionResponse(parsedOutput, context)];
            case 5: throw _d.sent();
            case 6: return [4, deserializeAws_json1_1InvalidEventPatternExceptionResponse(parsedOutput, context)];
            case 7: throw _d.sent();
            case 8: return [4, deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];
            case 9: throw _d.sent();
            case 10: return [4, deserializeAws_json1_1ResourceAlreadyExistsExceptionResponse(parsedOutput, context)];
            case 11: throw _d.sent();
            case 12: return [4, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];
            case 13: throw _d.sent();
            case 14:
                parsedBody = parsedOutput.body;
                $metadata = deserializeMetadata(output);
                statusCode = $metadata.httpStatusCode ? $metadata.httpStatusCode + "" : undefined;
                response = new __BaseException({
                    name: parsedBody.code || parsedBody.Code || errorCode || statusCode || "UnknowError",
                    $fault: "client",
                    $metadata: $metadata,
                });
                throw __decorateServiceException(response, parsedBody);
        }
    });
}); };
export var deserializeAws_json1_1CreateConnectionCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var data, contents, response;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode >= 300) {
                    return [2, deserializeAws_json1_1CreateConnectionCommandError(output, context)];
                }
                return [4, parseBody(output.body, context)];
            case 1:
                data = _a.sent();
                contents = {};
                contents = deserializeAws_json1_1CreateConnectionResponse(data, context);
                response = __assign({ $metadata: deserializeMetadata(output) }, contents);
                return [2, Promise.resolve(response)];
        }
    });
}); };
var deserializeAws_json1_1CreateConnectionCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, _b, parsedBody, $metadata, statusCode;
    var _c;
    return __generator(this, function (_d) {
        switch (_d.label) {
            case 0:
                _a = [__assign({}, output)];
                _c = {};
                return [4, parseBody(output.body, context)];
            case 1:
                parsedOutput = __assign.apply(void 0, _a.concat([(_c.body = _d.sent(), _c)]));
                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
                _b = errorCode;
                switch (_b) {
                    case "InternalException": return [3, 2];
                    case "com.amazonaws.eventbridge#InternalException": return [3, 2];
                    case "LimitExceededException": return [3, 4];
                    case "com.amazonaws.eventbridge#LimitExceededException": return [3, 4];
                    case "ResourceAlreadyExistsException": return [3, 6];
                    case "com.amazonaws.eventbridge#ResourceAlreadyExistsException": return [3, 6];
                }
                return [3, 8];
            case 2: return [4, deserializeAws_json1_1InternalExceptionResponse(parsedOutput, context)];
            case 3: throw _d.sent();
            case 4: return [4, deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];
            case 5: throw _d.sent();
            case 6: return [4, deserializeAws_json1_1ResourceAlreadyExistsExceptionResponse(parsedOutput, context)];
            case 7: throw _d.sent();
            case 8:
                parsedBody = parsedOutput.body;
                $metadata = deserializeMetadata(output);
                statusCode = $metadata.httpStatusCode ? $metadata.httpStatusCode + "" : undefined;
                response = new __BaseException({
                    name: parsedBody.code || parsedBody.Code || errorCode || statusCode || "UnknowError",
                    $fault: "client",
                    $metadata: $metadata,
                });
                throw __decorateServiceException(response, parsedBody);
        }
    });
}); };
export var deserializeAws_json1_1CreateEndpointCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var data, contents, response;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode >= 300) {
                    return [2, deserializeAws_json1_1CreateEndpointCommandError(output, context)];
                }
                return [4, parseBody(output.body, context)];
            case 1:
                data = _a.sent();
                contents = {};
                contents = deserializeAws_json1_1CreateEndpointResponse(data, context);
                response = __assign({ $metadata: deserializeMetadata(output) }, contents);
                return [2, Promise.resolve(response)];
        }
    });
}); };
var deserializeAws_json1_1CreateEndpointCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, _b, parsedBody, $metadata, statusCode;
    var _c;
    return __generator(this, function (_d) {
        switch (_d.label) {
            case 0:
                _a = [__assign({}, output)];
                _c = {};
                return [4, parseBody(output.body, context)];
            case 1:
                parsedOutput = __assign.apply(void 0, _a.concat([(_c.body = _d.sent(), _c)]));
                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
                _b = errorCode;
                switch (_b) {
                    case "InternalException": return [3, 2];
                    case "com.amazonaws.eventbridge#InternalException": return [3, 2];
                    case "LimitExceededException": return [3, 4];
                    case "com.amazonaws.eventbridge#LimitExceededException": return [3, 4];
                    case "ResourceAlreadyExistsException": return [3, 6];
                    case "com.amazonaws.eventbridge#ResourceAlreadyExistsException": return [3, 6];
                }
                return [3, 8];
            case 2: return [4, deserializeAws_json1_1InternalExceptionResponse(parsedOutput, context)];
            case 3: throw _d.sent();
            case 4: return [4, deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];
            case 5: throw _d.sent();
            case 6: return [4, deserializeAws_json1_1ResourceAlreadyExistsExceptionResponse(parsedOutput, context)];
            case 7: throw _d.sent();
            case 8:
                parsedBody = parsedOutput.body;
                $metadata = deserializeMetadata(output);
                statusCode = $metadata.httpStatusCode ? $metadata.httpStatusCode + "" : undefined;
                response = new __BaseException({
                    name: parsedBody.code || parsedBody.Code || errorCode || statusCode || "UnknowError",
                    $fault: "client",
                    $metadata: $metadata,
                });
                throw __decorateServiceException(response, parsedBody);
        }
    });
}); };
export var deserializeAws_json1_1CreateEventBusCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var data, contents, response;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode >= 300) {
                    return [2, deserializeAws_json1_1CreateEventBusCommandError(output, context)];
                }
                return [4, parseBody(output.body, context)];
            case 1:
                data = _a.sent();
                contents = {};
                contents = deserializeAws_json1_1CreateEventBusResponse(data, context);
                response = __assign({ $metadata: deserializeMetadata(output) }, contents);
                return [2, Promise.resolve(response)];
        }
    });
}); };
var deserializeAws_json1_1CreateEventBusCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, _b, parsedBody, $metadata, statusCode;
    var _c;
    return __generator(this, function (_d) {
        switch (_d.label) {
            case 0:
                _a = [__assign({}, output)];
                _c = {};
                return [4, parseBody(output.body, context)];
            case 1:
                parsedOutput = __assign.apply(void 0, _a.concat([(_c.body = _d.sent(), _c)]));
                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
                _b = errorCode;
                switch (_b) {
                    case "ConcurrentModificationException": return [3, 2];
                    case "com.amazonaws.eventbridge#ConcurrentModificationException": return [3, 2];
                    case "InternalException": return [3, 4];
                    case "com.amazonaws.eventbridge#InternalException": return [3, 4];
                    case "InvalidStateException": return [3, 6];
                    case "com.amazonaws.eventbridge#InvalidStateException": return [3, 6];
                    case "LimitExceededException": return [3, 8];
                    case "com.amazonaws.eventbridge#LimitExceededException": return [3, 8];
                    case "OperationDisabledException": return [3, 10];
                    case "com.amazonaws.eventbridge#OperationDisabledException": return [3, 10];
                    case "ResourceAlreadyExistsException": return [3, 12];
                    case "com.amazonaws.eventbridge#ResourceAlreadyExistsException": return [3, 12];
                    case "ResourceNotFoundException": return [3, 14];
                    case "com.amazonaws.eventbridge#ResourceNotFoundException": return [3, 14];
                }
                return [3, 16];
            case 2: return [4, deserializeAws_json1_1ConcurrentModificationExceptionResponse(parsedOutput, context)];
            case 3: throw _d.sent();
            case 4: return [4, deserializeAws_json1_1InternalExceptionResponse(parsedOutput, context)];
            case 5: throw _d.sent();
            case 6: return [4, deserializeAws_json1_1InvalidStateExceptionResponse(parsedOutput, context)];
            case 7: throw _d.sent();
            case 8: return [4, deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];
            case 9: throw _d.sent();
            case 10: return [4, deserializeAws_json1_1OperationDisabledExceptionResponse(parsedOutput, context)];
            case 11: throw _d.sent();
            case 12: return [4, deserializeAws_json1_1ResourceAlreadyExistsExceptionResponse(parsedOutput, context)];
            case 13: throw _d.sent();
            case 14: return [4, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];
            case 15: throw _d.sent();
            case 16:
                parsedBody = parsedOutput.body;
                $metadata = deserializeMetadata(output);
                statusCode = $metadata.httpStatusCode ? $metadata.httpStatusCode + "" : undefined;
                response = new __BaseException({
                    name: parsedBody.code || parsedBody.Code || errorCode || statusCode || "UnknowError",
                    $fault: "client",
                    $metadata: $metadata,
                });
                throw __decorateServiceException(response, parsedBody);
        }
    });
}); };
export var deserializeAws_json1_1CreatePartnerEventSourceCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var data, contents, response;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode >= 300) {
                    return [2, deserializeAws_json1_1CreatePartnerEventSourceCommandError(output, context)];
                }
                return [4, parseBody(output.body, context)];
            case 1:
                data = _a.sent();
                contents = {};
                contents = deserializeAws_json1_1CreatePartnerEventSourceResponse(data, context);
                response = __assign({ $metadata: deserializeMetadata(output) }, contents);
                return [2, Promise.resolve(response)];
        }
    });
}); };
var deserializeAws_json1_1CreatePartnerEventSourceCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, _b, parsedBody, $metadata, statusCode;
    var _c;
    return __generator(this, function (_d) {
        switch (_d.label) {
            case 0:
                _a = [__assign({}, output)];
                _c = {};
                return [4, parseBody(output.body, context)];
            case 1:
                parsedOutput = __assign.apply(void 0, _a.concat([(_c.body = _d.sent(), _c)]));
                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
                _b = errorCode;
                switch (_b) {
                    case "ConcurrentModificationException": return [3, 2];
                    case "com.amazonaws.eventbridge#ConcurrentModificationException": return [3, 2];
                    case "InternalException": return [3, 4];
                    case "com.amazonaws.eventbridge#InternalException": return [3, 4];
                    case "LimitExceededException": return [3, 6];
                    case "com.amazonaws.eventbridge#LimitExceededException": return [3, 6];
                    case "OperationDisabledException": return [3, 8];
                    case "com.amazonaws.eventbridge#OperationDisabledException": return [3, 8];
                    case "ResourceAlreadyExistsException": return [3, 10];
                    case "com.amazonaws.eventbridge#ResourceAlreadyExistsException": return [3, 10];
                }
                return [3, 12];
            case 2: return [4, deserializeAws_json1_1ConcurrentModificationExceptionResponse(parsedOutput, context)];
            case 3: throw _d.sent();
            case 4: return [4, deserializeAws_json1_1InternalExceptionResponse(parsedOutput, context)];
            case 5: throw _d.sent();
            case 6: return [4, deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];
            case 7: throw _d.sent();
            case 8: return [4, deserializeAws_json1_1OperationDisabledExceptionResponse(parsedOutput, context)];
            case 9: throw _d.sent();
            case 10: return [4, deserializeAws_json1_1ResourceAlreadyExistsExceptionResponse(parsedOutput, context)];
            case 11: throw _d.sent();
            case 12:
                parsedBody = parsedOutput.body;
                $metadata = deserializeMetadata(output);
                statusCode = $metadata.httpStatusCode ? $metadata.httpStatusCode + "" : undefined;
                response = new __BaseException({
                    name: parsedBody.code || parsedBody.Code || errorCode || statusCode || "UnknowError",
                    $fault: "client",
                    $metadata: $metadata,
                });
                throw __decorateServiceException(response, parsedBody);
        }
    });
}); };
export var deserializeAws_json1_1DeactivateEventSourceCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var response;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode >= 300) {
                    return [2, deserializeAws_json1_1DeactivateEventSourceCommandError(output, context)];
                }
                return [4, collectBody(output.body, context)];
            case 1:
                _a.sent();
                response = {
                    $metadata: deserializeMetadata(output),
                };
                return [2, Promise.resolve(response)];
        }
    });
}); };
var deserializeAws_json1_1DeactivateEventSourceCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, _b, parsedBody, $metadata, statusCode;
    var _c;
    return __generator(this, function (_d) {
        switch (_d.label) {
            case 0:
                _a = [__assign({}, output)];
                _c = {};
                return [4, parseBody(output.body, context)];
            case 1:
                parsedOutput = __assign.apply(void 0, _a.concat([(_c.body = _d.sent(), _c)]));
                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
                _b = errorCode;
                switch (_b) {
                    case "ConcurrentModificationException": return [3, 2];
                    case "com.amazonaws.eventbridge#ConcurrentModificationException": return [3, 2];
                    case "InternalException": return [3, 4];
                    case "com.amazonaws.eventbridge#InternalException": return [3, 4];
                    case "InvalidStateException": return [3, 6];
                    case "com.amazonaws.eventbridge#InvalidStateException": return [3, 6];
                    case "OperationDisabledException": return [3, 8];
                    case "com.amazonaws.eventbridge#OperationDisabledException": return [3, 8];
                    case "ResourceNotFoundException": return [3, 10];
                    case "com.amazonaws.eventbridge#ResourceNotFoundException": return [3, 10];
                }
                return [3, 12];
            case 2: return [4, deserializeAws_json1_1ConcurrentModificationExceptionResponse(parsedOutput, context)];
            case 3: throw _d.sent();
            case 4: return [4, deserializeAws_json1_1InternalExceptionResponse(parsedOutput, context)];
            case 5: throw _d.sent();
            case 6: return [4, deserializeAws_json1_1InvalidStateExceptionResponse(parsedOutput, context)];
            case 7: throw _d.sent();
            case 8: return [4, deserializeAws_json1_1OperationDisabledExceptionResponse(parsedOutput, context)];
            case 9: throw _d.sent();
            case 10: return [4, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];
            case 11: throw _d.sent();
            case 12:
                parsedBody = parsedOutput.body;
                $metadata = deserializeMetadata(output);
                statusCode = $metadata.httpStatusCode ? $metadata.httpStatusCode + "" : undefined;
                response = new __BaseException({
                    name: parsedBody.code || parsedBody.Code || errorCode || statusCode || "UnknowError",
                    $fault: "client",
                    $metadata: $metadata,
                });
                throw __decorateServiceException(response, parsedBody);
        }
    });
}); };
export var deserializeAws_json1_1DeauthorizeConnectionCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var data, contents, response;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode >= 300) {
                    return [2, deserializeAws_json1_1DeauthorizeConnectionCommandError(output, context)];
                }
                return [4, parseBody(output.body, context)];
            case 1:
                data = _a.sent();
                contents = {};
                contents = deserializeAws_json1_1DeauthorizeConnectionResponse(data, context);
                response = __assign({ $metadata: deserializeMetadata(output) }, contents);
                return [2, Promise.resolve(response)];
        }
    });
}); };
var deserializeAws_json1_1DeauthorizeConnectionCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, _b, parsedBody, $metadata, statusCode;
    var _c;
    return __generator(this, function (_d) {
        switch (_d.label) {
            case 0:
                _a = [__assign({}, output)];
                _c = {};
                return [4, parseBody(output.body, context)];
            case 1:
                parsedOutput = __assign.apply(void 0, _a.concat([(_c.body = _d.sent(), _c)]));
                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
                _b = errorCode;
                switch (_b) {
                    case "ConcurrentModificationException": return [3, 2];
                    case "com.amazonaws.eventbridge#ConcurrentModificationException": return [3, 2];
                    case "InternalException": return [3, 4];
                    case "com.amazonaws.eventbridge#InternalException": return [3, 4];
                    case "ResourceNotFoundException": return [3, 6];
                    case "com.amazonaws.eventbridge#ResourceNotFoundException": return [3, 6];
                }
                return [3, 8];
            case 2: return [4, deserializeAws_json1_1ConcurrentModificationExceptionResponse(parsedOutput, context)];
            case 3: throw _d.sent();
            case 4: return [4, deserializeAws_json1_1InternalExceptionResponse(parsedOutput, context)];
            case 5: throw _d.sent();
            case 6: return [4, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];
            case 7: throw _d.sent();
            case 8:
                parsedBody = parsedOutput.body;
                $metadata = deserializeMetadata(output);
                statusCode = $metadata.httpStatusCode ? $metadata.httpStatusCode + "" : undefined;
                response = new __BaseException({
                    name: parsedBody.code || parsedBody.Code || errorCode || statusCode || "UnknowError",
                    $fault: "client",
                    $metadata: $metadata,
                });
                throw __decorateServiceException(response, parsedBody);
        }
    });
}); };
export var deserializeAws_json1_1DeleteApiDestinationCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var data, contents, response;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode >= 300) {
                    return [2, deserializeAws_json1_1DeleteApiDestinationCommandError(output, context)];
                }
                return [4, parseBody(output.body, context)];
            case 1:
                data = _a.sent();
                contents = {};
                contents = deserializeAws_json1_1DeleteApiDestinationResponse(data, context);
                response = __assign({ $metadata: deserializeMetadata(output) }, contents);
                return [2, Promise.resolve(response)];
        }
    });
}); };
var deserializeAws_json1_1DeleteApiDestinationCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, _b, parsedBody, $metadata, statusCode;
    var _c;
    return __generator(this, function (_d) {
        switch (_d.label) {
            case 0:
                _a = [__assign({}, output)];
                _c = {};
                return [4, parseBody(output.body, context)];
            case 1:
                parsedOutput = __assign.apply(void 0, _a.concat([(_c.body = _d.sent(), _c)]));
                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
                _b = errorCode;
                switch (_b) {
                    case "ConcurrentModificationException": return [3, 2];
                    case "com.amazonaws.eventbridge#ConcurrentModificationException": return [3, 2];
                    case "InternalException": return [3, 4];
                    case "com.amazonaws.eventbridge#InternalException": return [3, 4];
                    case "ResourceNotFoundException": return [3, 6];
                    case "com.amazonaws.eventbridge#ResourceNotFoundException": return [3, 6];
                }
                return [3, 8];
            case 2: return [4, deserializeAws_json1_1ConcurrentModificationExceptionResponse(parsedOutput, context)];
            case 3: throw _d.sent();
            case 4: return [4, deserializeAws_json1_1InternalExceptionResponse(parsedOutput, context)];
            case 5: throw _d.sent();
            case 6: return [4, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];
            case 7: throw _d.sent();
            case 8:
                parsedBody = parsedOutput.body;
                $metadata = deserializeMetadata(output);
                statusCode = $metadata.httpStatusCode ? $metadata.httpStatusCode + "" : undefined;
                response = new __BaseException({
                    name: parsedBody.code || parsedBody.Code || errorCode || statusCode || "UnknowError",
                    $fault: "client",
                    $metadata: $metadata,
                });
                throw __decorateServiceException(response, parsedBody);
        }
    });
}); };
export var deserializeAws_json1_1DeleteArchiveCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var data, contents, response;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode >= 300) {
                    return [2, deserializeAws_json1_1DeleteArchiveCommandError(output, context)];
                }
                return [4, parseBody(output.body, context)];
            case 1:
                data = _a.sent();
                contents = {};
                contents = deserializeAws_json1_1DeleteArchiveResponse(data, context);
                response = __assign({ $metadata: deserializeMetadata(output) }, contents);
                return [2, Promise.resolve(response)];
        }
    });
}); };
var deserializeAws_json1_1DeleteArchiveCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, _b, parsedBody, $metadata, statusCode;
    var _c;
    return __generator(this, function (_d) {
        switch (_d.label) {
            case 0:
                _a = [__assign({}, output)];
                _c = {};
                return [4, parseBody(output.body, context)];
            case 1:
                parsedOutput = __assign.apply(void 0, _a.concat([(_c.body = _d.sent(), _c)]));
                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
                _b = errorCode;
                switch (_b) {
                    case "ConcurrentModificationException": return [3, 2];
                    case "com.amazonaws.eventbridge#ConcurrentModificationException": return [3, 2];
                    case "InternalException": return [3, 4];
                    case "com.amazonaws.eventbridge#InternalException": return [3, 4];
                    case "ResourceNotFoundException": return [3, 6];
                    case "com.amazonaws.eventbridge#ResourceNotFoundException": return [3, 6];
                }
                return [3, 8];
            case 2: return [4, deserializeAws_json1_1ConcurrentModificationExceptionResponse(parsedOutput, context)];
            case 3: throw _d.sent();
            case 4: return [4, deserializeAws_json1_1InternalExceptionResponse(parsedOutput, context)];
            case 5: throw _d.sent();
            case 6: return [4, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];
            case 7: throw _d.sent();
            case 8:
                parsedBody = parsedOutput.body;
                $metadata = deserializeMetadata(output);
                statusCode = $metadata.httpStatusCode ? $metadata.httpStatusCode + "" : undefined;
                response = new __BaseException({
                    name: parsedBody.code || parsedBody.Code || errorCode || statusCode || "UnknowError",
                    $fault: "client",
                    $metadata: $metadata,
                });
                throw __decorateServiceException(response, parsedBody);
        }
    });
}); };
export var deserializeAws_json1_1DeleteConnectionCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var data, contents, response;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode >= 300) {
                    return [2, deserializeAws_json1_1DeleteConnectionCommandError(output, context)];
                }
                return [4, parseBody(output.body, context)];
            case 1:
                data = _a.sent();
                contents = {};
                contents = deserializeAws_json1_1DeleteConnectionResponse(data, context);
                response = __assign({ $metadata: deserializeMetadata(output) }, contents);
                return [2, Promise.resolve(response)];
        }
    });
}); };
var deserializeAws_json1_1DeleteConnectionCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, _b, parsedBody, $metadata, statusCode;
    var _c;
    return __generator(this, function (_d) {
        switch (_d.label) {
            case 0:
                _a = [__assign({}, output)];
                _c = {};
                return [4, parseBody(output.body, context)];
            case 1:
                parsedOutput = __assign.apply(void 0, _a.concat([(_c.body = _d.sent(), _c)]));
                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
                _b = errorCode;
                switch (_b) {
                    case "ConcurrentModificationException": return [3, 2];
                    case "com.amazonaws.eventbridge#ConcurrentModificationException": return [3, 2];
                    case "InternalException": return [3, 4];
                    case "com.amazonaws.eventbridge#InternalException": return [3, 4];
                    case "ResourceNotFoundException": return [3, 6];
                    case "com.amazonaws.eventbridge#ResourceNotFoundException": return [3, 6];
                }
                return [3, 8];
            case 2: return [4, deserializeAws_json1_1ConcurrentModificationExceptionResponse(parsedOutput, context)];
            case 3: throw _d.sent();
            case 4: return [4, deserializeAws_json1_1InternalExceptionResponse(parsedOutput, context)];
            case 5: throw _d.sent();
            case 6: return [4, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];
            case 7: throw _d.sent();
            case 8:
                parsedBody = parsedOutput.body;
                $metadata = deserializeMetadata(output);
                statusCode = $metadata.httpStatusCode ? $metadata.httpStatusCode + "" : undefined;
                response = new __BaseException({
                    name: parsedBody.code || parsedBody.Code || errorCode || statusCode || "UnknowError",
                    $fault: "client",
                    $metadata: $metadata,
                });
                throw __decorateServiceException(response, parsedBody);
        }
    });
}); };
export var deserializeAws_json1_1DeleteEndpointCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var data, contents, response;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode >= 300) {
                    return [2, deserializeAws_json1_1DeleteEndpointCommandError(output, context)];
                }
                return [4, parseBody(output.body, context)];
            case 1:
                data = _a.sent();
                contents = {};
                contents = deserializeAws_json1_1DeleteEndpointResponse(data, context);
                response = __assign({ $metadata: deserializeMetadata(output) }, contents);
                return [2, Promise.resolve(response)];
        }
    });
}); };
var deserializeAws_json1_1DeleteEndpointCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, _b, parsedBody, $metadata, statusCode;
    var _c;
    return __generator(this, function (_d) {
        switch (_d.label) {
            case 0:
                _a = [__assign({}, output)];
                _c = {};
                return [4, parseBody(output.body, context)];
            case 1:
                parsedOutput = __assign.apply(void 0, _a.concat([(_c.body = _d.sent(), _c)]));
                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
                _b = errorCode;
                switch (_b) {
                    case "ConcurrentModificationException": return [3, 2];
                    case "com.amazonaws.eventbridge#ConcurrentModificationException": return [3, 2];
                    case "InternalException": return [3, 4];
                    case "com.amazonaws.eventbridge#InternalException": return [3, 4];
                    case "ResourceNotFoundException": return [3, 6];
                    case "com.amazonaws.eventbridge#ResourceNotFoundException": return [3, 6];
                }
                return [3, 8];
            case 2: return [4, deserializeAws_json1_1ConcurrentModificationExceptionResponse(parsedOutput, context)];
            case 3: throw _d.sent();
            case 4: return [4, deserializeAws_json1_1InternalExceptionResponse(parsedOutput, context)];
            case 5: throw _d.sent();
            case 6: return [4, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];
            case 7: throw _d.sent();
            case 8:
                parsedBody = parsedOutput.body;
                $metadata = deserializeMetadata(output);
                statusCode = $metadata.httpStatusCode ? $metadata.httpStatusCode + "" : undefined;
                response = new __BaseException({
                    name: parsedBody.code || parsedBody.Code || errorCode || statusCode || "UnknowError",
                    $fault: "client",
                    $metadata: $metadata,
                });
                throw __decorateServiceException(response, parsedBody);
        }
    });
}); };
export var deserializeAws_json1_1DeleteEventBusCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var response;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode >= 300) {
                    return [2, deserializeAws_json1_1DeleteEventBusCommandError(output, context)];
                }
                return [4, collectBody(output.body, context)];
            case 1:
                _a.sent();
                response = {
                    $metadata: deserializeMetadata(output),
                };
                return [2, Promise.resolve(response)];
        }
    });
}); };
var deserializeAws_json1_1DeleteEventBusCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, _b, parsedBody, $metadata, statusCode;
    var _c;
    return __generator(this, function (_d) {
        switch (_d.label) {
            case 0:
                _a = [__assign({}, output)];
                _c = {};
                return [4, parseBody(output.body, context)];
            case 1:
                parsedOutput = __assign.apply(void 0, _a.concat([(_c.body = _d.sent(), _c)]));
                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
                _b = errorCode;
                switch (_b) {
                    case "ConcurrentModificationException": return [3, 2];
                    case "com.amazonaws.eventbridge#ConcurrentModificationException": return [3, 2];
                    case "InternalException": return [3, 4];
                    case "com.amazonaws.eventbridge#InternalException": return [3, 4];
                }
                return [3, 6];
            case 2: return [4, deserializeAws_json1_1ConcurrentModificationExceptionResponse(parsedOutput, context)];
            case 3: throw _d.sent();
            case 4: return [4, deserializeAws_json1_1InternalExceptionResponse(parsedOutput, context)];
            case 5: throw _d.sent();
            case 6:
                parsedBody = parsedOutput.body;
                $metadata = deserializeMetadata(output);
                statusCode = $metadata.httpStatusCode ? $metadata.httpStatusCode + "" : undefined;
                response = new __BaseException({
                    name: parsedBody.code || parsedBody.Code || errorCode || statusCode || "UnknowError",
                    $fault: "client",
                    $metadata: $metadata,
                });
                throw __decorateServiceException(response, parsedBody);
        }
    });
}); };
export var deserializeAws_json1_1DeletePartnerEventSourceCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var response;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode >= 300) {
                    return [2, deserializeAws_json1_1DeletePartnerEventSourceCommandError(output, context)];
                }
                return [4, collectBody(output.body, context)];
            case 1:
                _a.sent();
                response = {
                    $metadata: deserializeMetadata(output),
                };
                return [2, Promise.resolve(response)];
        }
    });
}); };
var deserializeAws_json1_1DeletePartnerEventSourceCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, _b, parsedBody, $metadata, statusCode;
    var _c;
    return __generator(this, function (_d) {
        switch (_d.label) {
            case 0:
                _a = [__assign({}, output)];
                _c = {};
                return [4, parseBody(output.body, context)];
            case 1:
                parsedOutput = __assign.apply(void 0, _a.concat([(_c.body = _d.sent(), _c)]));
                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
                _b = errorCode;
                switch (_b) {
                    case "ConcurrentModificationException": return [3, 2];
                    case "com.amazonaws.eventbridge#ConcurrentModificationException": return [3, 2];
                    case "InternalException": return [3, 4];
                    case "com.amazonaws.eventbridge#InternalException": return [3, 4];
                    case "OperationDisabledException": return [3, 6];
                    case "com.amazonaws.eventbridge#OperationDisabledException": return [3, 6];
                }
                return [3, 8];
            case 2: return [4, deserializeAws_json1_1ConcurrentModificationExceptionResponse(parsedOutput, context)];
            case 3: throw _d.sent();
            case 4: return [4, deserializeAws_json1_1InternalExceptionResponse(parsedOutput, context)];
            case 5: throw _d.sent();
            case 6: return [4, deserializeAws_json1_1OperationDisabledExceptionResponse(parsedOutput, context)];
            case 7: throw _d.sent();
            case 8:
                parsedBody = parsedOutput.body;
                $metadata = deserializeMetadata(output);
                statusCode = $metadata.httpStatusCode ? $metadata.httpStatusCode + "" : undefined;
                response = new __BaseException({
                    name: parsedBody.code || parsedBody.Code || errorCode || statusCode || "UnknowError",
                    $fault: "client",
                    $metadata: $metadata,
                });
                throw __decorateServiceException(response, parsedBody);
        }
    });
}); };
export var deserializeAws_json1_1DeleteRuleCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var response;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode >= 300) {
                    return [2, deserializeAws_json1_1DeleteRuleCommandError(output, context)];
                }
                return [4, collectBody(output.body, context)];
            case 1:
                _a.sent();
                response = {
                    $metadata: deserializeMetadata(output),
                };
                return [2, Promise.resolve(response)];
        }
    });
}); };
var deserializeAws_json1_1DeleteRuleCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, _b, parsedBody, $metadata, statusCode;
    var _c;
    return __generator(this, function (_d) {
        switch (_d.label) {
            case 0:
                _a = [__assign({}, output)];
                _c = {};
                return [4, parseBody(output.body, context)];
            case 1:
                parsedOutput = __assign.apply(void 0, _a.concat([(_c.body = _d.sent(), _c)]));
                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
                _b = errorCode;
                switch (_b) {
                    case "ConcurrentModificationException": return [3, 2];
                    case "com.amazonaws.eventbridge#ConcurrentModificationException": return [3, 2];
                    case "InternalException": return [3, 4];
                    case "com.amazonaws.eventbridge#InternalException": return [3, 4];
                    case "ManagedRuleException": return [3, 6];
                    case "com.amazonaws.eventbridge#ManagedRuleException": return [3, 6];
                    case "ResourceNotFoundException": return [3, 8];
                    case "com.amazonaws.eventbridge#ResourceNotFoundException": return [3, 8];
                }
                return [3, 10];
            case 2: return [4, deserializeAws_json1_1ConcurrentModificationExceptionResponse(parsedOutput, context)];
            case 3: throw _d.sent();
            case 4: return [4, deserializeAws_json1_1InternalExceptionResponse(parsedOutput, context)];
            case 5: throw _d.sent();
            case 6: return [4, deserializeAws_json1_1ManagedRuleExceptionResponse(parsedOutput, context)];
            case 7: throw _d.sent();
            case 8: return [4, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];
            case 9: throw _d.sent();
            case 10:
                parsedBody = parsedOutput.body;
                $metadata = deserializeMetadata(output);
                statusCode = $metadata.httpStatusCode ? $metadata.httpStatusCode + "" : undefined;
                response = new __BaseException({
                    name: parsedBody.code || parsedBody.Code || errorCode || statusCode || "UnknowError",
                    $fault: "client",
                    $metadata: $metadata,
                });
                throw __decorateServiceException(response, parsedBody);
        }
    });
}); };
export var deserializeAws_json1_1DescribeApiDestinationCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var data, contents, response;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode >= 300) {
                    return [2, deserializeAws_json1_1DescribeApiDestinationCommandError(output, context)];
                }
                return [4, parseBody(output.body, context)];
            case 1:
                data = _a.sent();
                contents = {};
                contents = deserializeAws_json1_1DescribeApiDestinationResponse(data, context);
                response = __assign({ $metadata: deserializeMetadata(output) }, contents);
                return [2, Promise.resolve(response)];
        }
    });
}); };
var deserializeAws_json1_1DescribeApiDestinationCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, _b, parsedBody, $metadata, statusCode;
    var _c;
    return __generator(this, function (_d) {
        switch (_d.label) {
            case 0:
                _a = [__assign({}, output)];
                _c = {};
                return [4, parseBody(output.body, context)];
            case 1:
                parsedOutput = __assign.apply(void 0, _a.concat([(_c.body = _d.sent(), _c)]));
                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
                _b = errorCode;
                switch (_b) {
                    case "InternalException": return [3, 2];
                    case "com.amazonaws.eventbridge#InternalException": return [3, 2];
                    case "ResourceNotFoundException": return [3, 4];
                    case "com.amazonaws.eventbridge#ResourceNotFoundException": return [3, 4];
                }
                return [3, 6];
            case 2: return [4, deserializeAws_json1_1InternalExceptionResponse(parsedOutput, context)];
            case 3: throw _d.sent();
            case 4: return [4, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];
            case 5: throw _d.sent();
            case 6:
                parsedBody = parsedOutput.body;
                $metadata = deserializeMetadata(output);
                statusCode = $metadata.httpStatusCode ? $metadata.httpStatusCode + "" : undefined;
                response = new __BaseException({
                    name: parsedBody.code || parsedBody.Code || errorCode || statusCode || "UnknowError",
                    $fault: "client",
                    $metadata: $metadata,
                });
                throw __decorateServiceException(response, parsedBody);
        }
    });
}); };
export var deserializeAws_json1_1DescribeArchiveCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var data, contents, response;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode >= 300) {
                    return [2, deserializeAws_json1_1DescribeArchiveCommandError(output, context)];
                }
                return [4, parseBody(output.body, context)];
            case 1:
                data = _a.sent();
                contents = {};
                contents = deserializeAws_json1_1DescribeArchiveResponse(data, context);
                response = __assign({ $metadata: deserializeMetadata(output) }, contents);
                return [2, Promise.resolve(response)];
        }
    });
}); };
var deserializeAws_json1_1DescribeArchiveCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, _b, parsedBody, $metadata, statusCode;
    var _c;
    return __generator(this, function (_d) {
        switch (_d.label) {
            case 0:
                _a = [__assign({}, output)];
                _c = {};
                return [4, parseBody(output.body, context)];
            case 1:
                parsedOutput = __assign.apply(void 0, _a.concat([(_c.body = _d.sent(), _c)]));
                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
                _b = errorCode;
                switch (_b) {
                    case "InternalException": return [3, 2];
                    case "com.amazonaws.eventbridge#InternalException": return [3, 2];
                    case "ResourceAlreadyExistsException": return [3, 4];
                    case "com.amazonaws.eventbridge#ResourceAlreadyExistsException": return [3, 4];
                    case "ResourceNotFoundException": return [3, 6];
                    case "com.amazonaws.eventbridge#ResourceNotFoundException": return [3, 6];
                }
                return [3, 8];
            case 2: return [4, deserializeAws_json1_1InternalExceptionResponse(parsedOutput, context)];
            case 3: throw _d.sent();
            case 4: return [4, deserializeAws_json1_1ResourceAlreadyExistsExceptionResponse(parsedOutput, context)];
            case 5: throw _d.sent();
            case 6: return [4, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];
            case 7: throw _d.sent();
            case 8:
                parsedBody = parsedOutput.body;
                $metadata = deserializeMetadata(output);
                statusCode = $metadata.httpStatusCode ? $metadata.httpStatusCode + "" : undefined;
                response = new __BaseException({
                    name: parsedBody.code || parsedBody.Code || errorCode || statusCode || "UnknowError",
                    $fault: "client",
                    $metadata: $metadata,
                });
                throw __decorateServiceException(response, parsedBody);
        }
    });
}); };
export var deserializeAws_json1_1DescribeConnectionCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var data, contents, response;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode >= 300) {
                    return [2, deserializeAws_json1_1DescribeConnectionCommandError(output, context)];
                }
                return [4, parseBody(output.body, context)];
            case 1:
                data = _a.sent();
                contents = {};
                contents = deserializeAws_json1_1DescribeConnectionResponse(data, context);
                response = __assign({ $metadata: deserializeMetadata(output) }, contents);
                return [2, Promise.resolve(response)];
        }
    });
}); };
var deserializeAws_json1_1DescribeConnectionCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, _b, parsedBody, $metadata, statusCode;
    var _c;
    return __generator(this, function (_d) {
        switch (_d.label) {
            case 0:
                _a = [__assign({}, output)];
                _c = {};
                return [4, parseBody(output.body, context)];
            case 1:
                parsedOutput = __assign.apply(void 0, _a.concat([(_c.body = _d.sent(), _c)]));
                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
                _b = errorCode;
                switch (_b) {
                    case "InternalException": return [3, 2];
                    case "com.amazonaws.eventbridge#InternalException": return [3, 2];
                    case "ResourceNotFoundException": return [3, 4];
                    case "com.amazonaws.eventbridge#ResourceNotFoundException": return [3, 4];
                }
                return [3, 6];
            case 2: return [4, deserializeAws_json1_1InternalExceptionResponse(parsedOutput, context)];
            case 3: throw _d.sent();
            case 4: return [4, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];
            case 5: throw _d.sent();
            case 6:
                parsedBody = parsedOutput.body;
                $metadata = deserializeMetadata(output);
                statusCode = $metadata.httpStatusCode ? $metadata.httpStatusCode + "" : undefined;
                response = new __BaseException({
                    name: parsedBody.code || parsedBody.Code || errorCode || statusCode || "UnknowError",
                    $fault: "client",
                    $metadata: $metadata,
                });
                throw __decorateServiceException(response, parsedBody);
        }
    });
}); };
export var deserializeAws_json1_1DescribeEndpointCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var data, contents, response;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode >= 300) {
                    return [2, deserializeAws_json1_1DescribeEndpointCommandError(output, context)];
                }
                return [4, parseBody(output.body, context)];
            case 1:
                data = _a.sent();
                contents = {};
                contents = deserializeAws_json1_1DescribeEndpointResponse(data, context);
                response = __assign({ $metadata: deserializeMetadata(output) }, contents);
                return [2, Promise.resolve(response)];
        }
    });
}); };
var deserializeAws_json1_1DescribeEndpointCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, _b, parsedBody, $metadata, statusCode;
    var _c;
    return __generator(this, function (_d) {
        switch (_d.label) {
            case 0:
                _a = [__assign({}, output)];
                _c = {};
                return [4, parseBody(output.body, context)];
            case 1:
                parsedOutput = __assign.apply(void 0, _a.concat([(_c.body = _d.sent(), _c)]));
                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
                _b = errorCode;
                switch (_b) {
                    case "InternalException": return [3, 2];
                    case "com.amazonaws.eventbridge#InternalException": return [3, 2];
                    case "ResourceNotFoundException": return [3, 4];
                    case "com.amazonaws.eventbridge#ResourceNotFoundException": return [3, 4];
                }
                return [3, 6];
            case 2: return [4, deserializeAws_json1_1InternalExceptionResponse(parsedOutput, context)];
            case 3: throw _d.sent();
            case 4: return [4, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];
            case 5: throw _d.sent();
            case 6:
                parsedBody = parsedOutput.body;
                $metadata = deserializeMetadata(output);
                statusCode = $metadata.httpStatusCode ? $metadata.httpStatusCode + "" : undefined;
                response = new __BaseException({
                    name: parsedBody.code || parsedBody.Code || errorCode || statusCode || "UnknowError",
                    $fault: "client",
                    $metadata: $metadata,
                });
                throw __decorateServiceException(response, parsedBody);
        }
    });
}); };
export var deserializeAws_json1_1DescribeEventBusCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var data, contents, response;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode >= 300) {
                    return [2, deserializeAws_json1_1DescribeEventBusCommandError(output, context)];
                }
                return [4, parseBody(output.body, context)];
            case 1:
                data = _a.sent();
                contents = {};
                contents = deserializeAws_json1_1DescribeEventBusResponse(data, context);
                response = __assign({ $metadata: deserializeMetadata(output) }, contents);
                return [2, Promise.resolve(response)];
        }
    });
}); };
var deserializeAws_json1_1DescribeEventBusCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, _b, parsedBody, $metadata, statusCode;
    var _c;
    return __generator(this, function (_d) {
        switch (_d.label) {
            case 0:
                _a = [__assign({}, output)];
                _c = {};
                return [4, parseBody(output.body, context)];
            case 1:
                parsedOutput = __assign.apply(void 0, _a.concat([(_c.body = _d.sent(), _c)]));
                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
                _b = errorCode;
                switch (_b) {
                    case "InternalException": return [3, 2];
                    case "com.amazonaws.eventbridge#InternalException": return [3, 2];
                    case "ResourceNotFoundException": return [3, 4];
                    case "com.amazonaws.eventbridge#ResourceNotFoundException": return [3, 4];
                }
                return [3, 6];
            case 2: return [4, deserializeAws_json1_1InternalExceptionResponse(parsedOutput, context)];
            case 3: throw _d.sent();
            case 4: return [4, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];
            case 5: throw _d.sent();
            case 6:
                parsedBody = parsedOutput.body;
                $metadata = deserializeMetadata(output);
                statusCode = $metadata.httpStatusCode ? $metadata.httpStatusCode + "" : undefined;
                response = new __BaseException({
                    name: parsedBody.code || parsedBody.Code || errorCode || statusCode || "UnknowError",
                    $fault: "client",
                    $metadata: $metadata,
                });
                throw __decorateServiceException(response, parsedBody);
        }
    });
}); };
export var deserializeAws_json1_1DescribeEventSourceCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var data, contents, response;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode >= 300) {
                    return [2, deserializeAws_json1_1DescribeEventSourceCommandError(output, context)];
                }
                return [4, parseBody(output.body, context)];
            case 1:
                data = _a.sent();
                contents = {};
                contents = deserializeAws_json1_1DescribeEventSourceResponse(data, context);
                response = __assign({ $metadata: deserializeMetadata(output) }, contents);
                return [2, Promise.resolve(response)];
        }
    });
}); };
var deserializeAws_json1_1DescribeEventSourceCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, _b, parsedBody, $metadata, statusCode;
    var _c;
    return __generator(this, function (_d) {
        switch (_d.label) {
            case 0:
                _a = [__assign({}, output)];
                _c = {};
                return [4, parseBody(output.body, context)];
            case 1:
                parsedOutput = __assign.apply(void 0, _a.concat([(_c.body = _d.sent(), _c)]));
                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
                _b = errorCode;
                switch (_b) {
                    case "InternalException": return [3, 2];
                    case "com.amazonaws.eventbridge#InternalException": return [3, 2];
                    case "OperationDisabledException": return [3, 4];
                    case "com.amazonaws.eventbridge#OperationDisabledException": return [3, 4];
                    case "ResourceNotFoundException": return [3, 6];
                    case "com.amazonaws.eventbridge#ResourceNotFoundException": return [3, 6];
                }
                return [3, 8];
            case 2: return [4, deserializeAws_json1_1InternalExceptionResponse(parsedOutput, context)];
            case 3: throw _d.sent();
            case 4: return [4, deserializeAws_json1_1OperationDisabledExceptionResponse(parsedOutput, context)];
            case 5: throw _d.sent();
            case 6: return [4, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];
            case 7: throw _d.sent();
            case 8:
                parsedBody = parsedOutput.body;
                $metadata = deserializeMetadata(output);
                statusCode = $metadata.httpStatusCode ? $metadata.httpStatusCode + "" : undefined;
                response = new __BaseException({
                    name: parsedBody.code || parsedBody.Code || errorCode || statusCode || "UnknowError",
                    $fault: "client",
                    $metadata: $metadata,
                });
                throw __decorateServiceException(response, parsedBody);
        }
    });
}); };
export var deserializeAws_json1_1DescribePartnerEventSourceCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var data, contents, response;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode >= 300) {
                    return [2, deserializeAws_json1_1DescribePartnerEventSourceCommandError(output, context)];
                }
                return [4, parseBody(output.body, context)];
            case 1:
                data = _a.sent();
                contents = {};
                contents = deserializeAws_json1_1DescribePartnerEventSourceResponse(data, context);
                response = __assign({ $metadata: deserializeMetadata(output) }, contents);
                return [2, Promise.resolve(response)];
        }
    });
}); };
var deserializeAws_json1_1DescribePartnerEventSourceCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, _b, parsedBody, $metadata, statusCode;
    var _c;
    return __generator(this, function (_d) {
        switch (_d.label) {
            case 0:
                _a = [__assign({}, output)];
                _c = {};
                return [4, parseBody(output.body, context)];
            case 1:
                parsedOutput = __assign.apply(void 0, _a.concat([(_c.body = _d.sent(), _c)]));
                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
                _b = errorCode;
                switch (_b) {
                    case "InternalException": return [3, 2];
                    case "com.amazonaws.eventbridge#InternalException": return [3, 2];
                    case "OperationDisabledException": return [3, 4];
                    case "com.amazonaws.eventbridge#OperationDisabledException": return [3, 4];
                    case "ResourceNotFoundException": return [3, 6];
                    case "com.amazonaws.eventbridge#ResourceNotFoundException": return [3, 6];
                }
                return [3, 8];
            case 2: return [4, deserializeAws_json1_1InternalExceptionResponse(parsedOutput, context)];
            case 3: throw _d.sent();
            case 4: return [4, deserializeAws_json1_1OperationDisabledExceptionResponse(parsedOutput, context)];
            case 5: throw _d.sent();
            case 6: return [4, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];
            case 7: throw _d.sent();
            case 8:
                parsedBody = parsedOutput.body;
                $metadata = deserializeMetadata(output);
                statusCode = $metadata.httpStatusCode ? $metadata.httpStatusCode + "" : undefined;
                response = new __BaseException({
                    name: parsedBody.code || parsedBody.Code || errorCode || statusCode || "UnknowError",
                    $fault: "client",
                    $metadata: $metadata,
                });
                throw __decorateServiceException(response, parsedBody);
        }
    });
}); };
export var deserializeAws_json1_1DescribeReplayCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var data, contents, response;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode >= 300) {
                    return [2, deserializeAws_json1_1DescribeReplayCommandError(output, context)];
                }
                return [4, parseBody(output.body, context)];
            case 1:
                data = _a.sent();
                contents = {};
                contents = deserializeAws_json1_1DescribeReplayResponse(data, context);
                response = __assign({ $metadata: deserializeMetadata(output) }, contents);
                return [2, Promise.resolve(response)];
        }
    });
}); };
var deserializeAws_json1_1DescribeReplayCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, _b, parsedBody, $metadata, statusCode;
    var _c;
    return __generator(this, function (_d) {
        switch (_d.label) {
            case 0:
                _a = [__assign({}, output)];
                _c = {};
                return [4, parseBody(output.body, context)];
            case 1:
                parsedOutput = __assign.apply(void 0, _a.concat([(_c.body = _d.sent(), _c)]));
                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
                _b = errorCode;
                switch (_b) {
                    case "InternalException": return [3, 2];
                    case "com.amazonaws.eventbridge#InternalException": return [3, 2];
                    case "ResourceNotFoundException": return [3, 4];
                    case "com.amazonaws.eventbridge#ResourceNotFoundException": return [3, 4];
                }
                return [3, 6];
            case 2: return [4, deserializeAws_json1_1InternalExceptionResponse(parsedOutput, context)];
            case 3: throw _d.sent();
            case 4: return [4, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];
            case 5: throw _d.sent();
            case 6:
                parsedBody = parsedOutput.body;
                $metadata = deserializeMetadata(output);
                statusCode = $metadata.httpStatusCode ? $metadata.httpStatusCode + "" : undefined;
                response = new __BaseException({
                    name: parsedBody.code || parsedBody.Code || errorCode || statusCode || "UnknowError",
                    $fault: "client",
                    $metadata: $metadata,
                });
                throw __decorateServiceException(response, parsedBody);
        }
    });
}); };
export var deserializeAws_json1_1DescribeRuleCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var data, contents, response;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode >= 300) {
                    return [2, deserializeAws_json1_1DescribeRuleCommandError(output, context)];
                }
                return [4, parseBody(output.body, context)];
            case 1:
                data = _a.sent();
                contents = {};
                contents = deserializeAws_json1_1DescribeRuleResponse(data, context);
                response = __assign({ $metadata: deserializeMetadata(output) }, contents);
                return [2, Promise.resolve(response)];
        }
    });
}); };
var deserializeAws_json1_1DescribeRuleCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, _b, parsedBody, $metadata, statusCode;
    var _c;
    return __generator(this, function (_d) {
        switch (_d.label) {
            case 0:
                _a = [__assign({}, output)];
                _c = {};
                return [4, parseBody(output.body, context)];
            case 1:
                parsedOutput = __assign.apply(void 0, _a.concat([(_c.body = _d.sent(), _c)]));
                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
                _b = errorCode;
                switch (_b) {
                    case "InternalException": return [3, 2];
                    case "com.amazonaws.eventbridge#InternalException": return [3, 2];
                    case "ResourceNotFoundException": return [3, 4];
                    case "com.amazonaws.eventbridge#ResourceNotFoundException": return [3, 4];
                }
                return [3, 6];
            case 2: return [4, deserializeAws_json1_1InternalExceptionResponse(parsedOutput, context)];
            case 3: throw _d.sent();
            case 4: return [4, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];
            case 5: throw _d.sent();
            case 6:
                parsedBody = parsedOutput.body;
                $metadata = deserializeMetadata(output);
                statusCode = $metadata.httpStatusCode ? $metadata.httpStatusCode + "" : undefined;
                response = new __BaseException({
                    name: parsedBody.code || parsedBody.Code || errorCode || statusCode || "UnknowError",
                    $fault: "client",
                    $metadata: $metadata,
                });
                throw __decorateServiceException(response, parsedBody);
        }
    });
}); };
export var deserializeAws_json1_1DisableRuleCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var response;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode >= 300) {
                    return [2, deserializeAws_json1_1DisableRuleCommandError(output, context)];
                }
                return [4, collectBody(output.body, context)];
            case 1:
                _a.sent();
                response = {
                    $metadata: deserializeMetadata(output),
                };
                return [2, Promise.resolve(response)];
        }
    });
}); };
var deserializeAws_json1_1DisableRuleCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, _b, parsedBody, $metadata, statusCode;
    var _c;
    return __generator(this, function (_d) {
        switch (_d.label) {
            case 0:
                _a = [__assign({}, output)];
                _c = {};
                return [4, parseBody(output.body, context)];
            case 1:
                parsedOutput = __assign.apply(void 0, _a.concat([(_c.body = _d.sent(), _c)]));
                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
                _b = errorCode;
                switch (_b) {
                    case "ConcurrentModificationException": return [3, 2];
                    case "com.amazonaws.eventbridge#ConcurrentModificationException": return [3, 2];
                    case "InternalException": return [3, 4];
                    case "com.amazonaws.eventbridge#InternalException": return [3, 4];
                    case "ManagedRuleException": return [3, 6];
                    case "com.amazonaws.eventbridge#ManagedRuleException": return [3, 6];
                    case "ResourceNotFoundException": return [3, 8];
                    case "com.amazonaws.eventbridge#ResourceNotFoundException": return [3, 8];
                }
                return [3, 10];
            case 2: return [4, deserializeAws_json1_1ConcurrentModificationExceptionResponse(parsedOutput, context)];
            case 3: throw _d.sent();
            case 4: return [4, deserializeAws_json1_1InternalExceptionResponse(parsedOutput, context)];
            case 5: throw _d.sent();
            case 6: return [4, deserializeAws_json1_1ManagedRuleExceptionResponse(parsedOutput, context)];
            case 7: throw _d.sent();
            case 8: return [4, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];
            case 9: throw _d.sent();
            case 10:
                parsedBody = parsedOutput.body;
                $metadata = deserializeMetadata(output);
                statusCode = $metadata.httpStatusCode ? $metadata.httpStatusCode + "" : undefined;
                response = new __BaseException({
                    name: parsedBody.code || parsedBody.Code || errorCode || statusCode || "UnknowError",
                    $fault: "client",
                    $metadata: $metadata,
                });
                throw __decorateServiceException(response, parsedBody);
        }
    });
}); };
export var deserializeAws_json1_1EnableRuleCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var response;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode >= 300) {
                    return [2, deserializeAws_json1_1EnableRuleCommandError(output, context)];
                }
                return [4, collectBody(output.body, context)];
            case 1:
                _a.sent();
                response = {
                    $metadata: deserializeMetadata(output),
                };
                return [2, Promise.resolve(response)];
        }
    });
}); };
var deserializeAws_json1_1EnableRuleCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, _b, parsedBody, $metadata, statusCode;
    var _c;
    return __generator(this, function (_d) {
        switch (_d.label) {
            case 0:
                _a = [__assign({}, output)];
                _c = {};
                return [4, parseBody(output.body, context)];
            case 1:
                parsedOutput = __assign.apply(void 0, _a.concat([(_c.body = _d.sent(), _c)]));
                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
                _b = errorCode;
                switch (_b) {
                    case "ConcurrentModificationException": return [3, 2];
                    case "com.amazonaws.eventbridge#ConcurrentModificationException": return [3, 2];
                    case "InternalException": return [3, 4];
                    case "com.amazonaws.eventbridge#InternalException": return [3, 4];
                    case "ManagedRuleException": return [3, 6];
                    case "com.amazonaws.eventbridge#ManagedRuleException": return [3, 6];
                    case "ResourceNotFoundException": return [3, 8];
                    case "com.amazonaws.eventbridge#ResourceNotFoundException": return [3, 8];
                }
                return [3, 10];
            case 2: return [4, deserializeAws_json1_1ConcurrentModificationExceptionResponse(parsedOutput, context)];
            case 3: throw _d.sent();
            case 4: return [4, deserializeAws_json1_1InternalExceptionResponse(parsedOutput, context)];
            case 5: throw _d.sent();
            case 6: return [4, deserializeAws_json1_1ManagedRuleExceptionResponse(parsedOutput, context)];
            case 7: throw _d.sent();
            case 8: return [4, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];
            case 9: throw _d.sent();
            case 10:
                parsedBody = parsedOutput.body;
                $metadata = deserializeMetadata(output);
                statusCode = $metadata.httpStatusCode ? $metadata.httpStatusCode + "" : undefined;
                response = new __BaseException({
                    name: parsedBody.code || parsedBody.Code || errorCode || statusCode || "UnknowError",
                    $fault: "client",
                    $metadata: $metadata,
                });
                throw __decorateServiceException(response, parsedBody);
        }
    });
}); };
export var deserializeAws_json1_1ListApiDestinationsCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var data, contents, response;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode >= 300) {
                    return [2, deserializeAws_json1_1ListApiDestinationsCommandError(output, context)];
                }
                return [4, parseBody(output.body, context)];
            case 1:
                data = _a.sent();
                contents = {};
                contents = deserializeAws_json1_1ListApiDestinationsResponse(data, context);
                response = __assign({ $metadata: deserializeMetadata(output) }, contents);
                return [2, Promise.resolve(response)];
        }
    });
}); };
var deserializeAws_json1_1ListApiDestinationsCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, _b, parsedBody, $metadata, statusCode;
    var _c;
    return __generator(this, function (_d) {
        switch (_d.label) {
            case 0:
                _a = [__assign({}, output)];
                _c = {};
                return [4, parseBody(output.body, context)];
            case 1:
                parsedOutput = __assign.apply(void 0, _a.concat([(_c.body = _d.sent(), _c)]));
                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
                _b = errorCode;
                switch (_b) {
                    case "InternalException": return [3, 2];
                    case "com.amazonaws.eventbridge#InternalException": return [3, 2];
                }
                return [3, 4];
            case 2: return [4, deserializeAws_json1_1InternalExceptionResponse(parsedOutput, context)];
            case 3: throw _d.sent();
            case 4:
                parsedBody = parsedOutput.body;
                $metadata = deserializeMetadata(output);
                statusCode = $metadata.httpStatusCode ? $metadata.httpStatusCode + "" : undefined;
                response = new __BaseException({
                    name: parsedBody.code || parsedBody.Code || errorCode || statusCode || "UnknowError",
                    $fault: "client",
                    $metadata: $metadata,
                });
                throw __decorateServiceException(response, parsedBody);
        }
    });
}); };
export var deserializeAws_json1_1ListArchivesCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var data, contents, response;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode >= 300) {
                    return [2, deserializeAws_json1_1ListArchivesCommandError(output, context)];
                }
                return [4, parseBody(output.body, context)];
            case 1:
                data = _a.sent();
                contents = {};
                contents = deserializeAws_json1_1ListArchivesResponse(data, context);
                response = __assign({ $metadata: deserializeMetadata(output) }, contents);
                return [2, Promise.resolve(response)];
        }
    });
}); };
var deserializeAws_json1_1ListArchivesCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, _b, parsedBody, $metadata, statusCode;
    var _c;
    return __generator(this, function (_d) {
        switch (_d.label) {
            case 0:
                _a = [__assign({}, output)];
                _c = {};
                return [4, parseBody(output.body, context)];
            case 1:
                parsedOutput = __assign.apply(void 0, _a.concat([(_c.body = _d.sent(), _c)]));
                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
                _b = errorCode;
                switch (_b) {
                    case "InternalException": return [3, 2];
                    case "com.amazonaws.eventbridge#InternalException": return [3, 2];
                    case "ResourceNotFoundException": return [3, 4];
                    case "com.amazonaws.eventbridge#ResourceNotFoundException": return [3, 4];
                }
                return [3, 6];
            case 2: return [4, deserializeAws_json1_1InternalExceptionResponse(parsedOutput, context)];
            case 3: throw _d.sent();
            case 4: return [4, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];
            case 5: throw _d.sent();
            case 6:
                parsedBody = parsedOutput.body;
                $metadata = deserializeMetadata(output);
                statusCode = $metadata.httpStatusCode ? $metadata.httpStatusCode + "" : undefined;
                response = new __BaseException({
                    name: parsedBody.code || parsedBody.Code || errorCode || statusCode || "UnknowError",
                    $fault: "client",
                    $metadata: $metadata,
                });
                throw __decorateServiceException(response, parsedBody);
        }
    });
}); };
export var deserializeAws_json1_1ListConnectionsCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var data, contents, response;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode >= 300) {
                    return [2, deserializeAws_json1_1ListConnectionsCommandError(output, context)];
                }
                return [4, parseBody(output.body, context)];
            case 1:
                data = _a.sent();
                contents = {};
                contents = deserializeAws_json1_1ListConnectionsResponse(data, context);
                response = __assign({ $metadata: deserializeMetadata(output) }, contents);
                return [2, Promise.resolve(response)];
        }
    });
}); };
var deserializeAws_json1_1ListConnectionsCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, _b, parsedBody, $metadata, statusCode;
    var _c;
    return __generator(this, function (_d) {
        switch (_d.label) {
            case 0:
                _a = [__assign({}, output)];
                _c = {};
                return [4, parseBody(output.body, context)];
            case 1:
                parsedOutput = __assign.apply(void 0, _a.concat([(_c.body = _d.sent(), _c)]));
                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
                _b = errorCode;
                switch (_b) {
                    case "InternalException": return [3, 2];
                    case "com.amazonaws.eventbridge#InternalException": return [3, 2];
                }
                return [3, 4];
            case 2: return [4, deserializeAws_json1_1InternalExceptionResponse(parsedOutput, context)];
            case 3: throw _d.sent();
            case 4:
                parsedBody = parsedOutput.body;
                $metadata = deserializeMetadata(output);
                statusCode = $metadata.httpStatusCode ? $metadata.httpStatusCode + "" : undefined;
                response = new __BaseException({
                    name: parsedBody.code || parsedBody.Code || errorCode || statusCode || "UnknowError",
                    $fault: "client",
                    $metadata: $metadata,
                });
                throw __decorateServiceException(response, parsedBody);
        }
    });
}); };
export var deserializeAws_json1_1ListEndpointsCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var data, contents, response;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode >= 300) {
                    return [2, deserializeAws_json1_1ListEndpointsCommandError(output, context)];
                }
                return [4, parseBody(output.body, context)];
            case 1:
                data = _a.sent();
                contents = {};
                contents = deserializeAws_json1_1ListEndpointsResponse(data, context);
                response = __assign({ $metadata: deserializeMetadata(output) }, contents);
                return [2, Promise.resolve(response)];
        }
    });
}); };
var deserializeAws_json1_1ListEndpointsCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, _b, parsedBody, $metadata, statusCode;
    var _c;
    return __generator(this, function (_d) {
        switch (_d.label) {
            case 0:
                _a = [__assign({}, output)];
                _c = {};
                return [4, parseBody(output.body, context)];
            case 1:
                parsedOutput = __assign.apply(void 0, _a.concat([(_c.body = _d.sent(), _c)]));
                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
                _b = errorCode;
                switch (_b) {
                    case "InternalException": return [3, 2];
                    case "com.amazonaws.eventbridge#InternalException": return [3, 2];
                }
                return [3, 4];
            case 2: return [4, deserializeAws_json1_1InternalExceptionResponse(parsedOutput, context)];
            case 3: throw _d.sent();
            case 4:
                parsedBody = parsedOutput.body;
                $metadata = deserializeMetadata(output);
                statusCode = $metadata.httpStatusCode ? $metadata.httpStatusCode + "" : undefined;
                response = new __BaseException({
                    name: parsedBody.code || parsedBody.Code || errorCode || statusCode || "UnknowError",
                    $fault: "client",
                    $metadata: $metadata,
                });
                throw __decorateServiceException(response, parsedBody);
        }
    });
}); };
export var deserializeAws_json1_1ListEventBusesCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var data, contents, response;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode >= 300) {
                    return [2, deserializeAws_json1_1ListEventBusesCommandError(output, context)];
                }
                return [4, parseBody(output.body, context)];
            case 1:
                data = _a.sent();
                contents = {};
                contents = deserializeAws_json1_1ListEventBusesResponse(data, context);
                response = __assign({ $metadata: deserializeMetadata(output) }, contents);
                return [2, Promise.resolve(response)];
        }
    });
}); };
var deserializeAws_json1_1ListEventBusesCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, _b, parsedBody, $metadata, statusCode;
    var _c;
    return __generator(this, function (_d) {
        switch (_d.label) {
            case 0:
                _a = [__assign({}, output)];
                _c = {};
                return [4, parseBody(output.body, context)];
            case 1:
                parsedOutput = __assign.apply(void 0, _a.concat([(_c.body = _d.sent(), _c)]));
                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
                _b = errorCode;
                switch (_b) {
                    case "InternalException": return [3, 2];
                    case "com.amazonaws.eventbridge#InternalException": return [3, 2];
                }
                return [3, 4];
            case 2: return [4, deserializeAws_json1_1InternalExceptionResponse(parsedOutput, context)];
            case 3: throw _d.sent();
            case 4:
                parsedBody = parsedOutput.body;
                $metadata = deserializeMetadata(output);
                statusCode = $metadata.httpStatusCode ? $metadata.httpStatusCode + "" : undefined;
                response = new __BaseException({
                    name: parsedBody.code || parsedBody.Code || errorCode || statusCode || "UnknowError",
                    $fault: "client",
                    $metadata: $metadata,
                });
                throw __decorateServiceException(response, parsedBody);
        }
    });
}); };
export var deserializeAws_json1_1ListEventSourcesCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var data, contents, response;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode >= 300) {
                    return [2, deserializeAws_json1_1ListEventSourcesCommandError(output, context)];
                }
                return [4, parseBody(output.body, context)];
            case 1:
                data = _a.sent();
                contents = {};
                contents = deserializeAws_json1_1ListEventSourcesResponse(data, context);
                response = __assign({ $metadata: deserializeMetadata(output) }, contents);
                return [2, Promise.resolve(response)];
        }
    });
}); };
var deserializeAws_json1_1ListEventSourcesCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, _b, parsedBody, $metadata, statusCode;
    var _c;
    return __generator(this, function (_d) {
        switch (_d.label) {
            case 0:
                _a = [__assign({}, output)];
                _c = {};
                return [4, parseBody(output.body, context)];
            case 1:
                parsedOutput = __assign.apply(void 0, _a.concat([(_c.body = _d.sent(), _c)]));
                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
                _b = errorCode;
                switch (_b) {
                    case "InternalException": return [3, 2];
                    case "com.amazonaws.eventbridge#InternalException": return [3, 2];
                    case "OperationDisabledException": return [3, 4];
                    case "com.amazonaws.eventbridge#OperationDisabledException": return [3, 4];
                }
                return [3, 6];
            case 2: return [4, deserializeAws_json1_1InternalExceptionResponse(parsedOutput, context)];
            case 3: throw _d.sent();
            case 4: return [4, deserializeAws_json1_1OperationDisabledExceptionResponse(parsedOutput, context)];
            case 5: throw _d.sent();
            case 6:
                parsedBody = parsedOutput.body;
                $metadata = deserializeMetadata(output);
                statusCode = $metadata.httpStatusCode ? $metadata.httpStatusCode + "" : undefined;
                response = new __BaseException({
                    name: parsedBody.code || parsedBody.Code || errorCode || statusCode || "UnknowError",
                    $fault: "client",
                    $metadata: $metadata,
                });
                throw __decorateServiceException(response, parsedBody);
        }
    });
}); };
export var deserializeAws_json1_1ListPartnerEventSourceAccountsCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var data, contents, response;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode >= 300) {
                    return [2, deserializeAws_json1_1ListPartnerEventSourceAccountsCommandError(output, context)];
                }
                return [4, parseBody(output.body, context)];
            case 1:
                data = _a.sent();
                contents = {};
                contents = deserializeAws_json1_1ListPartnerEventSourceAccountsResponse(data, context);
                response = __assign({ $metadata: deserializeMetadata(output) }, contents);
                return [2, Promise.resolve(response)];
        }
    });
}); };
var deserializeAws_json1_1ListPartnerEventSourceAccountsCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, _b, parsedBody, $metadata, statusCode;
    var _c;
    return __generator(this, function (_d) {
        switch (_d.label) {
            case 0:
                _a = [__assign({}, output)];
                _c = {};
                return [4, parseBody(output.body, context)];
            case 1:
                parsedOutput = __assign.apply(void 0, _a.concat([(_c.body = _d.sent(), _c)]));
                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
                _b = errorCode;
                switch (_b) {
                    case "InternalException": return [3, 2];
                    case "com.amazonaws.eventbridge#InternalException": return [3, 2];
                    case "OperationDisabledException": return [3, 4];
                    case "com.amazonaws.eventbridge#OperationDisabledException": return [3, 4];
                    case "ResourceNotFoundException": return [3, 6];
                    case "com.amazonaws.eventbridge#ResourceNotFoundException": return [3, 6];
                }
                return [3, 8];
            case 2: return [4, deserializeAws_json1_1InternalExceptionResponse(parsedOutput, context)];
            case 3: throw _d.sent();
            case 4: return [4, deserializeAws_json1_1OperationDisabledExceptionResponse(parsedOutput, context)];
            case 5: throw _d.sent();
            case 6: return [4, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];
            case 7: throw _d.sent();
            case 8:
                parsedBody = parsedOutput.body;
                $metadata = deserializeMetadata(output);
                statusCode = $metadata.httpStatusCode ? $metadata.httpStatusCode + "" : undefined;
                response = new __BaseException({
                    name: parsedBody.code || parsedBody.Code || errorCode || statusCode || "UnknowError",
                    $fault: "client",
                    $metadata: $metadata,
                });
                throw __decorateServiceException(response, parsedBody);
        }
    });
}); };
export var deserializeAws_json1_1ListPartnerEventSourcesCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var data, contents, response;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode >= 300) {
                    return [2, deserializeAws_json1_1ListPartnerEventSourcesCommandError(output, context)];
                }
                return [4, parseBody(output.body, context)];
            case 1:
                data = _a.sent();
                contents = {};
                contents = deserializeAws_json1_1ListPartnerEventSourcesResponse(data, context);
                response = __assign({ $metadata: deserializeMetadata(output) }, contents);
                return [2, Promise.resolve(response)];
        }
    });
}); };
var deserializeAws_json1_1ListPartnerEventSourcesCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, _b, parsedBody, $metadata, statusCode;
    var _c;
    return __generator(this, function (_d) {
        switch (_d.label) {
            case 0:
                _a = [__assign({}, output)];
                _c = {};
                return [4, parseBody(output.body, context)];
            case 1:
                parsedOutput = __assign.apply(void 0, _a.concat([(_c.body = _d.sent(), _c)]));
                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
                _b = errorCode;
                switch (_b) {
                    case "InternalException": return [3, 2];
                    case "com.amazonaws.eventbridge#InternalException": return [3, 2];
                    case "OperationDisabledException": return [3, 4];
                    case "com.amazonaws.eventbridge#OperationDisabledException": return [3, 4];
                }
                return [3, 6];
            case 2: return [4, deserializeAws_json1_1InternalExceptionResponse(parsedOutput, context)];
            case 3: throw _d.sent();
            case 4: return [4, deserializeAws_json1_1OperationDisabledExceptionResponse(parsedOutput, context)];
            case 5: throw _d.sent();
            case 6:
                parsedBody = parsedOutput.body;
                $metadata = deserializeMetadata(output);
                statusCode = $metadata.httpStatusCode ? $metadata.httpStatusCode + "" : undefined;
                response = new __BaseException({
                    name: parsedBody.code || parsedBody.Code || errorCode || statusCode || "UnknowError",
                    $fault: "client",
                    $metadata: $metadata,
                });
                throw __decorateServiceException(response, parsedBody);
        }
    });
}); };
export var deserializeAws_json1_1ListReplaysCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var data, contents, response;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode >= 300) {
                    return [2, deserializeAws_json1_1ListReplaysCommandError(output, context)];
                }
                return [4, parseBody(output.body, context)];
            case 1:
                data = _a.sent();
                contents = {};
                contents = deserializeAws_json1_1ListReplaysResponse(data, context);
                response = __assign({ $metadata: deserializeMetadata(output) }, contents);
                return [2, Promise.resolve(response)];
        }
    });
}); };
var deserializeAws_json1_1ListReplaysCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, _b, parsedBody, $metadata, statusCode;
    var _c;
    return __generator(this, function (_d) {
        switch (_d.label) {
            case 0:
                _a = [__assign({}, output)];
                _c = {};
                return [4, parseBody(output.body, context)];
            case 1:
                parsedOutput = __assign.apply(void 0, _a.concat([(_c.body = _d.sent(), _c)]));
                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
                _b = errorCode;
                switch (_b) {
                    case "InternalException": return [3, 2];
                    case "com.amazonaws.eventbridge#InternalException": return [3, 2];
                }
                return [3, 4];
            case 2: return [4, deserializeAws_json1_1InternalExceptionResponse(parsedOutput, context)];
            case 3: throw _d.sent();
            case 4:
                parsedBody = parsedOutput.body;
                $metadata = deserializeMetadata(output);
                statusCode = $metadata.httpStatusCode ? $metadata.httpStatusCode + "" : undefined;
                response = new __BaseException({
                    name: parsedBody.code || parsedBody.Code || errorCode || statusCode || "UnknowError",
                    $fault: "client",
                    $metadata: $metadata,
                });
                throw __decorateServiceException(response, parsedBody);
        }
    });
}); };
export var deserializeAws_json1_1ListRuleNamesByTargetCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var data, contents, response;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode >= 300) {
                    return [2, deserializeAws_json1_1ListRuleNamesByTargetCommandError(output, context)];
                }
                return [4, parseBody(output.body, context)];
            case 1:
                data = _a.sent();
                contents = {};
                contents = deserializeAws_json1_1ListRuleNamesByTargetResponse(data, context);
                response = __assign({ $metadata: deserializeMetadata(output) }, contents);
                return [2, Promise.resolve(response)];
        }
    });
}); };
var deserializeAws_json1_1ListRuleNamesByTargetCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, _b, parsedBody, $metadata, statusCode;
    var _c;
    return __generator(this, function (_d) {
        switch (_d.label) {
            case 0:
                _a = [__assign({}, output)];
                _c = {};
                return [4, parseBody(output.body, context)];
            case 1:
                parsedOutput = __assign.apply(void 0, _a.concat([(_c.body = _d.sent(), _c)]));
                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
                _b = errorCode;
                switch (_b) {
                    case "InternalException": return [3, 2];
                    case "com.amazonaws.eventbridge#InternalException": return [3, 2];
                    case "ResourceNotFoundException": return [3, 4];
                    case "com.amazonaws.eventbridge#ResourceNotFoundException": return [3, 4];
                }
                return [3, 6];
            case 2: return [4, deserializeAws_json1_1InternalExceptionResponse(parsedOutput, context)];
            case 3: throw _d.sent();
            case 4: return [4, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];
            case 5: throw _d.sent();
            case 6:
                parsedBody = parsedOutput.body;
                $metadata = deserializeMetadata(output);
                statusCode = $metadata.httpStatusCode ? $metadata.httpStatusCode + "" : undefined;
                response = new __BaseException({
                    name: parsedBody.code || parsedBody.Code || errorCode || statusCode || "UnknowError",
                    $fault: "client",
                    $metadata: $metadata,
                });
                throw __decorateServiceException(response, parsedBody);
        }
    });
}); };
export var deserializeAws_json1_1ListRulesCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var data, contents, response;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode >= 300) {
                    return [2, deserializeAws_json1_1ListRulesCommandError(output, context)];
                }
                return [4, parseBody(output.body, context)];
            case 1:
                data = _a.sent();
                contents = {};
                contents = deserializeAws_json1_1ListRulesResponse(data, context);
                response = __assign({ $metadata: deserializeMetadata(output) }, contents);
                return [2, Promise.resolve(response)];
        }
    });
}); };
var deserializeAws_json1_1ListRulesCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, _b, parsedBody, $metadata, statusCode;
    var _c;
    return __generator(this, function (_d) {
        switch (_d.label) {
            case 0:
                _a = [__assign({}, output)];
                _c = {};
                return [4, parseBody(output.body, context)];
            case 1:
                parsedOutput = __assign.apply(void 0, _a.concat([(_c.body = _d.sent(), _c)]));
                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
                _b = errorCode;
                switch (_b) {
                    case "InternalException": return [3, 2];
                    case "com.amazonaws.eventbridge#InternalException": return [3, 2];
                    case "ResourceNotFoundException": return [3, 4];
                    case "com.amazonaws.eventbridge#ResourceNotFoundException": return [3, 4];
                }
                return [3, 6];
            case 2: return [4, deserializeAws_json1_1InternalExceptionResponse(parsedOutput, context)];
            case 3: throw _d.sent();
            case 4: return [4, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];
            case 5: throw _d.sent();
            case 6:
                parsedBody = parsedOutput.body;
                $metadata = deserializeMetadata(output);
                statusCode = $metadata.httpStatusCode ? $metadata.httpStatusCode + "" : undefined;
                response = new __BaseException({
                    name: parsedBody.code || parsedBody.Code || errorCode || statusCode || "UnknowError",
                    $fault: "client",
                    $metadata: $metadata,
                });
                throw __decorateServiceException(response, parsedBody);
        }
    });
}); };
export var deserializeAws_json1_1ListTagsForResourceCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var data, contents, response;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode >= 300) {
                    return [2, deserializeAws_json1_1ListTagsForResourceCommandError(output, context)];
                }
                return [4, parseBody(output.body, context)];
            case 1:
                data = _a.sent();
                contents = {};
                contents = deserializeAws_json1_1ListTagsForResourceResponse(data, context);
                response = __assign({ $metadata: deserializeMetadata(output) }, contents);
                return [2, Promise.resolve(response)];
        }
    });
}); };
var deserializeAws_json1_1ListTagsForResourceCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, _b, parsedBody, $metadata, statusCode;
    var _c;
    return __generator(this, function (_d) {
        switch (_d.label) {
            case 0:
                _a = [__assign({}, output)];
                _c = {};
                return [4, parseBody(output.body, context)];
            case 1:
                parsedOutput = __assign.apply(void 0, _a.concat([(_c.body = _d.sent(), _c)]));
                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
                _b = errorCode;
                switch (_b) {
                    case "InternalException": return [3, 2];
                    case "com.amazonaws.eventbridge#InternalException": return [3, 2];
                    case "ResourceNotFoundException": return [3, 4];
                    case "com.amazonaws.eventbridge#ResourceNotFoundException": return [3, 4];
                }
                return [3, 6];
            case 2: return [4, deserializeAws_json1_1InternalExceptionResponse(parsedOutput, context)];
            case 3: throw _d.sent();
            case 4: return [4, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];
            case 5: throw _d.sent();
            case 6:
                parsedBody = parsedOutput.body;
                $metadata = deserializeMetadata(output);
                statusCode = $metadata.httpStatusCode ? $metadata.httpStatusCode + "" : undefined;
                response = new __BaseException({
                    name: parsedBody.code || parsedBody.Code || errorCode || statusCode || "UnknowError",
                    $fault: "client",
                    $metadata: $metadata,
                });
                throw __decorateServiceException(response, parsedBody);
        }
    });
}); };
export var deserializeAws_json1_1ListTargetsByRuleCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var data, contents, response;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode >= 300) {
                    return [2, deserializeAws_json1_1ListTargetsByRuleCommandError(output, context)];
                }
                return [4, parseBody(output.body, context)];
            case 1:
                data = _a.sent();
                contents = {};
                contents = deserializeAws_json1_1ListTargetsByRuleResponse(data, context);
                response = __assign({ $metadata: deserializeMetadata(output) }, contents);
                return [2, Promise.resolve(response)];
        }
    });
}); };
var deserializeAws_json1_1ListTargetsByRuleCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, _b, parsedBody, $metadata, statusCode;
    var _c;
    return __generator(this, function (_d) {
        switch (_d.label) {
            case 0:
                _a = [__assign({}, output)];
                _c = {};
                return [4, parseBody(output.body, context)];
            case 1:
                parsedOutput = __assign.apply(void 0, _a.concat([(_c.body = _d.sent(), _c)]));
                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
                _b = errorCode;
                switch (_b) {
                    case "InternalException": return [3, 2];
                    case "com.amazonaws.eventbridge#InternalException": return [3, 2];
                    case "ResourceNotFoundException": return [3, 4];
                    case "com.amazonaws.eventbridge#ResourceNotFoundException": return [3, 4];
                }
                return [3, 6];
            case 2: return [4, deserializeAws_json1_1InternalExceptionResponse(parsedOutput, context)];
            case 3: throw _d.sent();
            case 4: return [4, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];
            case 5: throw _d.sent();
            case 6:
                parsedBody = parsedOutput.body;
                $metadata = deserializeMetadata(output);
                statusCode = $metadata.httpStatusCode ? $metadata.httpStatusCode + "" : undefined;
                response = new __BaseException({
                    name: parsedBody.code || parsedBody.Code || errorCode || statusCode || "UnknowError",
                    $fault: "client",
                    $metadata: $metadata,
                });
                throw __decorateServiceException(response, parsedBody);
        }
    });
}); };
export var deserializeAws_json1_1PutEventsCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var data, contents, response;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode >= 300) {
                    return [2, deserializeAws_json1_1PutEventsCommandError(output, context)];
                }
                return [4, parseBody(output.body, context)];
            case 1:
                data = _a.sent();
                contents = {};
                contents = deserializeAws_json1_1PutEventsResponse(data, context);
                response = __assign({ $metadata: deserializeMetadata(output) }, contents);
                return [2, Promise.resolve(response)];
        }
    });
}); };
var deserializeAws_json1_1PutEventsCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, _b, parsedBody, $metadata, statusCode;
    var _c;
    return __generator(this, function (_d) {
        switch (_d.label) {
            case 0:
                _a = [__assign({}, output)];
                _c = {};
                return [4, parseBody(output.body, context)];
            case 1:
                parsedOutput = __assign.apply(void 0, _a.concat([(_c.body = _d.sent(), _c)]));
                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
                _b = errorCode;
                switch (_b) {
                    case "InternalException": return [3, 2];
                    case "com.amazonaws.eventbridge#InternalException": return [3, 2];
                }
                return [3, 4];
            case 2: return [4, deserializeAws_json1_1InternalExceptionResponse(parsedOutput, context)];
            case 3: throw _d.sent();
            case 4:
                parsedBody = parsedOutput.body;
                $metadata = deserializeMetadata(output);
                statusCode = $metadata.httpStatusCode ? $metadata.httpStatusCode + "" : undefined;
                response = new __BaseException({
                    name: parsedBody.code || parsedBody.Code || errorCode || statusCode || "UnknowError",
                    $fault: "client",
                    $metadata: $metadata,
                });
                throw __decorateServiceException(response, parsedBody);
        }
    });
}); };
export var deserializeAws_json1_1PutPartnerEventsCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var data, contents, response;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode >= 300) {
                    return [2, deserializeAws_json1_1PutPartnerEventsCommandError(output, context)];
                }
                return [4, parseBody(output.body, context)];
            case 1:
                data = _a.sent();
                contents = {};
                contents = deserializeAws_json1_1PutPartnerEventsResponse(data, context);
                response = __assign({ $metadata: deserializeMetadata(output) }, contents);
                return [2, Promise.resolve(response)];
        }
    });
}); };
var deserializeAws_json1_1PutPartnerEventsCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, _b, parsedBody, $metadata, statusCode;
    var _c;
    return __generator(this, function (_d) {
        switch (_d.label) {
            case 0:
                _a = [__assign({}, output)];
                _c = {};
                return [4, parseBody(output.body, context)];
            case 1:
                parsedOutput = __assign.apply(void 0, _a.concat([(_c.body = _d.sent(), _c)]));
                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
                _b = errorCode;
                switch (_b) {
                    case "InternalException": return [3, 2];
                    case "com.amazonaws.eventbridge#InternalException": return [3, 2];
                    case "OperationDisabledException": return [3, 4];
                    case "com.amazonaws.eventbridge#OperationDisabledException": return [3, 4];
                }
                return [3, 6];
            case 2: return [4, deserializeAws_json1_1InternalExceptionResponse(parsedOutput, context)];
            case 3: throw _d.sent();
            case 4: return [4, deserializeAws_json1_1OperationDisabledExceptionResponse(parsedOutput, context)];
            case 5: throw _d.sent();
            case 6:
                parsedBody = parsedOutput.body;
                $metadata = deserializeMetadata(output);
                statusCode = $metadata.httpStatusCode ? $metadata.httpStatusCode + "" : undefined;
                response = new __BaseException({
                    name: parsedBody.code || parsedBody.Code || errorCode || statusCode || "UnknowError",
                    $fault: "client",
                    $metadata: $metadata,
                });
                throw __decorateServiceException(response, parsedBody);
        }
    });
}); };
export var deserializeAws_json1_1PutPermissionCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var response;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode >= 300) {
                    return [2, deserializeAws_json1_1PutPermissionCommandError(output, context)];
                }
                return [4, collectBody(output.body, context)];
            case 1:
                _a.sent();
                response = {
                    $metadata: deserializeMetadata(output),
                };
                return [2, Promise.resolve(response)];
        }
    });
}); };
var deserializeAws_json1_1PutPermissionCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, _b, parsedBody, $metadata, statusCode;
    var _c;
    return __generator(this, function (_d) {
        switch (_d.label) {
            case 0:
                _a = [__assign({}, output)];
                _c = {};
                return [4, parseBody(output.body, context)];
            case 1:
                parsedOutput = __assign.apply(void 0, _a.concat([(_c.body = _d.sent(), _c)]));
                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
                _b = errorCode;
                switch (_b) {
                    case "ConcurrentModificationException": return [3, 2];
                    case "com.amazonaws.eventbridge#ConcurrentModificationException": return [3, 2];
                    case "InternalException": return [3, 4];
                    case "com.amazonaws.eventbridge#InternalException": return [3, 4];
                    case "OperationDisabledException": return [3, 6];
                    case "com.amazonaws.eventbridge#OperationDisabledException": return [3, 6];
                    case "PolicyLengthExceededException": return [3, 8];
                    case "com.amazonaws.eventbridge#PolicyLengthExceededException": return [3, 8];
                    case "ResourceNotFoundException": return [3, 10];
                    case "com.amazonaws.eventbridge#ResourceNotFoundException": return [3, 10];
                }
                return [3, 12];
            case 2: return [4, deserializeAws_json1_1ConcurrentModificationExceptionResponse(parsedOutput, context)];
            case 3: throw _d.sent();
            case 4: return [4, deserializeAws_json1_1InternalExceptionResponse(parsedOutput, context)];
            case 5: throw _d.sent();
            case 6: return [4, deserializeAws_json1_1OperationDisabledExceptionResponse(parsedOutput, context)];
            case 7: throw _d.sent();
            case 8: return [4, deserializeAws_json1_1PolicyLengthExceededExceptionResponse(parsedOutput, context)];
            case 9: throw _d.sent();
            case 10: return [4, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];
            case 11: throw _d.sent();
            case 12:
                parsedBody = parsedOutput.body;
                $metadata = deserializeMetadata(output);
                statusCode = $metadata.httpStatusCode ? $metadata.httpStatusCode + "" : undefined;
                response = new __BaseException({
                    name: parsedBody.code || parsedBody.Code || errorCode || statusCode || "UnknowError",
                    $fault: "client",
                    $metadata: $metadata,
                });
                throw __decorateServiceException(response, parsedBody);
        }
    });
}); };
export var deserializeAws_json1_1PutRuleCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var data, contents, response;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode >= 300) {
                    return [2, deserializeAws_json1_1PutRuleCommandError(output, context)];
                }
                return [4, parseBody(output.body, context)];
            case 1:
                data = _a.sent();
                contents = {};
                contents = deserializeAws_json1_1PutRuleResponse(data, context);
                response = __assign({ $metadata: deserializeMetadata(output) }, contents);
                return [2, Promise.resolve(response)];
        }
    });
}); };
var deserializeAws_json1_1PutRuleCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, _b, parsedBody, $metadata, statusCode;
    var _c;
    return __generator(this, function (_d) {
        switch (_d.label) {
            case 0:
                _a = [__assign({}, output)];
                _c = {};
                return [4, parseBody(output.body, context)];
            case 1:
                parsedOutput = __assign.apply(void 0, _a.concat([(_c.body = _d.sent(), _c)]));
                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
                _b = errorCode;
                switch (_b) {
                    case "ConcurrentModificationException": return [3, 2];
                    case "com.amazonaws.eventbridge#ConcurrentModificationException": return [3, 2];
                    case "InternalException": return [3, 4];
                    case "com.amazonaws.eventbridge#InternalException": return [3, 4];
                    case "InvalidEventPatternException": return [3, 6];
                    case "com.amazonaws.eventbridge#InvalidEventPatternException": return [3, 6];
                    case "LimitExceededException": return [3, 8];
                    case "com.amazonaws.eventbridge#LimitExceededException": return [3, 8];
                    case "ManagedRuleException": return [3, 10];
                    case "com.amazonaws.eventbridge#ManagedRuleException": return [3, 10];
                    case "ResourceNotFoundException": return [3, 12];
                    case "com.amazonaws.eventbridge#ResourceNotFoundException": return [3, 12];
                }
                return [3, 14];
            case 2: return [4, deserializeAws_json1_1ConcurrentModificationExceptionResponse(parsedOutput, context)];
            case 3: throw _d.sent();
            case 4: return [4, deserializeAws_json1_1InternalExceptionResponse(parsedOutput, context)];
            case 5: throw _d.sent();
            case 6: return [4, deserializeAws_json1_1InvalidEventPatternExceptionResponse(parsedOutput, context)];
            case 7: throw _d.sent();
            case 8: return [4, deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];
            case 9: throw _d.sent();
            case 10: return [4, deserializeAws_json1_1ManagedRuleExceptionResponse(parsedOutput, context)];
            case 11: throw _d.sent();
            case 12: return [4, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];
            case 13: throw _d.sent();
            case 14:
                parsedBody = parsedOutput.body;
                $metadata = deserializeMetadata(output);
                statusCode = $metadata.httpStatusCode ? $metadata.httpStatusCode + "" : undefined;
                response = new __BaseException({
                    name: parsedBody.code || parsedBody.Code || errorCode || statusCode || "UnknowError",
                    $fault: "client",
                    $metadata: $metadata,
                });
                throw __decorateServiceException(response, parsedBody);
        }
    });
}); };
export var deserializeAws_json1_1PutTargetsCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var data, contents, response;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode >= 300) {
                    return [2, deserializeAws_json1_1PutTargetsCommandError(output, context)];
                }
                return [4, parseBody(output.body, context)];
            case 1:
                data = _a.sent();
                contents = {};
                contents = deserializeAws_json1_1PutTargetsResponse(data, context);
                response = __assign({ $metadata: deserializeMetadata(output) }, contents);
                return [2, Promise.resolve(response)];
        }
    });
}); };
var deserializeAws_json1_1PutTargetsCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, _b, parsedBody, $metadata, statusCode;
    var _c;
    return __generator(this, function (_d) {
        switch (_d.label) {
            case 0:
                _a = [__assign({}, output)];
                _c = {};
                return [4, parseBody(output.body, context)];
            case 1:
                parsedOutput = __assign.apply(void 0, _a.concat([(_c.body = _d.sent(), _c)]));
                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
                _b = errorCode;
                switch (_b) {
                    case "ConcurrentModificationException": return [3, 2];
                    case "com.amazonaws.eventbridge#ConcurrentModificationException": return [3, 2];
                    case "InternalException": return [3, 4];
                    case "com.amazonaws.eventbridge#InternalException": return [3, 4];
                    case "LimitExceededException": return [3, 6];
                    case "com.amazonaws.eventbridge#LimitExceededException": return [3, 6];
                    case "ManagedRuleException": return [3, 8];
                    case "com.amazonaws.eventbridge#ManagedRuleException": return [3, 8];
                    case "ResourceNotFoundException": return [3, 10];
                    case "com.amazonaws.eventbridge#ResourceNotFoundException": return [3, 10];
                }
                return [3, 12];
            case 2: return [4, deserializeAws_json1_1ConcurrentModificationExceptionResponse(parsedOutput, context)];
            case 3: throw _d.sent();
            case 4: return [4, deserializeAws_json1_1InternalExceptionResponse(parsedOutput, context)];
            case 5: throw _d.sent();
            case 6: return [4, deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];
            case 7: throw _d.sent();
            case 8: return [4, deserializeAws_json1_1ManagedRuleExceptionResponse(parsedOutput, context)];
            case 9: throw _d.sent();
            case 10: return [4, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];
            case 11: throw _d.sent();
            case 12:
                parsedBody = parsedOutput.body;
                $metadata = deserializeMetadata(output);
                statusCode = $metadata.httpStatusCode ? $metadata.httpStatusCode + "" : undefined;
                response = new __BaseException({
                    name: parsedBody.code || parsedBody.Code || errorCode || statusCode || "UnknowError",
                    $fault: "client",
                    $metadata: $metadata,
                });
                throw __decorateServiceException(response, parsedBody);
        }
    });
}); };
export var deserializeAws_json1_1RemovePermissionCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var response;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode >= 300) {
                    return [2, deserializeAws_json1_1RemovePermissionCommandError(output, context)];
                }
                return [4, collectBody(output.body, context)];
            case 1:
                _a.sent();
                response = {
                    $metadata: deserializeMetadata(output),
                };
                return [2, Promise.resolve(response)];
        }
    });
}); };
var deserializeAws_json1_1RemovePermissionCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, _b, parsedBody, $metadata, statusCode;
    var _c;
    return __generator(this, function (_d) {
        switch (_d.label) {
            case 0:
                _a = [__assign({}, output)];
                _c = {};
                return [4, parseBody(output.body, context)];
            case 1:
                parsedOutput = __assign.apply(void 0, _a.concat([(_c.body = _d.sent(), _c)]));
                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
                _b = errorCode;
                switch (_b) {
                    case "ConcurrentModificationException": return [3, 2];
                    case "com.amazonaws.eventbridge#ConcurrentModificationException": return [3, 2];
                    case "InternalException": return [3, 4];
                    case "com.amazonaws.eventbridge#InternalException": return [3, 4];
                    case "OperationDisabledException": return [3, 6];
                    case "com.amazonaws.eventbridge#OperationDisabledException": return [3, 6];
                    case "ResourceNotFoundException": return [3, 8];
                    case "com.amazonaws.eventbridge#ResourceNotFoundException": return [3, 8];
                }
                return [3, 10];
            case 2: return [4, deserializeAws_json1_1ConcurrentModificationExceptionResponse(parsedOutput, context)];
            case 3: throw _d.sent();
            case 4: return [4, deserializeAws_json1_1InternalExceptionResponse(parsedOutput, context)];
            case 5: throw _d.sent();
            case 6: return [4, deserializeAws_json1_1OperationDisabledExceptionResponse(parsedOutput, context)];
            case 7: throw _d.sent();
            case 8: return [4, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];
            case 9: throw _d.sent();
            case 10:
                parsedBody = parsedOutput.body;
                $metadata = deserializeMetadata(output);
                statusCode = $metadata.httpStatusCode ? $metadata.httpStatusCode + "" : undefined;
                response = new __BaseException({
                    name: parsedBody.code || parsedBody.Code || errorCode || statusCode || "UnknowError",
                    $fault: "client",
                    $metadata: $metadata,
                });
                throw __decorateServiceException(response, parsedBody);
        }
    });
}); };
export var deserializeAws_json1_1RemoveTargetsCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var data, contents, response;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode >= 300) {
                    return [2, deserializeAws_json1_1RemoveTargetsCommandError(output, context)];
                }
                return [4, parseBody(output.body, context)];
            case 1:
                data = _a.sent();
                contents = {};
                contents = deserializeAws_json1_1RemoveTargetsResponse(data, context);
                response = __assign({ $metadata: deserializeMetadata(output) }, contents);
                return [2, Promise.resolve(response)];
        }
    });
}); };
var deserializeAws_json1_1RemoveTargetsCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, _b, parsedBody, $metadata, statusCode;
    var _c;
    return __generator(this, function (_d) {
        switch (_d.label) {
            case 0:
                _a = [__assign({}, output)];
                _c = {};
                return [4, parseBody(output.body, context)];
            case 1:
                parsedOutput = __assign.apply(void 0, _a.concat([(_c.body = _d.sent(), _c)]));
                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
                _b = errorCode;
                switch (_b) {
                    case "ConcurrentModificationException": return [3, 2];
                    case "com.amazonaws.eventbridge#ConcurrentModificationException": return [3, 2];
                    case "InternalException": return [3, 4];
                    case "com.amazonaws.eventbridge#InternalException": return [3, 4];
                    case "ManagedRuleException": return [3, 6];
                    case "com.amazonaws.eventbridge#ManagedRuleException": return [3, 6];
                    case "ResourceNotFoundException": return [3, 8];
                    case "com.amazonaws.eventbridge#ResourceNotFoundException": return [3, 8];
                }
                return [3, 10];
            case 2: return [4, deserializeAws_json1_1ConcurrentModificationExceptionResponse(parsedOutput, context)];
            case 3: throw _d.sent();
            case 4: return [4, deserializeAws_json1_1InternalExceptionResponse(parsedOutput, context)];
            case 5: throw _d.sent();
            case 6: return [4, deserializeAws_json1_1ManagedRuleExceptionResponse(parsedOutput, context)];
            case 7: throw _d.sent();
            case 8: return [4, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];
            case 9: throw _d.sent();
            case 10:
                parsedBody = parsedOutput.body;
                $metadata = deserializeMetadata(output);
                statusCode = $metadata.httpStatusCode ? $metadata.httpStatusCode + "" : undefined;
                response = new __BaseException({
                    name: parsedBody.code || parsedBody.Code || errorCode || statusCode || "UnknowError",
                    $fault: "client",
                    $metadata: $metadata,
                });
                throw __decorateServiceException(response, parsedBody);
        }
    });
}); };
export var deserializeAws_json1_1StartReplayCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var data, contents, response;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode >= 300) {
                    return [2, deserializeAws_json1_1StartReplayCommandError(output, context)];
                }
                return [4, parseBody(output.body, context)];
            case 1:
                data = _a.sent();
                contents = {};
                contents = deserializeAws_json1_1StartReplayResponse(data, context);
                response = __assign({ $metadata: deserializeMetadata(output) }, contents);
                return [2, Promise.resolve(response)];
        }
    });
}); };
var deserializeAws_json1_1StartReplayCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, _b, parsedBody, $metadata, statusCode;
    var _c;
    return __generator(this, function (_d) {
        switch (_d.label) {
            case 0:
                _a = [__assign({}, output)];
                _c = {};
                return [4, parseBody(output.body, context)];
            case 1:
                parsedOutput = __assign.apply(void 0, _a.concat([(_c.body = _d.sent(), _c)]));
                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
                _b = errorCode;
                switch (_b) {
                    case "InternalException": return [3, 2];
                    case "com.amazonaws.eventbridge#InternalException": return [3, 2];
                    case "InvalidEventPatternException": return [3, 4];
                    case "com.amazonaws.eventbridge#InvalidEventPatternException": return [3, 4];
                    case "LimitExceededException": return [3, 6];
                    case "com.amazonaws.eventbridge#LimitExceededException": return [3, 6];
                    case "ResourceAlreadyExistsException": return [3, 8];
                    case "com.amazonaws.eventbridge#ResourceAlreadyExistsException": return [3, 8];
                    case "ResourceNotFoundException": return [3, 10];
                    case "com.amazonaws.eventbridge#ResourceNotFoundException": return [3, 10];
                }
                return [3, 12];
            case 2: return [4, deserializeAws_json1_1InternalExceptionResponse(parsedOutput, context)];
            case 3: throw _d.sent();
            case 4: return [4, deserializeAws_json1_1InvalidEventPatternExceptionResponse(parsedOutput, context)];
            case 5: throw _d.sent();
            case 6: return [4, deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];
            case 7: throw _d.sent();
            case 8: return [4, deserializeAws_json1_1ResourceAlreadyExistsExceptionResponse(parsedOutput, context)];
            case 9: throw _d.sent();
            case 10: return [4, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];
            case 11: throw _d.sent();
            case 12:
                parsedBody = parsedOutput.body;
                $metadata = deserializeMetadata(output);
                statusCode = $metadata.httpStatusCode ? $metadata.httpStatusCode + "" : undefined;
                response = new __BaseException({
                    name: parsedBody.code || parsedBody.Code || errorCode || statusCode || "UnknowError",
                    $fault: "client",
                    $metadata: $metadata,
                });
                throw __decorateServiceException(response, parsedBody);
        }
    });
}); };
export var deserializeAws_json1_1TagResourceCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var data, contents, response;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode >= 300) {
                    return [2, deserializeAws_json1_1TagResourceCommandError(output, context)];
                }
                return [4, parseBody(output.body, context)];
            case 1:
                data = _a.sent();
                contents = {};
                contents = deserializeAws_json1_1TagResourceResponse(data, context);
                response = __assign({ $metadata: deserializeMetadata(output) }, contents);
                return [2, Promise.resolve(response)];
        }
    });
}); };
var deserializeAws_json1_1TagResourceCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, _b, parsedBody, $metadata, statusCode;
    var _c;
    return __generator(this, function (_d) {
        switch (_d.label) {
            case 0:
                _a = [__assign({}, output)];
                _c = {};
                return [4, parseBody(output.body, context)];
            case 1:
                parsedOutput = __assign.apply(void 0, _a.concat([(_c.body = _d.sent(), _c)]));
                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
                _b = errorCode;
                switch (_b) {
                    case "ConcurrentModificationException": return [3, 2];
                    case "com.amazonaws.eventbridge#ConcurrentModificationException": return [3, 2];
                    case "InternalException": return [3, 4];
                    case "com.amazonaws.eventbridge#InternalException": return [3, 4];
                    case "ManagedRuleException": return [3, 6];
                    case "com.amazonaws.eventbridge#ManagedRuleException": return [3, 6];
                    case "ResourceNotFoundException": return [3, 8];
                    case "com.amazonaws.eventbridge#ResourceNotFoundException": return [3, 8];
                }
                return [3, 10];
            case 2: return [4, deserializeAws_json1_1ConcurrentModificationExceptionResponse(parsedOutput, context)];
            case 3: throw _d.sent();
            case 4: return [4, deserializeAws_json1_1InternalExceptionResponse(parsedOutput, context)];
            case 5: throw _d.sent();
            case 6: return [4, deserializeAws_json1_1ManagedRuleExceptionResponse(parsedOutput, context)];
            case 7: throw _d.sent();
            case 8: return [4, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];
            case 9: throw _d.sent();
            case 10:
                parsedBody = parsedOutput.body;
                $metadata = deserializeMetadata(output);
                statusCode = $metadata.httpStatusCode ? $metadata.httpStatusCode + "" : undefined;
                response = new __BaseException({
                    name: parsedBody.code || parsedBody.Code || errorCode || statusCode || "UnknowError",
                    $fault: "client",
                    $metadata: $metadata,
                });
                throw __decorateServiceException(response, parsedBody);
        }
    });
}); };
export var deserializeAws_json1_1TestEventPatternCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var data, contents, response;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode >= 300) {
                    return [2, deserializeAws_json1_1TestEventPatternCommandError(output, context)];
                }
                return [4, parseBody(output.body, context)];
            case 1:
                data = _a.sent();
                contents = {};
                contents = deserializeAws_json1_1TestEventPatternResponse(data, context);
                response = __assign({ $metadata: deserializeMetadata(output) }, contents);
                return [2, Promise.resolve(response)];
        }
    });
}); };
var deserializeAws_json1_1TestEventPatternCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, _b, parsedBody, $metadata, statusCode;
    var _c;
    return __generator(this, function (_d) {
        switch (_d.label) {
            case 0:
                _a = [__assign({}, output)];
                _c = {};
                return [4, parseBody(output.body, context)];
            case 1:
                parsedOutput = __assign.apply(void 0, _a.concat([(_c.body = _d.sent(), _c)]));
                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
                _b = errorCode;
                switch (_b) {
                    case "InternalException": return [3, 2];
                    case "com.amazonaws.eventbridge#InternalException": return [3, 2];
                    case "InvalidEventPatternException": return [3, 4];
                    case "com.amazonaws.eventbridge#InvalidEventPatternException": return [3, 4];
                }
                return [3, 6];
            case 2: return [4, deserializeAws_json1_1InternalExceptionResponse(parsedOutput, context)];
            case 3: throw _d.sent();
            case 4: return [4, deserializeAws_json1_1InvalidEventPatternExceptionResponse(parsedOutput, context)];
            case 5: throw _d.sent();
            case 6:
                parsedBody = parsedOutput.body;
                $metadata = deserializeMetadata(output);
                statusCode = $metadata.httpStatusCode ? $metadata.httpStatusCode + "" : undefined;
                response = new __BaseException({
                    name: parsedBody.code || parsedBody.Code || errorCode || statusCode || "UnknowError",
                    $fault: "client",
                    $metadata: $metadata,
                });
                throw __decorateServiceException(response, parsedBody);
        }
    });
}); };
export var deserializeAws_json1_1UntagResourceCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var data, contents, response;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode >= 300) {
                    return [2, deserializeAws_json1_1UntagResourceCommandError(output, context)];
                }
                return [4, parseBody(output.body, context)];
            case 1:
                data = _a.sent();
                contents = {};
                contents = deserializeAws_json1_1UntagResourceResponse(data, context);
                response = __assign({ $metadata: deserializeMetadata(output) }, contents);
                return [2, Promise.resolve(response)];
        }
    });
}); };
var deserializeAws_json1_1UntagResourceCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, _b, parsedBody, $metadata, statusCode;
    var _c;
    return __generator(this, function (_d) {
        switch (_d.label) {
            case 0:
                _a = [__assign({}, output)];
                _c = {};
                return [4, parseBody(output.body, context)];
            case 1:
                parsedOutput = __assign.apply(void 0, _a.concat([(_c.body = _d.sent(), _c)]));
                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
                _b = errorCode;
                switch (_b) {
                    case "ConcurrentModificationException": return [3, 2];
                    case "com.amazonaws.eventbridge#ConcurrentModificationException": return [3, 2];
                    case "InternalException": return [3, 4];
                    case "com.amazonaws.eventbridge#InternalException": return [3, 4];
                    case "ManagedRuleException": return [3, 6];
                    case "com.amazonaws.eventbridge#ManagedRuleException": return [3, 6];
                    case "ResourceNotFoundException": return [3, 8];
                    case "com.amazonaws.eventbridge#ResourceNotFoundException": return [3, 8];
                }
                return [3, 10];
            case 2: return [4, deserializeAws_json1_1ConcurrentModificationExceptionResponse(parsedOutput, context)];
            case 3: throw _d.sent();
            case 4: return [4, deserializeAws_json1_1InternalExceptionResponse(parsedOutput, context)];
            case 5: throw _d.sent();
            case 6: return [4, deserializeAws_json1_1ManagedRuleExceptionResponse(parsedOutput, context)];
            case 7: throw _d.sent();
            case 8: return [4, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];
            case 9: throw _d.sent();
            case 10:
                parsedBody = parsedOutput.body;
                $metadata = deserializeMetadata(output);
                statusCode = $metadata.httpStatusCode ? $metadata.httpStatusCode + "" : undefined;
                response = new __BaseException({
                    name: parsedBody.code || parsedBody.Code || errorCode || statusCode || "UnknowError",
                    $fault: "client",
                    $metadata: $metadata,
                });
                throw __decorateServiceException(response, parsedBody);
        }
    });
}); };
export var deserializeAws_json1_1UpdateApiDestinationCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var data, contents, response;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode >= 300) {
                    return [2, deserializeAws_json1_1UpdateApiDestinationCommandError(output, context)];
                }
                return [4, parseBody(output.body, context)];
            case 1:
                data = _a.sent();
                contents = {};
                contents = deserializeAws_json1_1UpdateApiDestinationResponse(data, context);
                response = __assign({ $metadata: deserializeMetadata(output) }, contents);
                return [2, Promise.resolve(response)];
        }
    });
}); };
var deserializeAws_json1_1UpdateApiDestinationCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, _b, parsedBody, $metadata, statusCode;
    var _c;
    return __generator(this, function (_d) {
        switch (_d.label) {
            case 0:
                _a = [__assign({}, output)];
                _c = {};
                return [4, parseBody(output.body, context)];
            case 1:
                parsedOutput = __assign.apply(void 0, _a.concat([(_c.body = _d.sent(), _c)]));
                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
                _b = errorCode;
                switch (_b) {
                    case "ConcurrentModificationException": return [3, 2];
                    case "com.amazonaws.eventbridge#ConcurrentModificationException": return [3, 2];
                    case "InternalException": return [3, 4];
                    case "com.amazonaws.eventbridge#InternalException": return [3, 4];
                    case "LimitExceededException": return [3, 6];
                    case "com.amazonaws.eventbridge#LimitExceededException": return [3, 6];
                    case "ResourceNotFoundException": return [3, 8];
                    case "com.amazonaws.eventbridge#ResourceNotFoundException": return [3, 8];
                }
                return [3, 10];
            case 2: return [4, deserializeAws_json1_1ConcurrentModificationExceptionResponse(parsedOutput, context)];
            case 3: throw _d.sent();
            case 4: return [4, deserializeAws_json1_1InternalExceptionResponse(parsedOutput, context)];
            case 5: throw _d.sent();
            case 6: return [4, deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];
            case 7: throw _d.sent();
            case 8: return [4, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];
            case 9: throw _d.sent();
            case 10:
                parsedBody = parsedOutput.body;
                $metadata = deserializeMetadata(output);
                statusCode = $metadata.httpStatusCode ? $metadata.httpStatusCode + "" : undefined;
                response = new __BaseException({
                    name: parsedBody.code || parsedBody.Code || errorCode || statusCode || "UnknowError",
                    $fault: "client",
                    $metadata: $metadata,
                });
                throw __decorateServiceException(response, parsedBody);
        }
    });
}); };
export var deserializeAws_json1_1UpdateArchiveCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var data, contents, response;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode >= 300) {
                    return [2, deserializeAws_json1_1UpdateArchiveCommandError(output, context)];
                }
                return [4, parseBody(output.body, context)];
            case 1:
                data = _a.sent();
                contents = {};
                contents = deserializeAws_json1_1UpdateArchiveResponse(data, context);
                response = __assign({ $metadata: deserializeMetadata(output) }, contents);
                return [2, Promise.resolve(response)];
        }
    });
}); };
var deserializeAws_json1_1UpdateArchiveCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, _b, parsedBody, $metadata, statusCode;
    var _c;
    return __generator(this, function (_d) {
        switch (_d.label) {
            case 0:
                _a = [__assign({}, output)];
                _c = {};
                return [4, parseBody(output.body, context)];
            case 1:
                parsedOutput = __assign.apply(void 0, _a.concat([(_c.body = _d.sent(), _c)]));
                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
                _b = errorCode;
                switch (_b) {
                    case "ConcurrentModificationException": return [3, 2];
                    case "com.amazonaws.eventbridge#ConcurrentModificationException": return [3, 2];
                    case "InternalException": return [3, 4];
                    case "com.amazonaws.eventbridge#InternalException": return [3, 4];
                    case "InvalidEventPatternException": return [3, 6];
                    case "com.amazonaws.eventbridge#InvalidEventPatternException": return [3, 6];
                    case "LimitExceededException": return [3, 8];
                    case "com.amazonaws.eventbridge#LimitExceededException": return [3, 8];
                    case "ResourceNotFoundException": return [3, 10];
                    case "com.amazonaws.eventbridge#ResourceNotFoundException": return [3, 10];
                }
                return [3, 12];
            case 2: return [4, deserializeAws_json1_1ConcurrentModificationExceptionResponse(parsedOutput, context)];
            case 3: throw _d.sent();
            case 4: return [4, deserializeAws_json1_1InternalExceptionResponse(parsedOutput, context)];
            case 5: throw _d.sent();
            case 6: return [4, deserializeAws_json1_1InvalidEventPatternExceptionResponse(parsedOutput, context)];
            case 7: throw _d.sent();
            case 8: return [4, deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];
            case 9: throw _d.sent();
            case 10: return [4, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];
            case 11: throw _d.sent();
            case 12:
                parsedBody = parsedOutput.body;
                $metadata = deserializeMetadata(output);
                statusCode = $metadata.httpStatusCode ? $metadata.httpStatusCode + "" : undefined;
                response = new __BaseException({
                    name: parsedBody.code || parsedBody.Code || errorCode || statusCode || "UnknowError",
                    $fault: "client",
                    $metadata: $metadata,
                });
                throw __decorateServiceException(response, parsedBody);
        }
    });
}); };
export var deserializeAws_json1_1UpdateConnectionCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var data, contents, response;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode >= 300) {
                    return [2, deserializeAws_json1_1UpdateConnectionCommandError(output, context)];
                }
                return [4, parseBody(output.body, context)];
            case 1:
                data = _a.sent();
                contents = {};
                contents = deserializeAws_json1_1UpdateConnectionResponse(data, context);
                response = __assign({ $metadata: deserializeMetadata(output) }, contents);
                return [2, Promise.resolve(response)];
        }
    });
}); };
var deserializeAws_json1_1UpdateConnectionCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, _b, parsedBody, $metadata, statusCode;
    var _c;
    return __generator(this, function (_d) {
        switch (_d.label) {
            case 0:
                _a = [__assign({}, output)];
                _c = {};
                return [4, parseBody(output.body, context)];
            case 1:
                parsedOutput = __assign.apply(void 0, _a.concat([(_c.body = _d.sent(), _c)]));
                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
                _b = errorCode;
                switch (_b) {
                    case "ConcurrentModificationException": return [3, 2];
                    case "com.amazonaws.eventbridge#ConcurrentModificationException": return [3, 2];
                    case "InternalException": return [3, 4];
                    case "com.amazonaws.eventbridge#InternalException": return [3, 4];
                    case "LimitExceededException": return [3, 6];
                    case "com.amazonaws.eventbridge#LimitExceededException": return [3, 6];
                    case "ResourceNotFoundException": return [3, 8];
                    case "com.amazonaws.eventbridge#ResourceNotFoundException": return [3, 8];
                }
                return [3, 10];
            case 2: return [4, deserializeAws_json1_1ConcurrentModificationExceptionResponse(parsedOutput, context)];
            case 3: throw _d.sent();
            case 4: return [4, deserializeAws_json1_1InternalExceptionResponse(parsedOutput, context)];
            case 5: throw _d.sent();
            case 6: return [4, deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];
            case 7: throw _d.sent();
            case 8: return [4, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];
            case 9: throw _d.sent();
            case 10:
                parsedBody = parsedOutput.body;
                $metadata = deserializeMetadata(output);
                statusCode = $metadata.httpStatusCode ? $metadata.httpStatusCode + "" : undefined;
                response = new __BaseException({
                    name: parsedBody.code || parsedBody.Code || errorCode || statusCode || "UnknowError",
                    $fault: "client",
                    $metadata: $metadata,
                });
                throw __decorateServiceException(response, parsedBody);
        }
    });
}); };
export var deserializeAws_json1_1UpdateEndpointCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var data, contents, response;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode >= 300) {
                    return [2, deserializeAws_json1_1UpdateEndpointCommandError(output, context)];
                }
                return [4, parseBody(output.body, context)];
            case 1:
                data = _a.sent();
                contents = {};
                contents = deserializeAws_json1_1UpdateEndpointResponse(data, context);
                response = __assign({ $metadata: deserializeMetadata(output) }, contents);
                return [2, Promise.resolve(response)];
        }
    });
}); };
var deserializeAws_json1_1UpdateEndpointCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, _b, parsedBody, $metadata, statusCode;
    var _c;
    return __generator(this, function (_d) {
        switch (_d.label) {
            case 0:
                _a = [__assign({}, output)];
                _c = {};
                return [4, parseBody(output.body, context)];
            case 1:
                parsedOutput = __assign.apply(void 0, _a.concat([(_c.body = _d.sent(), _c)]));
                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
                _b = errorCode;
                switch (_b) {
                    case "ConcurrentModificationException": return [3, 2];
                    case "com.amazonaws.eventbridge#ConcurrentModificationException": return [3, 2];
                    case "InternalException": return [3, 4];
                    case "com.amazonaws.eventbridge#InternalException": return [3, 4];
                    case "ResourceNotFoundException": return [3, 6];
                    case "com.amazonaws.eventbridge#ResourceNotFoundException": return [3, 6];
                }
                return [3, 8];
            case 2: return [4, deserializeAws_json1_1ConcurrentModificationExceptionResponse(parsedOutput, context)];
            case 3: throw _d.sent();
            case 4: return [4, deserializeAws_json1_1InternalExceptionResponse(parsedOutput, context)];
            case 5: throw _d.sent();
            case 6: return [4, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];
            case 7: throw _d.sent();
            case 8:
                parsedBody = parsedOutput.body;
                $metadata = deserializeMetadata(output);
                statusCode = $metadata.httpStatusCode ? $metadata.httpStatusCode + "" : undefined;
                response = new __BaseException({
                    name: parsedBody.code || parsedBody.Code || errorCode || statusCode || "UnknowError",
                    $fault: "client",
                    $metadata: $metadata,
                });
                throw __decorateServiceException(response, parsedBody);
        }
    });
}); };
var deserializeAws_json1_1ConcurrentModificationExceptionResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {
    var body, deserialized, exception;
    return __generator(this, function (_a) {
        body = parsedOutput.body;
        deserialized = deserializeAws_json1_1ConcurrentModificationException(body, context);
        exception = new ConcurrentModificationException(__assign({ $metadata: deserializeMetadata(parsedOutput) }, deserialized));
        return [2, __decorateServiceException(exception, body)];
    });
}); };
var deserializeAws_json1_1IllegalStatusExceptionResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {
    var body, deserialized, exception;
    return __generator(this, function (_a) {
        body = parsedOutput.body;
        deserialized = deserializeAws_json1_1IllegalStatusException(body, context);
        exception = new IllegalStatusException(__assign({ $metadata: deserializeMetadata(parsedOutput) }, deserialized));
        return [2, __decorateServiceException(exception, body)];
    });
}); };
var deserializeAws_json1_1InternalExceptionResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {
    var body, deserialized, exception;
    return __generator(this, function (_a) {
        body = parsedOutput.body;
        deserialized = deserializeAws_json1_1InternalException(body, context);
        exception = new InternalException(__assign({ $metadata: deserializeMetadata(parsedOutput) }, deserialized));
        return [2, __decorateServiceException(exception, body)];
    });
}); };
var deserializeAws_json1_1InvalidEventPatternExceptionResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {
    var body, deserialized, exception;
    return __generator(this, function (_a) {
        body = parsedOutput.body;
        deserialized = deserializeAws_json1_1InvalidEventPatternException(body, context);
        exception = new InvalidEventPatternException(__assign({ $metadata: deserializeMetadata(parsedOutput) }, deserialized));
        return [2, __decorateServiceException(exception, body)];
    });
}); };
var deserializeAws_json1_1InvalidStateExceptionResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {
    var body, deserialized, exception;
    return __generator(this, function (_a) {
        body = parsedOutput.body;
        deserialized = deserializeAws_json1_1InvalidStateException(body, context);
        exception = new InvalidStateException(__assign({ $metadata: deserializeMetadata(parsedOutput) }, deserialized));
        return [2, __decorateServiceException(exception, body)];
    });
}); };
var deserializeAws_json1_1LimitExceededExceptionResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {
    var body, deserialized, exception;
    return __generator(this, function (_a) {
        body = parsedOutput.body;
        deserialized = deserializeAws_json1_1LimitExceededException(body, context);
        exception = new LimitExceededException(__assign({ $metadata: deserializeMetadata(parsedOutput) }, deserialized));
        return [2, __decorateServiceException(exception, body)];
    });
}); };
var deserializeAws_json1_1ManagedRuleExceptionResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {
    var body, deserialized, exception;
    return __generator(this, function (_a) {
        body = parsedOutput.body;
        deserialized = deserializeAws_json1_1ManagedRuleException(body, context);
        exception = new ManagedRuleException(__assign({ $metadata: deserializeMetadata(parsedOutput) }, deserialized));
        return [2, __decorateServiceException(exception, body)];
    });
}); };
var deserializeAws_json1_1OperationDisabledExceptionResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {
    var body, deserialized, exception;
    return __generator(this, function (_a) {
        body = parsedOutput.body;
        deserialized = deserializeAws_json1_1OperationDisabledException(body, context);
        exception = new OperationDisabledException(__assign({ $metadata: deserializeMetadata(parsedOutput) }, deserialized));
        return [2, __decorateServiceException(exception, body)];
    });
}); };
var deserializeAws_json1_1PolicyLengthExceededExceptionResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {
    var body, deserialized, exception;
    return __generator(this, function (_a) {
        body = parsedOutput.body;
        deserialized = deserializeAws_json1_1PolicyLengthExceededException(body, context);
        exception = new PolicyLengthExceededException(__assign({ $metadata: deserializeMetadata(parsedOutput) }, deserialized));
        return [2, __decorateServiceException(exception, body)];
    });
}); };
var deserializeAws_json1_1ResourceAlreadyExistsExceptionResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {
    var body, deserialized, exception;
    return __generator(this, function (_a) {
        body = parsedOutput.body;
        deserialized = deserializeAws_json1_1ResourceAlreadyExistsException(body, context);
        exception = new ResourceAlreadyExistsException(__assign({ $metadata: deserializeMetadata(parsedOutput) }, deserialized));
        return [2, __decorateServiceException(exception, body)];
    });
}); };
var deserializeAws_json1_1ResourceNotFoundExceptionResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {
    var body, deserialized, exception;
    return __generator(this, function (_a) {
        body = parsedOutput.body;
        deserialized = deserializeAws_json1_1ResourceNotFoundException(body, context);
        exception = new ResourceNotFoundException(__assign({ $metadata: deserializeMetadata(parsedOutput) }, deserialized));
        return [2, __decorateServiceException(exception, body)];
    });
}); };
var serializeAws_json1_1ActivateEventSourceRequest = function (input, context) {
    return __assign({}, (input.Name != null && { Name: input.Name }));
};
var serializeAws_json1_1AwsVpcConfiguration = function (input, context) {
    return __assign(__assign(__assign({}, (input.AssignPublicIp != null && { AssignPublicIp: input.AssignPublicIp })), (input.SecurityGroups != null && {
        SecurityGroups: serializeAws_json1_1StringList(input.SecurityGroups, context),
    })), (input.Subnets != null && { Subnets: serializeAws_json1_1StringList(input.Subnets, context) }));
};
var serializeAws_json1_1BatchArrayProperties = function (input, context) {
    return __assign({}, (input.Size != null && { Size: input.Size }));
};
var serializeAws_json1_1BatchParameters = function (input, context) {
    return __assign(__assign(__assign(__assign({}, (input.ArrayProperties != null && {
        ArrayProperties: serializeAws_json1_1BatchArrayProperties(input.ArrayProperties, context),
    })), (input.JobDefinition != null && { JobDefinition: input.JobDefinition })), (input.JobName != null && { JobName: input.JobName })), (input.RetryStrategy != null && {
        RetryStrategy: serializeAws_json1_1BatchRetryStrategy(input.RetryStrategy, context),
    }));
};
var serializeAws_json1_1BatchRetryStrategy = function (input, context) {
    return __assign({}, (input.Attempts != null && { Attempts: input.Attempts }));
};
var serializeAws_json1_1CancelReplayRequest = function (input, context) {
    return __assign({}, (input.ReplayName != null && { ReplayName: input.ReplayName }));
};
var serializeAws_json1_1CapacityProviderStrategy = function (input, context) {
    return input
        .filter(function (e) { return e != null; })
        .map(function (entry) {
        if (entry === null) {
            return null;
        }
        return serializeAws_json1_1CapacityProviderStrategyItem(entry, context);
    });
};
var serializeAws_json1_1CapacityProviderStrategyItem = function (input, context) {
    return __assign(__assign(__assign({}, (input.base != null && { base: input.base })), (input.capacityProvider != null && { capacityProvider: input.capacityProvider })), (input.weight != null && { weight: input.weight }));
};
var serializeAws_json1_1Condition = function (input, context) {
    return __assign(__assign(__assign({}, (input.Key != null && { Key: input.Key })), (input.Type != null && { Type: input.Type })), (input.Value != null && { Value: input.Value }));
};
var serializeAws_json1_1ConnectionBodyParameter = function (input, context) {
    return __assign(__assign(__assign({}, (input.IsValueSecret != null && { IsValueSecret: input.IsValueSecret })), (input.Key != null && { Key: input.Key })), (input.Value != null && { Value: input.Value }));
};
var serializeAws_json1_1ConnectionBodyParametersList = function (input, context) {
    return input
        .filter(function (e) { return e != null; })
        .map(function (entry) {
        if (entry === null) {
            return null;
        }
        return serializeAws_json1_1ConnectionBodyParameter(entry, context);
    });
};
var serializeAws_json1_1ConnectionHeaderParameter = function (input, context) {
    return __assign(__assign(__assign({}, (input.IsValueSecret != null && { IsValueSecret: input.IsValueSecret })), (input.Key != null && { Key: input.Key })), (input.Value != null && { Value: input.Value }));
};
var serializeAws_json1_1ConnectionHeaderParametersList = function (input, context) {
    return input
        .filter(function (e) { return e != null; })
        .map(function (entry) {
        if (entry === null) {
            return null;
        }
        return serializeAws_json1_1ConnectionHeaderParameter(entry, context);
    });
};
var serializeAws_json1_1ConnectionHttpParameters = function (input, context) {
    return __assign(__assign(__assign({}, (input.BodyParameters != null && {
        BodyParameters: serializeAws_json1_1ConnectionBodyParametersList(input.BodyParameters, context),
    })), (input.HeaderParameters != null && {
        HeaderParameters: serializeAws_json1_1ConnectionHeaderParametersList(input.HeaderParameters, context),
    })), (input.QueryStringParameters != null && {
        QueryStringParameters: serializeAws_json1_1ConnectionQueryStringParametersList(input.QueryStringParameters, context),
    }));
};
var serializeAws_json1_1ConnectionQueryStringParameter = function (input, context) {
    return __assign(__assign(__assign({}, (input.IsValueSecret != null && { IsValueSecret: input.IsValueSecret })), (input.Key != null && { Key: input.Key })), (input.Value != null && { Value: input.Value }));
};
var serializeAws_json1_1ConnectionQueryStringParametersList = function (input, context) {
    return input
        .filter(function (e) { return e != null; })
        .map(function (entry) {
        if (entry === null) {
            return null;
        }
        return serializeAws_json1_1ConnectionQueryStringParameter(entry, context);
    });
};
var serializeAws_json1_1CreateApiDestinationRequest = function (input, context) {
    return __assign(__assign(__assign(__assign(__assign(__assign({}, (input.ConnectionArn != null && { ConnectionArn: input.ConnectionArn })), (input.Description != null && { Description: input.Description })), (input.HttpMethod != null && { HttpMethod: input.HttpMethod })), (input.InvocationEndpoint != null && { InvocationEndpoint: input.InvocationEndpoint })), (input.InvocationRateLimitPerSecond != null && {
        InvocationRateLimitPerSecond: input.InvocationRateLimitPerSecond,
    })), (input.Name != null && { Name: input.Name }));
};
var serializeAws_json1_1CreateArchiveRequest = function (input, context) {
    return __assign(__assign(__assign(__assign(__assign({}, (input.ArchiveName != null && { ArchiveName: input.ArchiveName })), (input.Description != null && { Description: input.Description })), (input.EventPattern != null && { EventPattern: input.EventPattern })), (input.EventSourceArn != null && { EventSourceArn: input.EventSourceArn })), (input.RetentionDays != null && { RetentionDays: input.RetentionDays }));
};
var serializeAws_json1_1CreateConnectionApiKeyAuthRequestParameters = function (input, context) {
    return __assign(__assign({}, (input.ApiKeyName != null && { ApiKeyName: input.ApiKeyName })), (input.ApiKeyValue != null && { ApiKeyValue: input.ApiKeyValue }));
};
var serializeAws_json1_1CreateConnectionAuthRequestParameters = function (input, context) {
    return __assign(__assign(__assign(__assign({}, (input.ApiKeyAuthParameters != null && {
        ApiKeyAuthParameters: serializeAws_json1_1CreateConnectionApiKeyAuthRequestParameters(input.ApiKeyAuthParameters, context),
    })), (input.BasicAuthParameters != null && {
        BasicAuthParameters: serializeAws_json1_1CreateConnectionBasicAuthRequestParameters(input.BasicAuthParameters, context),
    })), (input.InvocationHttpParameters != null && {
        InvocationHttpParameters: serializeAws_json1_1ConnectionHttpParameters(input.InvocationHttpParameters, context),
    })), (input.OAuthParameters != null && {
        OAuthParameters: serializeAws_json1_1CreateConnectionOAuthRequestParameters(input.OAuthParameters, context),
    }));
};
var serializeAws_json1_1CreateConnectionBasicAuthRequestParameters = function (input, context) {
    return __assign(__assign({}, (input.Password != null && { Password: input.Password })), (input.Username != null && { Username: input.Username }));
};
var serializeAws_json1_1CreateConnectionOAuthClientRequestParameters = function (input, context) {
    return __assign(__assign({}, (input.ClientID != null && { ClientID: input.ClientID })), (input.ClientSecret != null && { ClientSecret: input.ClientSecret }));
};
var serializeAws_json1_1CreateConnectionOAuthRequestParameters = function (input, context) {
    return __assign(__assign(__assign(__assign({}, (input.AuthorizationEndpoint != null && { AuthorizationEndpoint: input.AuthorizationEndpoint })), (input.ClientParameters != null && {
        ClientParameters: serializeAws_json1_1CreateConnectionOAuthClientRequestParameters(input.ClientParameters, context),
    })), (input.HttpMethod != null && { HttpMethod: input.HttpMethod })), (input.OAuthHttpParameters != null && {
        OAuthHttpParameters: serializeAws_json1_1ConnectionHttpParameters(input.OAuthHttpParameters, context),
    }));
};
var serializeAws_json1_1CreateConnectionRequest = function (input, context) {
    return __assign(__assign(__assign(__assign({}, (input.AuthParameters != null && {
        AuthParameters: serializeAws_json1_1CreateConnectionAuthRequestParameters(input.AuthParameters, context),
    })), (input.AuthorizationType != null && { AuthorizationType: input.AuthorizationType })), (input.Description != null && { Description: input.Description })), (input.Name != null && { Name: input.Name }));
};
var serializeAws_json1_1CreateEndpointRequest = function (input, context) {
    return __assign(__assign(__assign(__assign(__assign(__assign({}, (input.Description != null && { Description: input.Description })), (input.EventBuses != null && {
        EventBuses: serializeAws_json1_1EndpointEventBusList(input.EventBuses, context),
    })), (input.Name != null && { Name: input.Name })), (input.ReplicationConfig != null && {
        ReplicationConfig: serializeAws_json1_1ReplicationConfig(input.ReplicationConfig, context),
    })), (input.RoleArn != null && { RoleArn: input.RoleArn })), (input.RoutingConfig != null && {
        RoutingConfig: serializeAws_json1_1RoutingConfig(input.RoutingConfig, context),
    }));
};
var serializeAws_json1_1CreateEventBusRequest = function (input, context) {
    return __assign(__assign(__assign({}, (input.EventSourceName != null && { EventSourceName: input.EventSourceName })), (input.Name != null && { Name: input.Name })), (input.Tags != null && { Tags: serializeAws_json1_1TagList(input.Tags, context) }));
};
var serializeAws_json1_1CreatePartnerEventSourceRequest = function (input, context) {
    return __assign(__assign({}, (input.Account != null && { Account: input.Account })), (input.Name != null && { Name: input.Name }));
};
var serializeAws_json1_1DeactivateEventSourceRequest = function (input, context) {
    return __assign({}, (input.Name != null && { Name: input.Name }));
};
var serializeAws_json1_1DeadLetterConfig = function (input, context) {
    return __assign({}, (input.Arn != null && { Arn: input.Arn }));
};
var serializeAws_json1_1DeauthorizeConnectionRequest = function (input, context) {
    return __assign({}, (input.Name != null && { Name: input.Name }));
};
var serializeAws_json1_1DeleteApiDestinationRequest = function (input, context) {
    return __assign({}, (input.Name != null && { Name: input.Name }));
};
var serializeAws_json1_1DeleteArchiveRequest = function (input, context) {
    return __assign({}, (input.ArchiveName != null && { ArchiveName: input.ArchiveName }));
};
var serializeAws_json1_1DeleteConnectionRequest = function (input, context) {
    return __assign({}, (input.Name != null && { Name: input.Name }));
};
var serializeAws_json1_1DeleteEndpointRequest = function (input, context) {
    return __assign({}, (input.Name != null && { Name: input.Name }));
};
var serializeAws_json1_1DeleteEventBusRequest = function (input, context) {
    return __assign({}, (input.Name != null && { Name: input.Name }));
};
var serializeAws_json1_1DeletePartnerEventSourceRequest = function (input, context) {
    return __assign(__assign({}, (input.Account != null && { Account: input.Account })), (input.Name != null && { Name: input.Name }));
};
var serializeAws_json1_1DeleteRuleRequest = function (input, context) {
    return __assign(__assign(__assign({}, (input.EventBusName != null && { EventBusName: input.EventBusName })), (input.Force != null && { Force: input.Force })), (input.Name != null && { Name: input.Name }));
};
var serializeAws_json1_1DescribeApiDestinationRequest = function (input, context) {
    return __assign({}, (input.Name != null && { Name: input.Name }));
};
var serializeAws_json1_1DescribeArchiveRequest = function (input, context) {
    return __assign({}, (input.ArchiveName != null && { ArchiveName: input.ArchiveName }));
};
var serializeAws_json1_1DescribeConnectionRequest = function (input, context) {
    return __assign({}, (input.Name != null && { Name: input.Name }));
};
var serializeAws_json1_1DescribeEndpointRequest = function (input, context) {
    return __assign(__assign({}, (input.HomeRegion != null && { HomeRegion: input.HomeRegion })), (input.Name != null && { Name: input.Name }));
};
var serializeAws_json1_1DescribeEventBusRequest = function (input, context) {
    return __assign({}, (input.Name != null && { Name: input.Name }));
};
var serializeAws_json1_1DescribeEventSourceRequest = function (input, context) {
    return __assign({}, (input.Name != null && { Name: input.Name }));
};
var serializeAws_json1_1DescribePartnerEventSourceRequest = function (input, context) {
    return __assign({}, (input.Name != null && { Name: input.Name }));
};
var serializeAws_json1_1DescribeReplayRequest = function (input, context) {
    return __assign({}, (input.ReplayName != null && { ReplayName: input.ReplayName }));
};
var serializeAws_json1_1DescribeRuleRequest = function (input, context) {
    return __assign(__assign({}, (input.EventBusName != null && { EventBusName: input.EventBusName })), (input.Name != null && { Name: input.Name }));
};
var serializeAws_json1_1DisableRuleRequest = function (input, context) {
    return __assign(__assign({}, (input.EventBusName != null && { EventBusName: input.EventBusName })), (input.Name != null && { Name: input.Name }));
};
var serializeAws_json1_1EcsParameters = function (input, context) {
    return __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({}, (input.CapacityProviderStrategy != null && {
        CapacityProviderStrategy: serializeAws_json1_1CapacityProviderStrategy(input.CapacityProviderStrategy, context),
    })), (input.EnableECSManagedTags != null && { EnableECSManagedTags: input.EnableECSManagedTags })), (input.EnableExecuteCommand != null && { EnableExecuteCommand: input.EnableExecuteCommand })), (input.Group != null && { Group: input.Group })), (input.LaunchType != null && { LaunchType: input.LaunchType })), (input.NetworkConfiguration != null && {
        NetworkConfiguration: serializeAws_json1_1NetworkConfiguration(input.NetworkConfiguration, context),
    })), (input.PlacementConstraints != null && {
        PlacementConstraints: serializeAws_json1_1PlacementConstraints(input.PlacementConstraints, context),
    })), (input.PlacementStrategy != null && {
        PlacementStrategy: serializeAws_json1_1PlacementStrategies(input.PlacementStrategy, context),
    })), (input.PlatformVersion != null && { PlatformVersion: input.PlatformVersion })), (input.PropagateTags != null && { PropagateTags: input.PropagateTags })), (input.ReferenceId != null && { ReferenceId: input.ReferenceId })), (input.Tags != null && { Tags: serializeAws_json1_1TagList(input.Tags, context) })), (input.TaskCount != null && { TaskCount: input.TaskCount })), (input.TaskDefinitionArn != null && { TaskDefinitionArn: input.TaskDefinitionArn }));
};
var serializeAws_json1_1EnableRuleRequest = function (input, context) {
    return __assign(__assign({}, (input.EventBusName != null && { EventBusName: input.EventBusName })), (input.Name != null && { Name: input.Name }));
};
var serializeAws_json1_1EndpointEventBus = function (input, context) {
    return __assign({}, (input.EventBusArn != null && { EventBusArn: input.EventBusArn }));
};
var serializeAws_json1_1EndpointEventBusList = function (input, context) {
    return input
        .filter(function (e) { return e != null; })
        .map(function (entry) {
        if (entry === null) {
            return null;
        }
        return serializeAws_json1_1EndpointEventBus(entry, context);
    });
};
var serializeAws_json1_1EventResourceList = function (input, context) {
    return input
        .filter(function (e) { return e != null; })
        .map(function (entry) {
        if (entry === null) {
            return null;
        }
        return entry;
    });
};
var serializeAws_json1_1FailoverConfig = function (input, context) {
    return __assign(__assign({}, (input.Primary != null && { Primary: serializeAws_json1_1Primary(input.Primary, context) })), (input.Secondary != null && { Secondary: serializeAws_json1_1Secondary(input.Secondary, context) }));
};
var serializeAws_json1_1HeaderParametersMap = function (input, context) {
    return Object.entries(input).reduce(function (acc, _a) {
        var _b;
        var _c = __read(_a, 2), key = _c[0], value = _c[1];
        if (value === null) {
            return acc;
        }
        return __assign(__assign({}, acc), (_b = {}, _b[key] = value, _b));
    }, {});
};
var serializeAws_json1_1HttpParameters = function (input, context) {
    return __assign(__assign(__assign({}, (input.HeaderParameters != null && {
        HeaderParameters: serializeAws_json1_1HeaderParametersMap(input.HeaderParameters, context),
    })), (input.PathParameterValues != null && {
        PathParameterValues: serializeAws_json1_1PathParameterList(input.PathParameterValues, context),
    })), (input.QueryStringParameters != null && {
        QueryStringParameters: serializeAws_json1_1QueryStringParametersMap(input.QueryStringParameters, context),
    }));
};
var serializeAws_json1_1InputTransformer = function (input, context) {
    return __assign(__assign({}, (input.InputPathsMap != null && {
        InputPathsMap: serializeAws_json1_1TransformerPaths(input.InputPathsMap, context),
    })), (input.InputTemplate != null && { InputTemplate: input.InputTemplate }));
};
var serializeAws_json1_1KinesisParameters = function (input, context) {
    return __assign({}, (input.PartitionKeyPath != null && { PartitionKeyPath: input.PartitionKeyPath }));
};
var serializeAws_json1_1ListApiDestinationsRequest = function (input, context) {
    return __assign(__assign(__assign(__assign({}, (input.ConnectionArn != null && { ConnectionArn: input.ConnectionArn })), (input.Limit != null && { Limit: input.Limit })), (input.NamePrefix != null && { NamePrefix: input.NamePrefix })), (input.NextToken != null && { NextToken: input.NextToken }));
};
var serializeAws_json1_1ListArchivesRequest = function (input, context) {
    return __assign(__assign(__assign(__assign(__assign({}, (input.EventSourceArn != null && { EventSourceArn: input.EventSourceArn })), (input.Limit != null && { Limit: input.Limit })), (input.NamePrefix != null && { NamePrefix: input.NamePrefix })), (input.NextToken != null && { NextToken: input.NextToken })), (input.State != null && { State: input.State }));
};
var serializeAws_json1_1ListConnectionsRequest = function (input, context) {
    return __assign(__assign(__assign(__assign({}, (input.ConnectionState != null && { ConnectionState: input.ConnectionState })), (input.Limit != null && { Limit: input.Limit })), (input.NamePrefix != null && { NamePrefix: input.NamePrefix })), (input.NextToken != null && { NextToken: input.NextToken }));
};
var serializeAws_json1_1ListEndpointsRequest = function (input, context) {
    return __assign(__assign(__assign(__assign({}, (input.HomeRegion != null && { HomeRegion: input.HomeRegion })), (input.MaxResults != null && { MaxResults: input.MaxResults })), (input.NamePrefix != null && { NamePrefix: input.NamePrefix })), (input.NextToken != null && { NextToken: input.NextToken }));
};
var serializeAws_json1_1ListEventBusesRequest = function (input, context) {
    return __assign(__assign(__assign({}, (input.Limit != null && { Limit: input.Limit })), (input.NamePrefix != null && { NamePrefix: input.NamePrefix })), (input.NextToken != null && { NextToken: input.NextToken }));
};
var serializeAws_json1_1ListEventSourcesRequest = function (input, context) {
    return __assign(__assign(__assign({}, (input.Limit != null && { Limit: input.Limit })), (input.NamePrefix != null && { NamePrefix: input.NamePrefix })), (input.NextToken != null && { NextToken: input.NextToken }));
};
var serializeAws_json1_1ListPartnerEventSourceAccountsRequest = function (input, context) {
    return __assign(__assign(__assign({}, (input.EventSourceName != null && { EventSourceName: input.EventSourceName })), (input.Limit != null && { Limit: input.Limit })), (input.NextToken != null && { NextToken: input.NextToken }));
};
var serializeAws_json1_1ListPartnerEventSourcesRequest = function (input, context) {
    return __assign(__assign(__assign({}, (input.Limit != null && { Limit: input.Limit })), (input.NamePrefix != null && { NamePrefix: input.NamePrefix })), (input.NextToken != null && { NextToken: input.NextToken }));
};
var serializeAws_json1_1ListReplaysRequest = function (input, context) {
    return __assign(__assign(__assign(__assign(__assign({}, (input.EventSourceArn != null && { EventSourceArn: input.EventSourceArn })), (input.Limit != null && { Limit: input.Limit })), (input.NamePrefix != null && { NamePrefix: input.NamePrefix })), (input.NextToken != null && { NextToken: input.NextToken })), (input.State != null && { State: input.State }));
};
var serializeAws_json1_1ListRuleNamesByTargetRequest = function (input, context) {
    return __assign(__assign(__assign(__assign({}, (input.EventBusName != null && { EventBusName: input.EventBusName })), (input.Limit != null && { Limit: input.Limit })), (input.NextToken != null && { NextToken: input.NextToken })), (input.TargetArn != null && { TargetArn: input.TargetArn }));
};
var serializeAws_json1_1ListRulesRequest = function (input, context) {
    return __assign(__assign(__assign(__assign({}, (input.EventBusName != null && { EventBusName: input.EventBusName })), (input.Limit != null && { Limit: input.Limit })), (input.NamePrefix != null && { NamePrefix: input.NamePrefix })), (input.NextToken != null && { NextToken: input.NextToken }));
};
var serializeAws_json1_1ListTagsForResourceRequest = function (input, context) {
    return __assign({}, (input.ResourceARN != null && { ResourceARN: input.ResourceARN }));
};
var serializeAws_json1_1ListTargetsByRuleRequest = function (input, context) {
    return __assign(__assign(__assign(__assign({}, (input.EventBusName != null && { EventBusName: input.EventBusName })), (input.Limit != null && { Limit: input.Limit })), (input.NextToken != null && { NextToken: input.NextToken })), (input.Rule != null && { Rule: input.Rule }));
};
var serializeAws_json1_1NetworkConfiguration = function (input, context) {
    return __assign({}, (input.awsvpcConfiguration != null && {
        awsvpcConfiguration: serializeAws_json1_1AwsVpcConfiguration(input.awsvpcConfiguration, context),
    }));
};
var serializeAws_json1_1PathParameterList = function (input, context) {
    return input
        .filter(function (e) { return e != null; })
        .map(function (entry) {
        if (entry === null) {
            return null;
        }
        return entry;
    });
};
var serializeAws_json1_1PlacementConstraint = function (input, context) {
    return __assign(__assign({}, (input.expression != null && { expression: input.expression })), (input.type != null && { type: input.type }));
};
var serializeAws_json1_1PlacementConstraints = function (input, context) {
    return input
        .filter(function (e) { return e != null; })
        .map(function (entry) {
        if (entry === null) {
            return null;
        }
        return serializeAws_json1_1PlacementConstraint(entry, context);
    });
};
var serializeAws_json1_1PlacementStrategies = function (input, context) {
    return input
        .filter(function (e) { return e != null; })
        .map(function (entry) {
        if (entry === null) {
            return null;
        }
        return serializeAws_json1_1PlacementStrategy(entry, context);
    });
};
var serializeAws_json1_1PlacementStrategy = function (input, context) {
    return __assign(__assign({}, (input.field != null && { field: input.field })), (input.type != null && { type: input.type }));
};
var serializeAws_json1_1Primary = function (input, context) {
    return __assign({}, (input.HealthCheck != null && { HealthCheck: input.HealthCheck }));
};
var serializeAws_json1_1PutEventsRequest = function (input, context) {
    return __assign(__assign({}, (input.EndpointId != null && { EndpointId: input.EndpointId })), (input.Entries != null && { Entries: serializeAws_json1_1PutEventsRequestEntryList(input.Entries, context) }));
};
var serializeAws_json1_1PutEventsRequestEntry = function (input, context) {
    return __assign(__assign(__assign(__assign(__assign(__assign(__assign({}, (input.Detail != null && { Detail: input.Detail })), (input.DetailType != null && { DetailType: input.DetailType })), (input.EventBusName != null && { EventBusName: input.EventBusName })), (input.Resources != null && { Resources: serializeAws_json1_1EventResourceList(input.Resources, context) })), (input.Source != null && { Source: input.Source })), (input.Time != null && { Time: Math.round(input.Time.getTime() / 1000) })), (input.TraceHeader != null && { TraceHeader: input.TraceHeader }));
};
var serializeAws_json1_1PutEventsRequestEntryList = function (input, context) {
    return input
        .filter(function (e) { return e != null; })
        .map(function (entry) {
        if (entry === null) {
            return null;
        }
        return serializeAws_json1_1PutEventsRequestEntry(entry, context);
    });
};
var serializeAws_json1_1PutPartnerEventsRequest = function (input, context) {
    return __assign({}, (input.Entries != null && {
        Entries: serializeAws_json1_1PutPartnerEventsRequestEntryList(input.Entries, context),
    }));
};
var serializeAws_json1_1PutPartnerEventsRequestEntry = function (input, context) {
    return __assign(__assign(__assign(__assign(__assign({}, (input.Detail != null && { Detail: input.Detail })), (input.DetailType != null && { DetailType: input.DetailType })), (input.Resources != null && { Resources: serializeAws_json1_1EventResourceList(input.Resources, context) })), (input.Source != null && { Source: input.Source })), (input.Time != null && { Time: Math.round(input.Time.getTime() / 1000) }));
};
var serializeAws_json1_1PutPartnerEventsRequestEntryList = function (input, context) {
    return input
        .filter(function (e) { return e != null; })
        .map(function (entry) {
        if (entry === null) {
            return null;
        }
        return serializeAws_json1_1PutPartnerEventsRequestEntry(entry, context);
    });
};
var serializeAws_json1_1PutPermissionRequest = function (input, context) {
    return __assign(__assign(__assign(__assign(__assign(__assign({}, (input.Action != null && { Action: input.Action })), (input.Condition != null && { Condition: serializeAws_json1_1Condition(input.Condition, context) })), (input.EventBusName != null && { EventBusName: input.EventBusName })), (input.Policy != null && { Policy: input.Policy })), (input.Principal != null && { Principal: input.Principal })), (input.StatementId != null && { StatementId: input.StatementId }));
};
var serializeAws_json1_1PutRuleRequest = function (input, context) {
    return __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({}, (input.Description != null && { Description: input.Description })), (input.EventBusName != null && { EventBusName: input.EventBusName })), (input.EventPattern != null && { EventPattern: input.EventPattern })), (input.Name != null && { Name: input.Name })), (input.RoleArn != null && { RoleArn: input.RoleArn })), (input.ScheduleExpression != null && { ScheduleExpression: input.ScheduleExpression })), (input.State != null && { State: input.State })), (input.Tags != null && { Tags: serializeAws_json1_1TagList(input.Tags, context) }));
};
var serializeAws_json1_1PutTargetsRequest = function (input, context) {
    return __assign(__assign(__assign({}, (input.EventBusName != null && { EventBusName: input.EventBusName })), (input.Rule != null && { Rule: input.Rule })), (input.Targets != null && { Targets: serializeAws_json1_1TargetList(input.Targets, context) }));
};
var serializeAws_json1_1QueryStringParametersMap = function (input, context) {
    return Object.entries(input).reduce(function (acc, _a) {
        var _b;
        var _c = __read(_a, 2), key = _c[0], value = _c[1];
        if (value === null) {
            return acc;
        }
        return __assign(__assign({}, acc), (_b = {}, _b[key] = value, _b));
    }, {});
};
var serializeAws_json1_1RedshiftDataParameters = function (input, context) {
    return __assign(__assign(__assign(__assign(__assign(__assign({}, (input.Database != null && { Database: input.Database })), (input.DbUser != null && { DbUser: input.DbUser })), (input.SecretManagerArn != null && { SecretManagerArn: input.SecretManagerArn })), (input.Sql != null && { Sql: input.Sql })), (input.StatementName != null && { StatementName: input.StatementName })), (input.WithEvent != null && { WithEvent: input.WithEvent }));
};
var serializeAws_json1_1RemovePermissionRequest = function (input, context) {
    return __assign(__assign(__assign({}, (input.EventBusName != null && { EventBusName: input.EventBusName })), (input.RemoveAllPermissions != null && { RemoveAllPermissions: input.RemoveAllPermissions })), (input.StatementId != null && { StatementId: input.StatementId }));
};
var serializeAws_json1_1RemoveTargetsRequest = function (input, context) {
    return __assign(__assign(__assign(__assign({}, (input.EventBusName != null && { EventBusName: input.EventBusName })), (input.Force != null && { Force: input.Force })), (input.Ids != null && { Ids: serializeAws_json1_1TargetIdList(input.Ids, context) })), (input.Rule != null && { Rule: input.Rule }));
};
var serializeAws_json1_1ReplayDestination = function (input, context) {
    return __assign(__assign({}, (input.Arn != null && { Arn: input.Arn })), (input.FilterArns != null && {
        FilterArns: serializeAws_json1_1ReplayDestinationFilters(input.FilterArns, context),
    }));
};
var serializeAws_json1_1ReplayDestinationFilters = function (input, context) {
    return input
        .filter(function (e) { return e != null; })
        .map(function (entry) {
        if (entry === null) {
            return null;
        }
        return entry;
    });
};
var serializeAws_json1_1ReplicationConfig = function (input, context) {
    return __assign({}, (input.State != null && { State: input.State }));
};
var serializeAws_json1_1RetryPolicy = function (input, context) {
    return __assign(__assign({}, (input.MaximumEventAgeInSeconds != null && { MaximumEventAgeInSeconds: input.MaximumEventAgeInSeconds })), (input.MaximumRetryAttempts != null && { MaximumRetryAttempts: input.MaximumRetryAttempts }));
};
var serializeAws_json1_1RoutingConfig = function (input, context) {
    return __assign({}, (input.FailoverConfig != null && {
        FailoverConfig: serializeAws_json1_1FailoverConfig(input.FailoverConfig, context),
    }));
};
var serializeAws_json1_1RunCommandParameters = function (input, context) {
    return __assign({}, (input.RunCommandTargets != null && {
        RunCommandTargets: serializeAws_json1_1RunCommandTargets(input.RunCommandTargets, context),
    }));
};
var serializeAws_json1_1RunCommandTarget = function (input, context) {
    return __assign(__assign({}, (input.Key != null && { Key: input.Key })), (input.Values != null && { Values: serializeAws_json1_1RunCommandTargetValues(input.Values, context) }));
};
var serializeAws_json1_1RunCommandTargets = function (input, context) {
    return input
        .filter(function (e) { return e != null; })
        .map(function (entry) {
        if (entry === null) {
            return null;
        }
        return serializeAws_json1_1RunCommandTarget(entry, context);
    });
};
var serializeAws_json1_1RunCommandTargetValues = function (input, context) {
    return input
        .filter(function (e) { return e != null; })
        .map(function (entry) {
        if (entry === null) {
            return null;
        }
        return entry;
    });
};
var serializeAws_json1_1SageMakerPipelineParameter = function (input, context) {
    return __assign(__assign({}, (input.Name != null && { Name: input.Name })), (input.Value != null && { Value: input.Value }));
};
var serializeAws_json1_1SageMakerPipelineParameterList = function (input, context) {
    return input
        .filter(function (e) { return e != null; })
        .map(function (entry) {
        if (entry === null) {
            return null;
        }
        return serializeAws_json1_1SageMakerPipelineParameter(entry, context);
    });
};
var serializeAws_json1_1SageMakerPipelineParameters = function (input, context) {
    return __assign({}, (input.PipelineParameterList != null && {
        PipelineParameterList: serializeAws_json1_1SageMakerPipelineParameterList(input.PipelineParameterList, context),
    }));
};
var serializeAws_json1_1Secondary = function (input, context) {
    return __assign({}, (input.Route != null && { Route: input.Route }));
};
var serializeAws_json1_1SqsParameters = function (input, context) {
    return __assign({}, (input.MessageGroupId != null && { MessageGroupId: input.MessageGroupId }));
};
var serializeAws_json1_1StartReplayRequest = function (input, context) {
    return __assign(__assign(__assign(__assign(__assign(__assign({}, (input.Description != null && { Description: input.Description })), (input.Destination != null && {
        Destination: serializeAws_json1_1ReplayDestination(input.Destination, context),
    })), (input.EventEndTime != null && { EventEndTime: Math.round(input.EventEndTime.getTime() / 1000) })), (input.EventSourceArn != null && { EventSourceArn: input.EventSourceArn })), (input.EventStartTime != null && { EventStartTime: Math.round(input.EventStartTime.getTime() / 1000) })), (input.ReplayName != null && { ReplayName: input.ReplayName }));
};
var serializeAws_json1_1StringList = function (input, context) {
    return input
        .filter(function (e) { return e != null; })
        .map(function (entry) {
        if (entry === null) {
            return null;
        }
        return entry;
    });
};
var serializeAws_json1_1Tag = function (input, context) {
    return __assign(__assign({}, (input.Key != null && { Key: input.Key })), (input.Value != null && { Value: input.Value }));
};
var serializeAws_json1_1TagKeyList = function (input, context) {
    return input
        .filter(function (e) { return e != null; })
        .map(function (entry) {
        if (entry === null) {
            return null;
        }
        return entry;
    });
};
var serializeAws_json1_1TagList = function (input, context) {
    return input
        .filter(function (e) { return e != null; })
        .map(function (entry) {
        if (entry === null) {
            return null;
        }
        return serializeAws_json1_1Tag(entry, context);
    });
};
var serializeAws_json1_1TagResourceRequest = function (input, context) {
    return __assign(__assign({}, (input.ResourceARN != null && { ResourceARN: input.ResourceARN })), (input.Tags != null && { Tags: serializeAws_json1_1TagList(input.Tags, context) }));
};
var serializeAws_json1_1Target = function (input, context) {
    return __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({}, (input.Arn != null && { Arn: input.Arn })), (input.BatchParameters != null && {
        BatchParameters: serializeAws_json1_1BatchParameters(input.BatchParameters, context),
    })), (input.DeadLetterConfig != null && {
        DeadLetterConfig: serializeAws_json1_1DeadLetterConfig(input.DeadLetterConfig, context),
    })), (input.EcsParameters != null && {
        EcsParameters: serializeAws_json1_1EcsParameters(input.EcsParameters, context),
    })), (input.HttpParameters != null && {
        HttpParameters: serializeAws_json1_1HttpParameters(input.HttpParameters, context),
    })), (input.Id != null && { Id: input.Id })), (input.Input != null && { Input: input.Input })), (input.InputPath != null && { InputPath: input.InputPath })), (input.InputTransformer != null && {
        InputTransformer: serializeAws_json1_1InputTransformer(input.InputTransformer, context),
    })), (input.KinesisParameters != null && {
        KinesisParameters: serializeAws_json1_1KinesisParameters(input.KinesisParameters, context),
    })), (input.RedshiftDataParameters != null && {
        RedshiftDataParameters: serializeAws_json1_1RedshiftDataParameters(input.RedshiftDataParameters, context),
    })), (input.RetryPolicy != null && { RetryPolicy: serializeAws_json1_1RetryPolicy(input.RetryPolicy, context) })), (input.RoleArn != null && { RoleArn: input.RoleArn })), (input.RunCommandParameters != null && {
        RunCommandParameters: serializeAws_json1_1RunCommandParameters(input.RunCommandParameters, context),
    })), (input.SageMakerPipelineParameters != null && {
        SageMakerPipelineParameters: serializeAws_json1_1SageMakerPipelineParameters(input.SageMakerPipelineParameters, context),
    })), (input.SqsParameters != null && {
        SqsParameters: serializeAws_json1_1SqsParameters(input.SqsParameters, context),
    }));
};
var serializeAws_json1_1TargetIdList = function (input, context) {
    return input
        .filter(function (e) { return e != null; })
        .map(function (entry) {
        if (entry === null) {
            return null;
        }
        return entry;
    });
};
var serializeAws_json1_1TargetList = function (input, context) {
    return input
        .filter(function (e) { return e != null; })
        .map(function (entry) {
        if (entry === null) {
            return null;
        }
        return serializeAws_json1_1Target(entry, context);
    });
};
var serializeAws_json1_1TestEventPatternRequest = function (input, context) {
    return __assign(__assign({}, (input.Event != null && { Event: input.Event })), (input.EventPattern != null && { EventPattern: input.EventPattern }));
};
var serializeAws_json1_1TransformerPaths = function (input, context) {
    return Object.entries(input).reduce(function (acc, _a) {
        var _b;
        var _c = __read(_a, 2), key = _c[0], value = _c[1];
        if (value === null) {
            return acc;
        }
        return __assign(__assign({}, acc), (_b = {}, _b[key] = value, _b));
    }, {});
};
var serializeAws_json1_1UntagResourceRequest = function (input, context) {
    return __assign(__assign({}, (input.ResourceARN != null && { ResourceARN: input.ResourceARN })), (input.TagKeys != null && { TagKeys: serializeAws_json1_1TagKeyList(input.TagKeys, context) }));
};
var serializeAws_json1_1UpdateApiDestinationRequest = function (input, context) {
    return __assign(__assign(__assign(__assign(__assign(__assign({}, (input.ConnectionArn != null && { ConnectionArn: input.ConnectionArn })), (input.Description != null && { Description: input.Description })), (input.HttpMethod != null && { HttpMethod: input.HttpMethod })), (input.InvocationEndpoint != null && { InvocationEndpoint: input.InvocationEndpoint })), (input.InvocationRateLimitPerSecond != null && {
        InvocationRateLimitPerSecond: input.InvocationRateLimitPerSecond,
    })), (input.Name != null && { Name: input.Name }));
};
var serializeAws_json1_1UpdateArchiveRequest = function (input, context) {
    return __assign(__assign(__assign(__assign({}, (input.ArchiveName != null && { ArchiveName: input.ArchiveName })), (input.Description != null && { Description: input.Description })), (input.EventPattern != null && { EventPattern: input.EventPattern })), (input.RetentionDays != null && { RetentionDays: input.RetentionDays }));
};
var serializeAws_json1_1UpdateConnectionApiKeyAuthRequestParameters = function (input, context) {
    return __assign(__assign({}, (input.ApiKeyName != null && { ApiKeyName: input.ApiKeyName })), (input.ApiKeyValue != null && { ApiKeyValue: input.ApiKeyValue }));
};
var serializeAws_json1_1UpdateConnectionAuthRequestParameters = function (input, context) {
    return __assign(__assign(__assign(__assign({}, (input.ApiKeyAuthParameters != null && {
        ApiKeyAuthParameters: serializeAws_json1_1UpdateConnectionApiKeyAuthRequestParameters(input.ApiKeyAuthParameters, context),
    })), (input.BasicAuthParameters != null && {
        BasicAuthParameters: serializeAws_json1_1UpdateConnectionBasicAuthRequestParameters(input.BasicAuthParameters, context),
    })), (input.InvocationHttpParameters != null && {
        InvocationHttpParameters: serializeAws_json1_1ConnectionHttpParameters(input.InvocationHttpParameters, context),
    })), (input.OAuthParameters != null && {
        OAuthParameters: serializeAws_json1_1UpdateConnectionOAuthRequestParameters(input.OAuthParameters, context),
    }));
};
var serializeAws_json1_1UpdateConnectionBasicAuthRequestParameters = function (input, context) {
    return __assign(__assign({}, (input.Password != null && { Password: input.Password })), (input.Username != null && { Username: input.Username }));
};
var serializeAws_json1_1UpdateConnectionOAuthClientRequestParameters = function (input, context) {
    return __assign(__assign({}, (input.ClientID != null && { ClientID: input.ClientID })), (input.ClientSecret != null && { ClientSecret: input.ClientSecret }));
};
var serializeAws_json1_1UpdateConnectionOAuthRequestParameters = function (input, context) {
    return __assign(__assign(__assign(__assign({}, (input.AuthorizationEndpoint != null && { AuthorizationEndpoint: input.AuthorizationEndpoint })), (input.ClientParameters != null && {
        ClientParameters: serializeAws_json1_1UpdateConnectionOAuthClientRequestParameters(input.ClientParameters, context),
    })), (input.HttpMethod != null && { HttpMethod: input.HttpMethod })), (input.OAuthHttpParameters != null && {
        OAuthHttpParameters: serializeAws_json1_1ConnectionHttpParameters(input.OAuthHttpParameters, context),
    }));
};
var serializeAws_json1_1UpdateConnectionRequest = function (input, context) {
    return __assign(__assign(__assign(__assign({}, (input.AuthParameters != null && {
        AuthParameters: serializeAws_json1_1UpdateConnectionAuthRequestParameters(input.AuthParameters, context),
    })), (input.AuthorizationType != null && { AuthorizationType: input.AuthorizationType })), (input.Description != null && { Description: input.Description })), (input.Name != null && { Name: input.Name }));
};
var serializeAws_json1_1UpdateEndpointRequest = function (input, context) {
    return __assign(__assign(__assign(__assign(__assign(__assign({}, (input.Description != null && { Description: input.Description })), (input.EventBuses != null && {
        EventBuses: serializeAws_json1_1EndpointEventBusList(input.EventBuses, context),
    })), (input.Name != null && { Name: input.Name })), (input.ReplicationConfig != null && {
        ReplicationConfig: serializeAws_json1_1ReplicationConfig(input.ReplicationConfig, context),
    })), (input.RoleArn != null && { RoleArn: input.RoleArn })), (input.RoutingConfig != null && {
        RoutingConfig: serializeAws_json1_1RoutingConfig(input.RoutingConfig, context),
    }));
};
var deserializeAws_json1_1ApiDestination = function (output, context) {
    return {
        ApiDestinationArn: __expectString(output.ApiDestinationArn),
        ApiDestinationState: __expectString(output.ApiDestinationState),
        ConnectionArn: __expectString(output.ConnectionArn),
        CreationTime: output.CreationTime != null
            ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
            : undefined,
        HttpMethod: __expectString(output.HttpMethod),
        InvocationEndpoint: __expectString(output.InvocationEndpoint),
        InvocationRateLimitPerSecond: __expectInt32(output.InvocationRateLimitPerSecond),
        LastModifiedTime: output.LastModifiedTime != null
            ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastModifiedTime)))
            : undefined,
        Name: __expectString(output.Name),
    };
};
var deserializeAws_json1_1ApiDestinationResponseList = function (output, context) {
    var retVal = (output || [])
        .filter(function (e) { return e != null; })
        .map(function (entry) {
        if (entry === null) {
            return null;
        }
        return deserializeAws_json1_1ApiDestination(entry, context);
    });
    return retVal;
};
var deserializeAws_json1_1Archive = function (output, context) {
    return {
        ArchiveName: __expectString(output.ArchiveName),
        CreationTime: output.CreationTime != null
            ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
            : undefined,
        EventCount: __expectLong(output.EventCount),
        EventSourceArn: __expectString(output.EventSourceArn),
        RetentionDays: __expectInt32(output.RetentionDays),
        SizeBytes: __expectLong(output.SizeBytes),
        State: __expectString(output.State),
        StateReason: __expectString(output.StateReason),
    };
};
var deserializeAws_json1_1ArchiveResponseList = function (output, context) {
    var retVal = (output || [])
        .filter(function (e) { return e != null; })
        .map(function (entry) {
        if (entry === null) {
            return null;
        }
        return deserializeAws_json1_1Archive(entry, context);
    });
    return retVal;
};
var deserializeAws_json1_1AwsVpcConfiguration = function (output, context) {
    return {
        AssignPublicIp: __expectString(output.AssignPublicIp),
        SecurityGroups: output.SecurityGroups != null ? deserializeAws_json1_1StringList(output.SecurityGroups, context) : undefined,
        Subnets: output.Subnets != null ? deserializeAws_json1_1StringList(output.Subnets, context) : undefined,
    };
};
var deserializeAws_json1_1BatchArrayProperties = function (output, context) {
    return {
        Size: __expectInt32(output.Size),
    };
};
var deserializeAws_json1_1BatchParameters = function (output, context) {
    return {
        ArrayProperties: output.ArrayProperties != null
            ? deserializeAws_json1_1BatchArrayProperties(output.ArrayProperties, context)
            : undefined,
        JobDefinition: __expectString(output.JobDefinition),
        JobName: __expectString(output.JobName),
        RetryStrategy: output.RetryStrategy != null
            ? deserializeAws_json1_1BatchRetryStrategy(output.RetryStrategy, context)
            : undefined,
    };
};
var deserializeAws_json1_1BatchRetryStrategy = function (output, context) {
    return {
        Attempts: __expectInt32(output.Attempts),
    };
};
var deserializeAws_json1_1CancelReplayResponse = function (output, context) {
    return {
        ReplayArn: __expectString(output.ReplayArn),
        State: __expectString(output.State),
        StateReason: __expectString(output.StateReason),
    };
};
var deserializeAws_json1_1CapacityProviderStrategy = function (output, context) {
    var retVal = (output || [])
        .filter(function (e) { return e != null; })
        .map(function (entry) {
        if (entry === null) {
            return null;
        }
        return deserializeAws_json1_1CapacityProviderStrategyItem(entry, context);
    });
    return retVal;
};
var deserializeAws_json1_1CapacityProviderStrategyItem = function (output, context) {
    return {
        base: __expectInt32(output.base),
        capacityProvider: __expectString(output.capacityProvider),
        weight: __expectInt32(output.weight),
    };
};
var deserializeAws_json1_1ConcurrentModificationException = function (output, context) {
    return {
        message: __expectString(output.message),
    };
};
var deserializeAws_json1_1Connection = function (output, context) {
    return {
        AuthorizationType: __expectString(output.AuthorizationType),
        ConnectionArn: __expectString(output.ConnectionArn),
        ConnectionState: __expectString(output.ConnectionState),
        CreationTime: output.CreationTime != null
            ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
            : undefined,
        LastAuthorizedTime: output.LastAuthorizedTime != null
            ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastAuthorizedTime)))
            : undefined,
        LastModifiedTime: output.LastModifiedTime != null
            ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastModifiedTime)))
            : undefined,
        Name: __expectString(output.Name),
        StateReason: __expectString(output.StateReason),
    };
};
var deserializeAws_json1_1ConnectionApiKeyAuthResponseParameters = function (output, context) {
    return {
        ApiKeyName: __expectString(output.ApiKeyName),
    };
};
var deserializeAws_json1_1ConnectionAuthResponseParameters = function (output, context) {
    return {
        ApiKeyAuthParameters: output.ApiKeyAuthParameters != null
            ? deserializeAws_json1_1ConnectionApiKeyAuthResponseParameters(output.ApiKeyAuthParameters, context)
            : undefined,
        BasicAuthParameters: output.BasicAuthParameters != null
            ? deserializeAws_json1_1ConnectionBasicAuthResponseParameters(output.BasicAuthParameters, context)
            : undefined,
        InvocationHttpParameters: output.InvocationHttpParameters != null
            ? deserializeAws_json1_1ConnectionHttpParameters(output.InvocationHttpParameters, context)
            : undefined,
        OAuthParameters: output.OAuthParameters != null
            ? deserializeAws_json1_1ConnectionOAuthResponseParameters(output.OAuthParameters, context)
            : undefined,
    };
};
var deserializeAws_json1_1ConnectionBasicAuthResponseParameters = function (output, context) {
    return {
        Username: __expectString(output.Username),
    };
};
var deserializeAws_json1_1ConnectionBodyParameter = function (output, context) {
    return {
        IsValueSecret: __expectBoolean(output.IsValueSecret),
        Key: __expectString(output.Key),
        Value: __expectString(output.Value),
    };
};
var deserializeAws_json1_1ConnectionBodyParametersList = function (output, context) {
    var retVal = (output || [])
        .filter(function (e) { return e != null; })
        .map(function (entry) {
        if (entry === null) {
            return null;
        }
        return deserializeAws_json1_1ConnectionBodyParameter(entry, context);
    });
    return retVal;
};
var deserializeAws_json1_1ConnectionHeaderParameter = function (output, context) {
    return {
        IsValueSecret: __expectBoolean(output.IsValueSecret),
        Key: __expectString(output.Key),
        Value: __expectString(output.Value),
    };
};
var deserializeAws_json1_1ConnectionHeaderParametersList = function (output, context) {
    var retVal = (output || [])
        .filter(function (e) { return e != null; })
        .map(function (entry) {
        if (entry === null) {
            return null;
        }
        return deserializeAws_json1_1ConnectionHeaderParameter(entry, context);
    });
    return retVal;
};
var deserializeAws_json1_1ConnectionHttpParameters = function (output, context) {
    return {
        BodyParameters: output.BodyParameters != null
            ? deserializeAws_json1_1ConnectionBodyParametersList(output.BodyParameters, context)
            : undefined,
        HeaderParameters: output.HeaderParameters != null
            ? deserializeAws_json1_1ConnectionHeaderParametersList(output.HeaderParameters, context)
            : undefined,
        QueryStringParameters: output.QueryStringParameters != null
            ? deserializeAws_json1_1ConnectionQueryStringParametersList(output.QueryStringParameters, context)
            : undefined,
    };
};
var deserializeAws_json1_1ConnectionOAuthClientResponseParameters = function (output, context) {
    return {
        ClientID: __expectString(output.ClientID),
    };
};
var deserializeAws_json1_1ConnectionOAuthResponseParameters = function (output, context) {
    return {
        AuthorizationEndpoint: __expectString(output.AuthorizationEndpoint),
        ClientParameters: output.ClientParameters != null
            ? deserializeAws_json1_1ConnectionOAuthClientResponseParameters(output.ClientParameters, context)
            : undefined,
        HttpMethod: __expectString(output.HttpMethod),
        OAuthHttpParameters: output.OAuthHttpParameters != null
            ? deserializeAws_json1_1ConnectionHttpParameters(output.OAuthHttpParameters, context)
            : undefined,
    };
};
var deserializeAws_json1_1ConnectionQueryStringParameter = function (output, context) {
    return {
        IsValueSecret: __expectBoolean(output.IsValueSecret),
        Key: __expectString(output.Key),
        Value: __expectString(output.Value),
    };
};
var deserializeAws_json1_1ConnectionQueryStringParametersList = function (output, context) {
    var retVal = (output || [])
        .filter(function (e) { return e != null; })
        .map(function (entry) {
        if (entry === null) {
            return null;
        }
        return deserializeAws_json1_1ConnectionQueryStringParameter(entry, context);
    });
    return retVal;
};
var deserializeAws_json1_1ConnectionResponseList = function (output, context) {
    var retVal = (output || [])
        .filter(function (e) { return e != null; })
        .map(function (entry) {
        if (entry === null) {
            return null;
        }
        return deserializeAws_json1_1Connection(entry, context);
    });
    return retVal;
};
var deserializeAws_json1_1CreateApiDestinationResponse = function (output, context) {
    return {
        ApiDestinationArn: __expectString(output.ApiDestinationArn),
        ApiDestinationState: __expectString(output.ApiDestinationState),
        CreationTime: output.CreationTime != null
            ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
            : undefined,
        LastModifiedTime: output.LastModifiedTime != null
            ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastModifiedTime)))
            : undefined,
    };
};
var deserializeAws_json1_1CreateArchiveResponse = function (output, context) {
    return {
        ArchiveArn: __expectString(output.ArchiveArn),
        CreationTime: output.CreationTime != null
            ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
            : undefined,
        State: __expectString(output.State),
        StateReason: __expectString(output.StateReason),
    };
};
var deserializeAws_json1_1CreateConnectionResponse = function (output, context) {
    return {
        ConnectionArn: __expectString(output.ConnectionArn),
        ConnectionState: __expectString(output.ConnectionState),
        CreationTime: output.CreationTime != null
            ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
            : undefined,
        LastModifiedTime: output.LastModifiedTime != null
            ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastModifiedTime)))
            : undefined,
    };
};
var deserializeAws_json1_1CreateEndpointResponse = function (output, context) {
    return {
        Arn: __expectString(output.Arn),
        EventBuses: output.EventBuses != null ? deserializeAws_json1_1EndpointEventBusList(output.EventBuses, context) : undefined,
        Name: __expectString(output.Name),
        ReplicationConfig: output.ReplicationConfig != null
            ? deserializeAws_json1_1ReplicationConfig(output.ReplicationConfig, context)
            : undefined,
        RoleArn: __expectString(output.RoleArn),
        RoutingConfig: output.RoutingConfig != null ? deserializeAws_json1_1RoutingConfig(output.RoutingConfig, context) : undefined,
        State: __expectString(output.State),
    };
};
var deserializeAws_json1_1CreateEventBusResponse = function (output, context) {
    return {
        EventBusArn: __expectString(output.EventBusArn),
    };
};
var deserializeAws_json1_1CreatePartnerEventSourceResponse = function (output, context) {
    return {
        EventSourceArn: __expectString(output.EventSourceArn),
    };
};
var deserializeAws_json1_1DeadLetterConfig = function (output, context) {
    return {
        Arn: __expectString(output.Arn),
    };
};
var deserializeAws_json1_1DeauthorizeConnectionResponse = function (output, context) {
    return {
        ConnectionArn: __expectString(output.ConnectionArn),
        ConnectionState: __expectString(output.ConnectionState),
        CreationTime: output.CreationTime != null
            ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
            : undefined,
        LastAuthorizedTime: output.LastAuthorizedTime != null
            ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastAuthorizedTime)))
            : undefined,
        LastModifiedTime: output.LastModifiedTime != null
            ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastModifiedTime)))
            : undefined,
    };
};
var deserializeAws_json1_1DeleteApiDestinationResponse = function (output, context) {
    return {};
};
var deserializeAws_json1_1DeleteArchiveResponse = function (output, context) {
    return {};
};
var deserializeAws_json1_1DeleteConnectionResponse = function (output, context) {
    return {
        ConnectionArn: __expectString(output.ConnectionArn),
        ConnectionState: __expectString(output.ConnectionState),
        CreationTime: output.CreationTime != null
            ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
            : undefined,
        LastAuthorizedTime: output.LastAuthorizedTime != null
            ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastAuthorizedTime)))
            : undefined,
        LastModifiedTime: output.LastModifiedTime != null
            ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastModifiedTime)))
            : undefined,
    };
};
var deserializeAws_json1_1DeleteEndpointResponse = function (output, context) {
    return {};
};
var deserializeAws_json1_1DescribeApiDestinationResponse = function (output, context) {
    return {
        ApiDestinationArn: __expectString(output.ApiDestinationArn),
        ApiDestinationState: __expectString(output.ApiDestinationState),
        ConnectionArn: __expectString(output.ConnectionArn),
        CreationTime: output.CreationTime != null
            ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
            : undefined,
        Description: __expectString(output.Description),
        HttpMethod: __expectString(output.HttpMethod),
        InvocationEndpoint: __expectString(output.InvocationEndpoint),
        InvocationRateLimitPerSecond: __expectInt32(output.InvocationRateLimitPerSecond),
        LastModifiedTime: output.LastModifiedTime != null
            ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastModifiedTime)))
            : undefined,
        Name: __expectString(output.Name),
    };
};
var deserializeAws_json1_1DescribeArchiveResponse = function (output, context) {
    return {
        ArchiveArn: __expectString(output.ArchiveArn),
        ArchiveName: __expectString(output.ArchiveName),
        CreationTime: output.CreationTime != null
            ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
            : undefined,
        Description: __expectString(output.Description),
        EventCount: __expectLong(output.EventCount),
        EventPattern: __expectString(output.EventPattern),
        EventSourceArn: __expectString(output.EventSourceArn),
        RetentionDays: __expectInt32(output.RetentionDays),
        SizeBytes: __expectLong(output.SizeBytes),
        State: __expectString(output.State),
        StateReason: __expectString(output.StateReason),
    };
};
var deserializeAws_json1_1DescribeConnectionResponse = function (output, context) {
    return {
        AuthParameters: output.AuthParameters != null
            ? deserializeAws_json1_1ConnectionAuthResponseParameters(output.AuthParameters, context)
            : undefined,
        AuthorizationType: __expectString(output.AuthorizationType),
        ConnectionArn: __expectString(output.ConnectionArn),
        ConnectionState: __expectString(output.ConnectionState),
        CreationTime: output.CreationTime != null
            ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
            : undefined,
        Description: __expectString(output.Description),
        LastAuthorizedTime: output.LastAuthorizedTime != null
            ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastAuthorizedTime)))
            : undefined,
        LastModifiedTime: output.LastModifiedTime != null
            ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastModifiedTime)))
            : undefined,
        Name: __expectString(output.Name),
        SecretArn: __expectString(output.SecretArn),
        StateReason: __expectString(output.StateReason),
    };
};
var deserializeAws_json1_1DescribeEndpointResponse = function (output, context) {
    return {
        Arn: __expectString(output.Arn),
        CreationTime: output.CreationTime != null
            ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
            : undefined,
        Description: __expectString(output.Description),
        EndpointId: __expectString(output.EndpointId),
        EndpointUrl: __expectString(output.EndpointUrl),
        EventBuses: output.EventBuses != null ? deserializeAws_json1_1EndpointEventBusList(output.EventBuses, context) : undefined,
        LastModifiedTime: output.LastModifiedTime != null
            ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastModifiedTime)))
            : undefined,
        Name: __expectString(output.Name),
        ReplicationConfig: output.ReplicationConfig != null
            ? deserializeAws_json1_1ReplicationConfig(output.ReplicationConfig, context)
            : undefined,
        RoleArn: __expectString(output.RoleArn),
        RoutingConfig: output.RoutingConfig != null ? deserializeAws_json1_1RoutingConfig(output.RoutingConfig, context) : undefined,
        State: __expectString(output.State),
        StateReason: __expectString(output.StateReason),
    };
};
var deserializeAws_json1_1DescribeEventBusResponse = function (output, context) {
    return {
        Arn: __expectString(output.Arn),
        Name: __expectString(output.Name),
        Policy: __expectString(output.Policy),
    };
};
var deserializeAws_json1_1DescribeEventSourceResponse = function (output, context) {
    return {
        Arn: __expectString(output.Arn),
        CreatedBy: __expectString(output.CreatedBy),
        CreationTime: output.CreationTime != null
            ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
            : undefined,
        ExpirationTime: output.ExpirationTime != null
            ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.ExpirationTime)))
            : undefined,
        Name: __expectString(output.Name),
        State: __expectString(output.State),
    };
};
var deserializeAws_json1_1DescribePartnerEventSourceResponse = function (output, context) {
    return {
        Arn: __expectString(output.Arn),
        Name: __expectString(output.Name),
    };
};
var deserializeAws_json1_1DescribeReplayResponse = function (output, context) {
    return {
        Description: __expectString(output.Description),
        Destination: output.Destination != null ? deserializeAws_json1_1ReplayDestination(output.Destination, context) : undefined,
        EventEndTime: output.EventEndTime != null
            ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.EventEndTime)))
            : undefined,
        EventLastReplayedTime: output.EventLastReplayedTime != null
            ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.EventLastReplayedTime)))
            : undefined,
        EventSourceArn: __expectString(output.EventSourceArn),
        EventStartTime: output.EventStartTime != null
            ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.EventStartTime)))
            : undefined,
        ReplayArn: __expectString(output.ReplayArn),
        ReplayEndTime: output.ReplayEndTime != null
            ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.ReplayEndTime)))
            : undefined,
        ReplayName: __expectString(output.ReplayName),
        ReplayStartTime: output.ReplayStartTime != null
            ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.ReplayStartTime)))
            : undefined,
        State: __expectString(output.State),
        StateReason: __expectString(output.StateReason),
    };
};
var deserializeAws_json1_1DescribeRuleResponse = function (output, context) {
    return {
        Arn: __expectString(output.Arn),
        CreatedBy: __expectString(output.CreatedBy),
        Description: __expectString(output.Description),
        EventBusName: __expectString(output.EventBusName),
        EventPattern: __expectString(output.EventPattern),
        ManagedBy: __expectString(output.ManagedBy),
        Name: __expectString(output.Name),
        RoleArn: __expectString(output.RoleArn),
        ScheduleExpression: __expectString(output.ScheduleExpression),
        State: __expectString(output.State),
    };
};
var deserializeAws_json1_1EcsParameters = function (output, context) {
    return {
        CapacityProviderStrategy: output.CapacityProviderStrategy != null
            ? deserializeAws_json1_1CapacityProviderStrategy(output.CapacityProviderStrategy, context)
            : undefined,
        EnableECSManagedTags: __expectBoolean(output.EnableECSManagedTags),
        EnableExecuteCommand: __expectBoolean(output.EnableExecuteCommand),
        Group: __expectString(output.Group),
        LaunchType: __expectString(output.LaunchType),
        NetworkConfiguration: output.NetworkConfiguration != null
            ? deserializeAws_json1_1NetworkConfiguration(output.NetworkConfiguration, context)
            : undefined,
        PlacementConstraints: output.PlacementConstraints != null
            ? deserializeAws_json1_1PlacementConstraints(output.PlacementConstraints, context)
            : undefined,
        PlacementStrategy: output.PlacementStrategy != null
            ? deserializeAws_json1_1PlacementStrategies(output.PlacementStrategy, context)
            : undefined,
        PlatformVersion: __expectString(output.PlatformVersion),
        PropagateTags: __expectString(output.PropagateTags),
        ReferenceId: __expectString(output.ReferenceId),
        Tags: output.Tags != null ? deserializeAws_json1_1TagList(output.Tags, context) : undefined,
        TaskCount: __expectInt32(output.TaskCount),
        TaskDefinitionArn: __expectString(output.TaskDefinitionArn),
    };
};
var deserializeAws_json1_1Endpoint = function (output, context) {
    return {
        Arn: __expectString(output.Arn),
        CreationTime: output.CreationTime != null
            ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
            : undefined,
        Description: __expectString(output.Description),
        EndpointId: __expectString(output.EndpointId),
        EndpointUrl: __expectString(output.EndpointUrl),
        EventBuses: output.EventBuses != null ? deserializeAws_json1_1EndpointEventBusList(output.EventBuses, context) : undefined,
        LastModifiedTime: output.LastModifiedTime != null
            ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastModifiedTime)))
            : undefined,
        Name: __expectString(output.Name),
        ReplicationConfig: output.ReplicationConfig != null
            ? deserializeAws_json1_1ReplicationConfig(output.ReplicationConfig, context)
            : undefined,
        RoleArn: __expectString(output.RoleArn),
        RoutingConfig: output.RoutingConfig != null ? deserializeAws_json1_1RoutingConfig(output.RoutingConfig, context) : undefined,
        State: __expectString(output.State),
        StateReason: __expectString(output.StateReason),
    };
};
var deserializeAws_json1_1EndpointEventBus = function (output, context) {
    return {
        EventBusArn: __expectString(output.EventBusArn),
    };
};
var deserializeAws_json1_1EndpointEventBusList = function (output, context) {
    var retVal = (output || [])
        .filter(function (e) { return e != null; })
        .map(function (entry) {
        if (entry === null) {
            return null;
        }
        return deserializeAws_json1_1EndpointEventBus(entry, context);
    });
    return retVal;
};
var deserializeAws_json1_1EndpointList = function (output, context) {
    var retVal = (output || [])
        .filter(function (e) { return e != null; })
        .map(function (entry) {
        if (entry === null) {
            return null;
        }
        return deserializeAws_json1_1Endpoint(entry, context);
    });
    return retVal;
};
var deserializeAws_json1_1EventBus = function (output, context) {
    return {
        Arn: __expectString(output.Arn),
        Name: __expectString(output.Name),
        Policy: __expectString(output.Policy),
    };
};
var deserializeAws_json1_1EventBusList = function (output, context) {
    var retVal = (output || [])
        .filter(function (e) { return e != null; })
        .map(function (entry) {
        if (entry === null) {
            return null;
        }
        return deserializeAws_json1_1EventBus(entry, context);
    });
    return retVal;
};
var deserializeAws_json1_1EventSource = function (output, context) {
    return {
        Arn: __expectString(output.Arn),
        CreatedBy: __expectString(output.CreatedBy),
        CreationTime: output.CreationTime != null
            ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
            : undefined,
        ExpirationTime: output.ExpirationTime != null
            ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.ExpirationTime)))
            : undefined,
        Name: __expectString(output.Name),
        State: __expectString(output.State),
    };
};
var deserializeAws_json1_1EventSourceList = function (output, context) {
    var retVal = (output || [])
        .filter(function (e) { return e != null; })
        .map(function (entry) {
        if (entry === null) {
            return null;
        }
        return deserializeAws_json1_1EventSource(entry, context);
    });
    return retVal;
};
var deserializeAws_json1_1FailoverConfig = function (output, context) {
    return {
        Primary: output.Primary != null ? deserializeAws_json1_1Primary(output.Primary, context) : undefined,
        Secondary: output.Secondary != null ? deserializeAws_json1_1Secondary(output.Secondary, context) : undefined,
    };
};
var deserializeAws_json1_1HeaderParametersMap = function (output, context) {
    return Object.entries(output).reduce(function (acc, _a) {
        var _b;
        var _c = __read(_a, 2), key = _c[0], value = _c[1];
        if (value === null) {
            return acc;
        }
        return __assign(__assign({}, acc), (_b = {}, _b[key] = __expectString(value), _b));
    }, {});
};
var deserializeAws_json1_1HttpParameters = function (output, context) {
    return {
        HeaderParameters: output.HeaderParameters != null
            ? deserializeAws_json1_1HeaderParametersMap(output.HeaderParameters, context)
            : undefined,
        PathParameterValues: output.PathParameterValues != null
            ? deserializeAws_json1_1PathParameterList(output.PathParameterValues, context)
            : undefined,
        QueryStringParameters: output.QueryStringParameters != null
            ? deserializeAws_json1_1QueryStringParametersMap(output.QueryStringParameters, context)
            : undefined,
    };
};
var deserializeAws_json1_1IllegalStatusException = function (output, context) {
    return {
        message: __expectString(output.message),
    };
};
var deserializeAws_json1_1InputTransformer = function (output, context) {
    return {
        InputPathsMap: output.InputPathsMap != null ? deserializeAws_json1_1TransformerPaths(output.InputPathsMap, context) : undefined,
        InputTemplate: __expectString(output.InputTemplate),
    };
};
var deserializeAws_json1_1InternalException = function (output, context) {
    return {
        message: __expectString(output.message),
    };
};
var deserializeAws_json1_1InvalidEventPatternException = function (output, context) {
    return {
        message: __expectString(output.message),
    };
};
var deserializeAws_json1_1InvalidStateException = function (output, context) {
    return {
        message: __expectString(output.message),
    };
};
var deserializeAws_json1_1KinesisParameters = function (output, context) {
    return {
        PartitionKeyPath: __expectString(output.PartitionKeyPath),
    };
};
var deserializeAws_json1_1LimitExceededException = function (output, context) {
    return {
        message: __expectString(output.message),
    };
};
var deserializeAws_json1_1ListApiDestinationsResponse = function (output, context) {
    return {
        ApiDestinations: output.ApiDestinations != null
            ? deserializeAws_json1_1ApiDestinationResponseList(output.ApiDestinations, context)
            : undefined,
        NextToken: __expectString(output.NextToken),
    };
};
var deserializeAws_json1_1ListArchivesResponse = function (output, context) {
    return {
        Archives: output.Archives != null ? deserializeAws_json1_1ArchiveResponseList(output.Archives, context) : undefined,
        NextToken: __expectString(output.NextToken),
    };
};
var deserializeAws_json1_1ListConnectionsResponse = function (output, context) {
    return {
        Connections: output.Connections != null
            ? deserializeAws_json1_1ConnectionResponseList(output.Connections, context)
            : undefined,
        NextToken: __expectString(output.NextToken),
    };
};
var deserializeAws_json1_1ListEndpointsResponse = function (output, context) {
    return {
        Endpoints: output.Endpoints != null ? deserializeAws_json1_1EndpointList(output.Endpoints, context) : undefined,
        NextToken: __expectString(output.NextToken),
    };
};
var deserializeAws_json1_1ListEventBusesResponse = function (output, context) {
    return {
        EventBuses: output.EventBuses != null ? deserializeAws_json1_1EventBusList(output.EventBuses, context) : undefined,
        NextToken: __expectString(output.NextToken),
    };
};
var deserializeAws_json1_1ListEventSourcesResponse = function (output, context) {
    return {
        EventSources: output.EventSources != null ? deserializeAws_json1_1EventSourceList(output.EventSources, context) : undefined,
        NextToken: __expectString(output.NextToken),
    };
};
var deserializeAws_json1_1ListPartnerEventSourceAccountsResponse = function (output, context) {
    return {
        NextToken: __expectString(output.NextToken),
        PartnerEventSourceAccounts: output.PartnerEventSourceAccounts != null
            ? deserializeAws_json1_1PartnerEventSourceAccountList(output.PartnerEventSourceAccounts, context)
            : undefined,
    };
};
var deserializeAws_json1_1ListPartnerEventSourcesResponse = function (output, context) {
    return {
        NextToken: __expectString(output.NextToken),
        PartnerEventSources: output.PartnerEventSources != null
            ? deserializeAws_json1_1PartnerEventSourceList(output.PartnerEventSources, context)
            : undefined,
    };
};
var deserializeAws_json1_1ListReplaysResponse = function (output, context) {
    return {
        NextToken: __expectString(output.NextToken),
        Replays: output.Replays != null ? deserializeAws_json1_1ReplayList(output.Replays, context) : undefined,
    };
};
var deserializeAws_json1_1ListRuleNamesByTargetResponse = function (output, context) {
    return {
        NextToken: __expectString(output.NextToken),
        RuleNames: output.RuleNames != null ? deserializeAws_json1_1RuleNameList(output.RuleNames, context) : undefined,
    };
};
var deserializeAws_json1_1ListRulesResponse = function (output, context) {
    return {
        NextToken: __expectString(output.NextToken),
        Rules: output.Rules != null ? deserializeAws_json1_1RuleResponseList(output.Rules, context) : undefined,
    };
};
var deserializeAws_json1_1ListTagsForResourceResponse = function (output, context) {
    return {
        Tags: output.Tags != null ? deserializeAws_json1_1TagList(output.Tags, context) : undefined,
    };
};
var deserializeAws_json1_1ListTargetsByRuleResponse = function (output, context) {
    return {
        NextToken: __expectString(output.NextToken),
        Targets: output.Targets != null ? deserializeAws_json1_1TargetList(output.Targets, context) : undefined,
    };
};
var deserializeAws_json1_1ManagedRuleException = function (output, context) {
    return {
        message: __expectString(output.message),
    };
};
var deserializeAws_json1_1NetworkConfiguration = function (output, context) {
    return {
        awsvpcConfiguration: output.awsvpcConfiguration != null
            ? deserializeAws_json1_1AwsVpcConfiguration(output.awsvpcConfiguration, context)
            : undefined,
    };
};
var deserializeAws_json1_1OperationDisabledException = function (output, context) {
    return {
        message: __expectString(output.message),
    };
};
var deserializeAws_json1_1PartnerEventSource = function (output, context) {
    return {
        Arn: __expectString(output.Arn),
        Name: __expectString(output.Name),
    };
};
var deserializeAws_json1_1PartnerEventSourceAccount = function (output, context) {
    return {
        Account: __expectString(output.Account),
        CreationTime: output.CreationTime != null
            ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
            : undefined,
        ExpirationTime: output.ExpirationTime != null
            ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.ExpirationTime)))
            : undefined,
        State: __expectString(output.State),
    };
};
var deserializeAws_json1_1PartnerEventSourceAccountList = function (output, context) {
    var retVal = (output || [])
        .filter(function (e) { return e != null; })
        .map(function (entry) {
        if (entry === null) {
            return null;
        }
        return deserializeAws_json1_1PartnerEventSourceAccount(entry, context);
    });
    return retVal;
};
var deserializeAws_json1_1PartnerEventSourceList = function (output, context) {
    var retVal = (output || [])
        .filter(function (e) { return e != null; })
        .map(function (entry) {
        if (entry === null) {
            return null;
        }
        return deserializeAws_json1_1PartnerEventSource(entry, context);
    });
    return retVal;
};
var deserializeAws_json1_1PathParameterList = function (output, context) {
    var retVal = (output || [])
        .filter(function (e) { return e != null; })
        .map(function (entry) {
        if (entry === null) {
            return null;
        }
        return __expectString(entry);
    });
    return retVal;
};
var deserializeAws_json1_1PlacementConstraint = function (output, context) {
    return {
        expression: __expectString(output.expression),
        type: __expectString(output.type),
    };
};
var deserializeAws_json1_1PlacementConstraints = function (output, context) {
    var retVal = (output || [])
        .filter(function (e) { return e != null; })
        .map(function (entry) {
        if (entry === null) {
            return null;
        }
        return deserializeAws_json1_1PlacementConstraint(entry, context);
    });
    return retVal;
};
var deserializeAws_json1_1PlacementStrategies = function (output, context) {
    var retVal = (output || [])
        .filter(function (e) { return e != null; })
        .map(function (entry) {
        if (entry === null) {
            return null;
        }
        return deserializeAws_json1_1PlacementStrategy(entry, context);
    });
    return retVal;
};
var deserializeAws_json1_1PlacementStrategy = function (output, context) {
    return {
        field: __expectString(output.field),
        type: __expectString(output.type),
    };
};
var deserializeAws_json1_1PolicyLengthExceededException = function (output, context) {
    return {
        message: __expectString(output.message),
    };
};
var deserializeAws_json1_1Primary = function (output, context) {
    return {
        HealthCheck: __expectString(output.HealthCheck),
    };
};
var deserializeAws_json1_1PutEventsResponse = function (output, context) {
    return {
        Entries: output.Entries != null ? deserializeAws_json1_1PutEventsResultEntryList(output.Entries, context) : undefined,
        FailedEntryCount: __expectInt32(output.FailedEntryCount),
    };
};
var deserializeAws_json1_1PutEventsResultEntry = function (output, context) {
    return {
        ErrorCode: __expectString(output.ErrorCode),
        ErrorMessage: __expectString(output.ErrorMessage),
        EventId: __expectString(output.EventId),
    };
};
var deserializeAws_json1_1PutEventsResultEntryList = function (output, context) {
    var retVal = (output || [])
        .filter(function (e) { return e != null; })
        .map(function (entry) {
        if (entry === null) {
            return null;
        }
        return deserializeAws_json1_1PutEventsResultEntry(entry, context);
    });
    return retVal;
};
var deserializeAws_json1_1PutPartnerEventsResponse = function (output, context) {
    return {
        Entries: output.Entries != null
            ? deserializeAws_json1_1PutPartnerEventsResultEntryList(output.Entries, context)
            : undefined,
        FailedEntryCount: __expectInt32(output.FailedEntryCount),
    };
};
var deserializeAws_json1_1PutPartnerEventsResultEntry = function (output, context) {
    return {
        ErrorCode: __expectString(output.ErrorCode),
        ErrorMessage: __expectString(output.ErrorMessage),
        EventId: __expectString(output.EventId),
    };
};
var deserializeAws_json1_1PutPartnerEventsResultEntryList = function (output, context) {
    var retVal = (output || [])
        .filter(function (e) { return e != null; })
        .map(function (entry) {
        if (entry === null) {
            return null;
        }
        return deserializeAws_json1_1PutPartnerEventsResultEntry(entry, context);
    });
    return retVal;
};
var deserializeAws_json1_1PutRuleResponse = function (output, context) {
    return {
        RuleArn: __expectString(output.RuleArn),
    };
};
var deserializeAws_json1_1PutTargetsResponse = function (output, context) {
    return {
        FailedEntries: output.FailedEntries != null
            ? deserializeAws_json1_1PutTargetsResultEntryList(output.FailedEntries, context)
            : undefined,
        FailedEntryCount: __expectInt32(output.FailedEntryCount),
    };
};
var deserializeAws_json1_1PutTargetsResultEntry = function (output, context) {
    return {
        ErrorCode: __expectString(output.ErrorCode),
        ErrorMessage: __expectString(output.ErrorMessage),
        TargetId: __expectString(output.TargetId),
    };
};
var deserializeAws_json1_1PutTargetsResultEntryList = function (output, context) {
    var retVal = (output || [])
        .filter(function (e) { return e != null; })
        .map(function (entry) {
        if (entry === null) {
            return null;
        }
        return deserializeAws_json1_1PutTargetsResultEntry(entry, context);
    });
    return retVal;
};
var deserializeAws_json1_1QueryStringParametersMap = function (output, context) {
    return Object.entries(output).reduce(function (acc, _a) {
        var _b;
        var _c = __read(_a, 2), key = _c[0], value = _c[1];
        if (value === null) {
            return acc;
        }
        return __assign(__assign({}, acc), (_b = {}, _b[key] = __expectString(value), _b));
    }, {});
};
var deserializeAws_json1_1RedshiftDataParameters = function (output, context) {
    return {
        Database: __expectString(output.Database),
        DbUser: __expectString(output.DbUser),
        SecretManagerArn: __expectString(output.SecretManagerArn),
        Sql: __expectString(output.Sql),
        StatementName: __expectString(output.StatementName),
        WithEvent: __expectBoolean(output.WithEvent),
    };
};
var deserializeAws_json1_1RemoveTargetsResponse = function (output, context) {
    return {
        FailedEntries: output.FailedEntries != null
            ? deserializeAws_json1_1RemoveTargetsResultEntryList(output.FailedEntries, context)
            : undefined,
        FailedEntryCount: __expectInt32(output.FailedEntryCount),
    };
};
var deserializeAws_json1_1RemoveTargetsResultEntry = function (output, context) {
    return {
        ErrorCode: __expectString(output.ErrorCode),
        ErrorMessage: __expectString(output.ErrorMessage),
        TargetId: __expectString(output.TargetId),
    };
};
var deserializeAws_json1_1RemoveTargetsResultEntryList = function (output, context) {
    var retVal = (output || [])
        .filter(function (e) { return e != null; })
        .map(function (entry) {
        if (entry === null) {
            return null;
        }
        return deserializeAws_json1_1RemoveTargetsResultEntry(entry, context);
    });
    return retVal;
};
var deserializeAws_json1_1Replay = function (output, context) {
    return {
        EventEndTime: output.EventEndTime != null
            ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.EventEndTime)))
            : undefined,
        EventLastReplayedTime: output.EventLastReplayedTime != null
            ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.EventLastReplayedTime)))
            : undefined,
        EventSourceArn: __expectString(output.EventSourceArn),
        EventStartTime: output.EventStartTime != null
            ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.EventStartTime)))
            : undefined,
        ReplayEndTime: output.ReplayEndTime != null
            ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.ReplayEndTime)))
            : undefined,
        ReplayName: __expectString(output.ReplayName),
        ReplayStartTime: output.ReplayStartTime != null
            ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.ReplayStartTime)))
            : undefined,
        State: __expectString(output.State),
        StateReason: __expectString(output.StateReason),
    };
};
var deserializeAws_json1_1ReplayDestination = function (output, context) {
    return {
        Arn: __expectString(output.Arn),
        FilterArns: output.FilterArns != null
            ? deserializeAws_json1_1ReplayDestinationFilters(output.FilterArns, context)
            : undefined,
    };
};
var deserializeAws_json1_1ReplayDestinationFilters = function (output, context) {
    var retVal = (output || [])
        .filter(function (e) { return e != null; })
        .map(function (entry) {
        if (entry === null) {
            return null;
        }
        return __expectString(entry);
    });
    return retVal;
};
var deserializeAws_json1_1ReplayList = function (output, context) {
    var retVal = (output || [])
        .filter(function (e) { return e != null; })
        .map(function (entry) {
        if (entry === null) {
            return null;
        }
        return deserializeAws_json1_1Replay(entry, context);
    });
    return retVal;
};
var deserializeAws_json1_1ReplicationConfig = function (output, context) {
    return {
        State: __expectString(output.State),
    };
};
var deserializeAws_json1_1ResourceAlreadyExistsException = function (output, context) {
    return {
        message: __expectString(output.message),
    };
};
var deserializeAws_json1_1ResourceNotFoundException = function (output, context) {
    return {
        message: __expectString(output.message),
    };
};
var deserializeAws_json1_1RetryPolicy = function (output, context) {
    return {
        MaximumEventAgeInSeconds: __expectInt32(output.MaximumEventAgeInSeconds),
        MaximumRetryAttempts: __expectInt32(output.MaximumRetryAttempts),
    };
};
var deserializeAws_json1_1RoutingConfig = function (output, context) {
    return {
        FailoverConfig: output.FailoverConfig != null ? deserializeAws_json1_1FailoverConfig(output.FailoverConfig, context) : undefined,
    };
};
var deserializeAws_json1_1Rule = function (output, context) {
    return {
        Arn: __expectString(output.Arn),
        Description: __expectString(output.Description),
        EventBusName: __expectString(output.EventBusName),
        EventPattern: __expectString(output.EventPattern),
        ManagedBy: __expectString(output.ManagedBy),
        Name: __expectString(output.Name),
        RoleArn: __expectString(output.RoleArn),
        ScheduleExpression: __expectString(output.ScheduleExpression),
        State: __expectString(output.State),
    };
};
var deserializeAws_json1_1RuleNameList = function (output, context) {
    var retVal = (output || [])
        .filter(function (e) { return e != null; })
        .map(function (entry) {
        if (entry === null) {
            return null;
        }
        return __expectString(entry);
    });
    return retVal;
};
var deserializeAws_json1_1RuleResponseList = function (output, context) {
    var retVal = (output || [])
        .filter(function (e) { return e != null; })
        .map(function (entry) {
        if (entry === null) {
            return null;
        }
        return deserializeAws_json1_1Rule(entry, context);
    });
    return retVal;
};
var deserializeAws_json1_1RunCommandParameters = function (output, context) {
    return {
        RunCommandTargets: output.RunCommandTargets != null
            ? deserializeAws_json1_1RunCommandTargets(output.RunCommandTargets, context)
            : undefined,
    };
};
var deserializeAws_json1_1RunCommandTarget = function (output, context) {
    return {
        Key: __expectString(output.Key),
        Values: output.Values != null ? deserializeAws_json1_1RunCommandTargetValues(output.Values, context) : undefined,
    };
};
var deserializeAws_json1_1RunCommandTargets = function (output, context) {
    var retVal = (output || [])
        .filter(function (e) { return e != null; })
        .map(function (entry) {
        if (entry === null) {
            return null;
        }
        return deserializeAws_json1_1RunCommandTarget(entry, context);
    });
    return retVal;
};
var deserializeAws_json1_1RunCommandTargetValues = function (output, context) {
    var retVal = (output || [])
        .filter(function (e) { return e != null; })
        .map(function (entry) {
        if (entry === null) {
            return null;
        }
        return __expectString(entry);
    });
    return retVal;
};
var deserializeAws_json1_1SageMakerPipelineParameter = function (output, context) {
    return {
        Name: __expectString(output.Name),
        Value: __expectString(output.Value),
    };
};
var deserializeAws_json1_1SageMakerPipelineParameterList = function (output, context) {
    var retVal = (output || [])
        .filter(function (e) { return e != null; })
        .map(function (entry) {
        if (entry === null) {
            return null;
        }
        return deserializeAws_json1_1SageMakerPipelineParameter(entry, context);
    });
    return retVal;
};
var deserializeAws_json1_1SageMakerPipelineParameters = function (output, context) {
    return {
        PipelineParameterList: output.PipelineParameterList != null
            ? deserializeAws_json1_1SageMakerPipelineParameterList(output.PipelineParameterList, context)
            : undefined,
    };
};
var deserializeAws_json1_1Secondary = function (output, context) {
    return {
        Route: __expectString(output.Route),
    };
};
var deserializeAws_json1_1SqsParameters = function (output, context) {
    return {
        MessageGroupId: __expectString(output.MessageGroupId),
    };
};
var deserializeAws_json1_1StartReplayResponse = function (output, context) {
    return {
        ReplayArn: __expectString(output.ReplayArn),
        ReplayStartTime: output.ReplayStartTime != null
            ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.ReplayStartTime)))
            : undefined,
        State: __expectString(output.State),
        StateReason: __expectString(output.StateReason),
    };
};
var deserializeAws_json1_1StringList = function (output, context) {
    var retVal = (output || [])
        .filter(function (e) { return e != null; })
        .map(function (entry) {
        if (entry === null) {
            return null;
        }
        return __expectString(entry);
    });
    return retVal;
};
var deserializeAws_json1_1Tag = function (output, context) {
    return {
        Key: __expectString(output.Key),
        Value: __expectString(output.Value),
    };
};
var deserializeAws_json1_1TagList = function (output, context) {
    var retVal = (output || [])
        .filter(function (e) { return e != null; })
        .map(function (entry) {
        if (entry === null) {
            return null;
        }
        return deserializeAws_json1_1Tag(entry, context);
    });
    return retVal;
};
var deserializeAws_json1_1TagResourceResponse = function (output, context) {
    return {};
};
var deserializeAws_json1_1Target = function (output, context) {
    return {
        Arn: __expectString(output.Arn),
        BatchParameters: output.BatchParameters != null
            ? deserializeAws_json1_1BatchParameters(output.BatchParameters, context)
            : undefined,
        DeadLetterConfig: output.DeadLetterConfig != null
            ? deserializeAws_json1_1DeadLetterConfig(output.DeadLetterConfig, context)
            : undefined,
        EcsParameters: output.EcsParameters != null ? deserializeAws_json1_1EcsParameters(output.EcsParameters, context) : undefined,
        HttpParameters: output.HttpParameters != null ? deserializeAws_json1_1HttpParameters(output.HttpParameters, context) : undefined,
        Id: __expectString(output.Id),
        Input: __expectString(output.Input),
        InputPath: __expectString(output.InputPath),
        InputTransformer: output.InputTransformer != null
            ? deserializeAws_json1_1InputTransformer(output.InputTransformer, context)
            : undefined,
        KinesisParameters: output.KinesisParameters != null
            ? deserializeAws_json1_1KinesisParameters(output.KinesisParameters, context)
            : undefined,
        RedshiftDataParameters: output.RedshiftDataParameters != null
            ? deserializeAws_json1_1RedshiftDataParameters(output.RedshiftDataParameters, context)
            : undefined,
        RetryPolicy: output.RetryPolicy != null ? deserializeAws_json1_1RetryPolicy(output.RetryPolicy, context) : undefined,
        RoleArn: __expectString(output.RoleArn),
        RunCommandParameters: output.RunCommandParameters != null
            ? deserializeAws_json1_1RunCommandParameters(output.RunCommandParameters, context)
            : undefined,
        SageMakerPipelineParameters: output.SageMakerPipelineParameters != null
            ? deserializeAws_json1_1SageMakerPipelineParameters(output.SageMakerPipelineParameters, context)
            : undefined,
        SqsParameters: output.SqsParameters != null ? deserializeAws_json1_1SqsParameters(output.SqsParameters, context) : undefined,
    };
};
var deserializeAws_json1_1TargetList = function (output, context) {
    var retVal = (output || [])
        .filter(function (e) { return e != null; })
        .map(function (entry) {
        if (entry === null) {
            return null;
        }
        return deserializeAws_json1_1Target(entry, context);
    });
    return retVal;
};
var deserializeAws_json1_1TestEventPatternResponse = function (output, context) {
    return {
        Result: __expectBoolean(output.Result),
    };
};
var deserializeAws_json1_1TransformerPaths = function (output, context) {
    return Object.entries(output).reduce(function (acc, _a) {
        var _b;
        var _c = __read(_a, 2), key = _c[0], value = _c[1];
        if (value === null) {
            return acc;
        }
        return __assign(__assign({}, acc), (_b = {}, _b[key] = __expectString(value), _b));
    }, {});
};
var deserializeAws_json1_1UntagResourceResponse = function (output, context) {
    return {};
};
var deserializeAws_json1_1UpdateApiDestinationResponse = function (output, context) {
    return {
        ApiDestinationArn: __expectString(output.ApiDestinationArn),
        ApiDestinationState: __expectString(output.ApiDestinationState),
        CreationTime: output.CreationTime != null
            ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
            : undefined,
        LastModifiedTime: output.LastModifiedTime != null
            ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastModifiedTime)))
            : undefined,
    };
};
var deserializeAws_json1_1UpdateArchiveResponse = function (output, context) {
    return {
        ArchiveArn: __expectString(output.ArchiveArn),
        CreationTime: output.CreationTime != null
            ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
            : undefined,
        State: __expectString(output.State),
        StateReason: __expectString(output.StateReason),
    };
};
var deserializeAws_json1_1UpdateConnectionResponse = function (output, context) {
    return {
        ConnectionArn: __expectString(output.ConnectionArn),
        ConnectionState: __expectString(output.ConnectionState),
        CreationTime: output.CreationTime != null
            ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
            : undefined,
        LastAuthorizedTime: output.LastAuthorizedTime != null
            ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastAuthorizedTime)))
            : undefined,
        LastModifiedTime: output.LastModifiedTime != null
            ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastModifiedTime)))
            : undefined,
    };
};
var deserializeAws_json1_1UpdateEndpointResponse = function (output, context) {
    return {
        Arn: __expectString(output.Arn),
        EndpointId: __expectString(output.EndpointId),
        EndpointUrl: __expectString(output.EndpointUrl),
        EventBuses: output.EventBuses != null ? deserializeAws_json1_1EndpointEventBusList(output.EventBuses, context) : undefined,
        Name: __expectString(output.Name),
        ReplicationConfig: output.ReplicationConfig != null
            ? deserializeAws_json1_1ReplicationConfig(output.ReplicationConfig, context)
            : undefined,
        RoleArn: __expectString(output.RoleArn),
        RoutingConfig: output.RoutingConfig != null ? deserializeAws_json1_1RoutingConfig(output.RoutingConfig, context) : undefined,
        State: __expectString(output.State),
    };
};
var deserializeMetadata = function (output) {
    var _a;
    return ({
        httpStatusCode: output.statusCode,
        requestId: (_a = output.headers["x-amzn-requestid"]) !== null && _a !== void 0 ? _a : output.headers["x-amzn-request-id"],
        extendedRequestId: output.headers["x-amz-id-2"],
        cfId: output.headers["x-amz-cf-id"],
    });
};
var collectBody = function (streamBody, context) {
    if (streamBody === void 0) { streamBody = new Uint8Array(); }
    if (streamBody instanceof Uint8Array) {
        return Promise.resolve(streamBody);
    }
    return context.streamCollector(streamBody) || Promise.resolve(new Uint8Array());
};
var collectBodyString = function (streamBody, context) {
    return collectBody(streamBody, context).then(function (body) { return context.utf8Encoder(body); });
};
var buildHttpRpcRequest = function (context, headers, path, resolvedHostname, body) { return __awaiter(void 0, void 0, void 0, function () {
    var _a, hostname, _b, protocol, port, basePath, contents;
    return __generator(this, function (_c) {
        switch (_c.label) {
            case 0: return [4, context.endpoint()];
            case 1:
                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port, basePath = _a.path;
                contents = {
                    protocol: protocol,
                    hostname: hostname,
                    port: port,
                    method: "POST",
                    path: basePath.endsWith("/") ? basePath.slice(0, -1) + path : basePath + path,
                    headers: headers,
                };
                if (resolvedHostname !== undefined) {
                    contents.hostname = resolvedHostname;
                }
                if (body !== undefined) {
                    contents.body = body;
                }
                return [2, new __HttpRequest(contents)];
        }
    });
}); };
var parseBody = function (streamBody, context) {
    return collectBodyString(streamBody, context).then(function (encoded) {
        if (encoded.length) {
            return JSON.parse(encoded);
        }
        return {};
    });
};
var loadRestJsonErrorCode = function (output, data) {
    var findKey = function (object, key) { return Object.keys(object).find(function (k) { return k.toLowerCase() === key.toLowerCase(); }); };
    var sanitizeErrorCode = function (rawValue) {
        var cleanValue = rawValue;
        if (typeof cleanValue === "number") {
            cleanValue = cleanValue.toString();
        }
        if (cleanValue.indexOf(":") >= 0) {
            cleanValue = cleanValue.split(":")[0];
        }
        if (cleanValue.indexOf("#") >= 0) {
            cleanValue = cleanValue.split("#")[1];
        }
        return cleanValue;
    };
    var headerKey = findKey(output.headers, "x-amzn-errortype");
    if (headerKey !== undefined) {
        return sanitizeErrorCode(output.headers[headerKey]);
    }
    if (data.code !== undefined) {
        return sanitizeErrorCode(data.code);
    }
    if (data["__type"] !== undefined) {
        return sanitizeErrorCode(data["__type"]);
    }
};
